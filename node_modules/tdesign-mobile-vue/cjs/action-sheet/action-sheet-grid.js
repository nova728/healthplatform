/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var grid_index = require('../grid/index.js');
var swiper_index = require('../swiper/index.js');
var hooks_useClass = require('../hooks/useClass.js');
require('../grid/grid.js');
require('../config.js');
require('../grid/props.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('../grid/grid-item.js');
require('lodash/isObject');
require('../grid/grid-item-props.js');
require('../hooks/tnode.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('../image/index.js');
require('../image/image.js');
require('@babel/runtime/helpers/slicedToArray');
require('@vueuse/core');
require('tdesign-icons-vue-next');
require('../loading/index.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('../loading/icon/spinner.js');
require('../loading/props.js');
require('../shared/dom.js');
require('../loading/plugin.js');
require('../shared/component.js');
require('../image/props.js');
require('../badge/index.js');
require('../badge/badge.js');
require('../badge/props.js');
require('../swiper/swiper.js');
require('../swipe-cell/useSwipe.js');
require('../shared/util.js');
require('../swiper/props.js');
require('../shared/useVModel/index.js');
require('../swiper/swiper-item.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !vue.isVNode(s);
}
var ActionSheetGrid = vue.defineComponent({
  components: {
    TGrid: grid_index.Grid,
    TGridItem: grid_index.GridItem,
    TSwiper: swiper_index.Swiper,
    TSwiperItem: swiper_index.SwiperItem
  },
  props: {
    items: {
      type: Array,
      required: true
    },
    count: {
      type: Number,
      default: 8
    },
    selected: {
      type: Function,
      default: void 0
    }
  },
  emits: ["selected"],
  setup: function setup(props, _ref) {
    var emit = _ref.emit;
    var actionSheetClass = hooks_useClass.usePrefixClass("action-sheet");
    var gridColumn = vue.computed(function () {
      return Math.ceil(props.count / 2);
    });
    var pageNum = vue.computed(function () {
      return Math.ceil(props.items.length / props.count);
    });
    var actionItems = vue.computed(function () {
      var res = [];
      for (var i = 0; i < pageNum.value; i++) {
        var temp = props.items.slice(i * props.count, (i + 1) * props.count);
        res.push(temp);
      }
      return res;
    });
    var gridClasses = vue.computed(function () {
      return _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(actionSheetClass.value, "__grid"), true), "".concat(actionSheetClass.value, "__grid--swiper"), pageNum.value > 1), "".concat(actionSheetClass.value, "__dots"), pageNum.value > 1);
    });
    var handleSelected = function handleSelected(i) {
      emit("selected", i);
    };
    return function () {
      var swiper = function swiper() {
        var swiperItems = actionItems.value.map(function (items, i) {
          var gridItems = items.map(function (item, index) {
            return vue.createVNode(vue.resolveComponent("t-grid-item"), {
              "key": index,
              "text": item.label,
              "image": item.icon,
              "badge": item.badge,
              "onClick": function onClick(event) {
                event.preventDefault();
                handleSelected(i * props.count + index);
              }
            }, null);
          });
          return vue.createVNode(vue.resolveComponent("t-swiper-item"), {
            "key": i
          }, {
            default: function _default() {
              return [vue.createVNode(vue.resolveComponent("t-grid"), {
                "column": gridColumn.value
              }, _isSlot(gridItems) ? gridItems : {
                default: function _default() {
                  return [gridItems];
                }
              })];
            }
          });
        });
        if (actionItems.value.length > 1) {
          return vue.createVNode(vue.resolveComponent("t-swiper"), {
            "autoplay": false,
            "pagination-position": "bottom",
            "navigation": {
              type: "dots",
              showControls: false
            },
            "loop": false,
            "class": "".concat(actionSheetClass.value, "__swiper-wrap"),
            "height": 192
          }, _isSlot(swiperItems) ? swiperItems : {
            default: function _default() {
              return [swiperItems];
            }
          });
        }
        return null;
      };
      var grid = function grid() {
        if (actionItems.value.length === 1) {
          var items = actionItems.value[0].map(function (item, index) {
            return vue.createVNode(vue.resolveComponent("t-grid-item"), {
              "key": index,
              "text": item.label,
              "image": item.icon,
              "badge": item.badge,
              "onClick": function onClick() {
                return handleSelected(index);
              }
            }, null);
          });
          return vue.createVNode(vue.resolveComponent("t-grid"), {
            "column": gridColumn.value
          }, _isSlot(items) ? items : {
            default: function _default() {
              return [items];
            }
          });
        }
        return null;
      };
      return vue.createVNode("div", {
        "class": gridClasses.value
      }, [swiper(), grid()]);
    };
  }
});

exports["default"] = ActionSheetGrid;
//# sourceMappingURL=action-sheet-grid.js.map
