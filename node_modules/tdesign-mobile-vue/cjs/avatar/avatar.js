/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var badge_index = require('../badge/index.js');
var image_index = require('../image/index.js');
var config = require('../config.js');
var avatar_props = require('./props.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useClass = require('../hooks/useClass.js');
var _common_js_avatar_utils = require('../_common/js/avatar/utils.js');
require('../badge/badge.js');
require('@babel/runtime/helpers/slicedToArray');
require('@babel/runtime/helpers/defineProperty');
require('lodash/isNumber');
require('lodash/isString');
require('../badge/props.js');
require('../shared/component.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../image/image.js');
require('@vueuse/core');
require('tdesign-icons-vue-next');
require('../loading/index.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('../loading/icon/spinner.js');
require('../loading/props.js');
require('../shared/dom.js');
require('../loading/plugin.js');
require('../image/props.js');

var prefix = config["default"].prefix;
var _Avatar = vue.defineComponent({
  name: "".concat(prefix, "-avatar"),
  props: avatar_props["default"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderTNodeContent = hooks_tnode.useContent();
    var avatarClass = hooks_useClass.usePrefixClass("avatar");
    var avatarGroupProps = vue.inject("avatarGroup", {});
    var hasAvatarGroupProps = Object.keys(avatarGroupProps).length > 0;
    var shapeValue = vue.computed(function () {
      return props.shape || (avatarGroupProps === null || avatarGroupProps === void 0 ? void 0 : avatarGroupProps.shape) || "circle";
    });
    var sizeValue = vue.computed(function () {
      return props.size || (avatarGroupProps === null || avatarGroupProps === void 0 ? void 0 : avatarGroupProps.size);
    });
    var isCustomSize = vue.computed(function () {
      return !_common_js_avatar_utils.isValidSize(sizeValue.value);
    });
    var avatarClasses = vue.computed(function () {
      return ["".concat(avatarClass.value), "".concat(avatarClass.value, "--").concat(isCustomSize.value ? "medium" : sizeValue.value), "".concat(avatarClass.value, "--").concat(shapeValue.value), hasAvatarGroupProps ? "".concat(avatarClass.value, "--border ").concat(avatarClass.value, "--border-").concat(isCustomSize.value ? "medium" : sizeValue.value) : ""];
    });
    var customSize = vue.computed(function () {
      return isCustomSize.value ? {
        height: sizeValue.value,
        width: sizeValue.value,
        "font-size": "".concat(Number.parseInt(sizeValue.value, 10) / 8 * 3 + 2, "px")
      } : {};
    });
    var handleImgLoadError = function handleImgLoadError(e) {
      var _props$onError;
      (_props$onError = props.onError) === null || _props$onError === void 0 || _props$onError.call(props, e);
    };
    return function () {
      var icon = renderTNodeJSX("icon");
      var TNodeContent = renderTNodeContent("default", "content");
      var readerAvatar = function readerAvatar() {
        if (props.image && !props.hideOnLoadFailed) {
          return vue.createVNode(image_index.Image, vue.mergeProps({
            "src": props.image,
            "alt": props.alt
          }, props.imageProps, {
            "onError": handleImgLoadError
          }), null);
        }
        if (icon) {
          return vue.createVNode("div", {
            "class": "".concat(avatarClass.value, "__icon")
          }, [icon]);
        }
        return vue.createVNode(vue.Fragment, null, [TNodeContent]);
      };
      return vue.createVNode("div", {
        "class": "".concat(avatarClass.value, "__wrapper")
      }, [vue.createVNode("div", {
        "class": "".concat(avatarClass.value, "__badge")
      }, [vue.createVNode(badge_index.Badge, props.badgeProps, {
        default: function _default() {
          return [vue.createVNode("div", {
            "class": avatarClasses.value,
            "style": customSize.value
          }, [readerAvatar()])];
        }
      })])]);
    };
  }
});

exports["default"] = _Avatar;
//# sourceMappingURL=avatar.js.map
