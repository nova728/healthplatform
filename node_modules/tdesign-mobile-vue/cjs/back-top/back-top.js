/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var core = require('@vueuse/core');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var backTop_props = require('./props.js');
var config = require('../config.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useClass = require('../hooks/useClass.js');
var shared_util = require('../shared/util.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isNumber');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix = config["default"].prefix;
var _BackTop = vue.defineComponent({
  name: "".concat(prefix, "-back-top"),
  props: backTop_props["default"],
  setup: function setup(props2) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var backTopClass = hooks_useClass.usePrefixClass("back-top");
    var target = vue.computed(function () {
      if (!shared_util.isBrowser) return void 0;
      return props2.target ? props2.target() : window.document.documentElement;
    });
    var container = vue.ref();
    var _useElementBounding = core.useElementBounding(target),
      top = _useElementBounding.top;
    var visible = vue.ref(false);
    var backTopClasses = vue.computed(function () {
      return _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(backTopClass.value), true), "".concat(backTopClass.value, "--fixed"), props2.fixed), "".concat(backTopClass.value, "--").concat(props2.theme), true);
    });
    var handleClick = function handleClick() {
      if (shared_util.isBrowser) {
        var _props2$onToTop;
        container.value.scrollTop = 0 + top.value;
        (_props2$onToTop = props2.onToTop) === null || _props2$onToTop === void 0 || _props2$onToTop.call(props2);
      }
    };
    var getContainer = function getContainer(container2) {
      if (typeof container2 === "function") {
        return container2();
      }
      return document.documentElement;
    };
    vue.onMounted(function () {
      if (shared_util.isBrowser) {
        container.value = getContainer(props2.container);
        container.value.onscroll = function () {
          var _container$value, _container$value2;
          if (((_container$value = container.value) === null || _container$value === void 0 ? void 0 : _container$value.scrollTop) >= props2.visibilityHeight) {
            visible.value = true;
          }
          if (visible.value && ((_container$value2 = container.value) === null || _container$value2 === void 0 ? void 0 : _container$value2.scrollTop) < props2.visibilityHeight) {
            visible.value = false;
          }
        };
      }
    });
    vue.onUnmounted(function () {
      container.value.onscroll = null;
    });
    var readerIcon = function readerIcon() {
      if (props2.icon === true) {
        return vue.createVNode(tdesignIconsVueNext.BacktopIcon, {
          "size": "22px"
        }, null);
      }
      return renderTNodeJSX("icon");
    };
    return function () {
      return vue.withDirectives(vue.createVNode("div", {
        "class": backTopClasses.value,
        "onClick": handleClick
      }, [readerIcon(), props2.text && vue.createVNode("span", {
        "class": "".concat(backTopClass.value, "__text--").concat(props2.theme)
      }, [props2.text])]), [[vue.vShow, visible.value]]);
    };
  }
});

exports["default"] = _BackTop;
//# sourceMappingURL=back-top.js.map
