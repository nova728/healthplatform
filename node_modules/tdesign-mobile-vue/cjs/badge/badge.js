/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var isNumber = require('lodash/isNumber');
var isString = require('lodash/isString');
var config = require('../config.js');
var badge_props = require('./props.js');
var hooks_useClass = require('../hooks/useClass.js');
var hooks_tnode = require('../hooks/tnode.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isNumber__default = /*#__PURE__*/_interopDefaultLegacy(isNumber);
var isString__default = /*#__PURE__*/_interopDefaultLegacy(isString);

var prefix = config["default"].prefix;
var _Badge = vue.defineComponent({
  name: "".concat(prefix, "-badge"),
  props: badge_props["default"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderTNodeContent = hooks_tnode.useContent();
    var badgeClass = hooks_useClass.usePrefixClass("badge");
    var classPrefix = hooks_useClass.usePrefixClass();
    var badgeClasses = vue.computed(function () {
      return _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(badgeClass.value), true), "".concat(badgeClass.value, "__ribbon-outer"), props.shape === "ribbon");
    });
    var badgeInnerClasses = vue.computed(function () {
      return _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(badgeClass.value, "--basic"), true), "".concat(badgeClass.value, "--dot"), props.dot), "".concat(badgeClass.value, "--").concat(props.size), true), "".concat(badgeClass.value, "--").concat(props.shape), true), "".concat(badgeClass.value, "--count"), !props.dot && props.count), "".concat(classPrefix.value, "-has-count"), true);
    });
    var isShowBadge = vue.computed(function () {
      if (props.dot) {
        return true;
      }
      var count = Number(props.count);
      if (!props.showZero && count === 0) {
        return false;
      }
      if (props.count == null) return false;
      return true;
    });
    var hasUnit = function hasUnit(unit) {
      return unit.indexOf("px") > 0 || unit.indexOf("rpx") > 0 || unit.indexOf("em") > 0 || unit.indexOf("rem") > 0 || unit.indexOf("%") > 0 || unit.indexOf("vh") > 0 || unit.indexOf("vm") > 0;
    };
    var badgeStyles = vue.computed(function () {
      if (!props.offset) {
        return {
          background: props.color
        };
      }
      var _props$offset = _slicedToArray__default["default"](props.offset, 2),
        _props$offset$ = _props$offset[0],
        xOffset = _props$offset$ === void 0 ? 0 : _props$offset$,
        _props$offset$2 = _props$offset[1],
        yOffset = _props$offset$2 === void 0 ? 0 : _props$offset$2;
      xOffset = hasUnit(xOffset.toString()) ? xOffset : "".concat(xOffset, "px");
      yOffset = hasUnit(yOffset.toString()) ? yOffset : "".concat(yOffset, "px");
      return {
        background: props.color,
        right: xOffset,
        top: yOffset
      };
    });
    return function () {
      var readerCount = function readerCount() {
        if (props.dot) return null;
        if (isString__default["default"](props.count) || isNumber__default["default"](props.count)) {
          if (props.count === 0) {
            return props.showZero ? props.count : null;
          }
          return Number(props.count) > Number(props.maxCount) ? "".concat(props.maxCount, "+") : props.count;
        }
        return renderTNodeJSX("count");
      };
      var readerContent = function readerContent() {
        var content = renderTNodeContent("default", "content");
        if (typeof content === "string") {
          return vue.createVNode("span", {
            "class": "".concat(badgeClass.value, "__content-text")
          }, [content]);
        }
        return content;
      };
      var readerBadge = function readerBadge() {
        if (!isShowBadge.value) {
          return null;
        }
        return vue.createVNode("div", {
          "class": badgeInnerClasses.value,
          "style": badgeStyles.value
        }, [readerCount()]);
      };
      return vue.createVNode("div", {
        "class": badgeClasses.value
      }, [vue.createVNode("div", {
        "class": "".concat(badgeClass.value, "__content")
      }, [readerContent()]), readerBadge()]);
    };
  }
});

exports["default"] = _Badge;
//# sourceMappingURL=badge.js.map
