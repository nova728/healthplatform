/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var popup_index = require('../popup/index.js');
var config = require('../config.js');
var calendar_props = require('./props.js');
var hooks_tnode = require('../hooks/tnode.js');
var calendar_template = require('./template.js');
var hooks_useClass = require('../hooks/useClass.js');
require('../popup/popup.js');
require('@babel/runtime/helpers/defineProperty');
require('@babel/runtime/helpers/slicedToArray');
require('tdesign-icons-vue-next');
require('../popup/props.js');
require('../overlay/index.js');
require('../overlay/overlay.js');
require('../shared/dom.js');
require('lodash/isFunction');
require('lodash/isString');
require('../overlay/props.js');
require('../shared/component.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../hooks/useLockScroll.js');
require('../_util/useTouch.js');
require('../_util/getScrollParent.js');
require('../_util/supportsPassive.js');
require('../shared/util.js');
require('lodash/isNumber');
require('../shared/render-tnode.js');
require('../shared/useDefault/index.js');
require('../shared/render.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../button/index.js');
require('../button/button.js');
require('../loading/index.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('../loading/icon/spinner.js');
require('../loading/props.js');
require('../loading/plugin.js');
require('../button/props.js');
require('../form/hooks.js');
require('lodash/isBoolean');
require('../shared/hover.js');
require('./template-props.js');

var prefix = config["default"].prefix;
var _Calendar = vue.defineComponent({
  name: "".concat(prefix, "-calendar"),
  components: {
    TPopup: popup_index.Popup,
    calendarTemplate: calendar_template["default"]
  },
  props: calendar_props["default"],
  emits: ["update:visible"],
  setup: function setup(props, context) {
    var calendarClass = hooks_useClass.usePrefixClass("calendar");
    var calendarTemplateRef = vue.ref();
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    vue.provide("templateProps", vue.reactive(props));
    var selectedValueIntoView = function selectedValueIntoView() {
      var _templateRef$querySel;
      var type = props.type === "range" ? "start" : "selected";
      var templateRef = calendarTemplateRef.value.templateRef;
      var scrollContainer = templateRef.querySelector(".".concat(calendarClass.value, "__months"));
      var selectedDate = (_templateRef$querySel = templateRef.querySelector(".".concat(calendarClass.value, "__dates-item--").concat(type))) === null || _templateRef$querySel === void 0 || (_templateRef$querySel = _templateRef$querySel.parentNode) === null || _templateRef$querySel === void 0 ? void 0 : _templateRef$querySel.previousElementSibling;
      if (selectedDate) {
        scrollContainer.scrollTop = selectedDate.offsetTop - scrollContainer.offsetTop;
      }
    };
    var onVisibleChange = function onVisibleChange(v) {
      context.emit("update:visible", v);
    };
    var onPopupVisibleChange = function onPopupVisibleChange(v) {
      if (!v) {
        var _props$onClose;
        (_props$onClose = props.onClose) === null || _props$onClose === void 0 || _props$onClose.call(props, "overlay");
      } else {
        vue.nextTick(function () {
          selectedValueIntoView();
        });
      }
      context.emit("update:visible", v);
    };
    vue.onMounted(function () {
      if (!props.usePopup) selectedValueIntoView();
    });
    vue.watch(function () {
      return props.value;
    }, function (val) {
      calendarTemplateRef.value.valueRef = val;
    });
    return function () {
      var title = renderTNodeJSX("title");
      var confirmBtn = renderTNodeJSX("confirmBtn") === void 0 ? null : renderTNodeJSX("confirmBtn");
      return vue.createVNode("div", null, [!props.usePopup ? vue.createVNode(calendar_template["default"], {
        "ref": calendarTemplateRef,
        "title": title,
        "confirmBtn": confirmBtn
      }, null) : vue.createVNode(vue.resolveComponent("t-popup"), {
        "visible": props.visible,
        "placement": "bottom",
        "onVisibleChange": onPopupVisibleChange
      }, {
        default: function _default() {
          return [vue.createVNode(calendar_template["default"], {
            "ref": calendarTemplateRef,
            "title": title,
            "confirmBtn": confirmBtn,
            "onVisibleChange": onVisibleChange
          }, null)];
        }
      })]);
    };
  }
});

exports["default"] = _Calendar;
//# sourceMappingURL=calendar.js.map
