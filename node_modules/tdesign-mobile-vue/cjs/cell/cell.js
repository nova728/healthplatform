/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var config = require('../config.js');
var cell_props = require('./props.js');
var form_hooks = require('../form/hooks.js');
var hooks_useClass = require('../hooks/useClass.js');
var hooks_tnode = require('../hooks/tnode.js');
var shared_hover = require('../shared/hover.js');
require('lodash/isBoolean');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix = config["default"].prefix;
var _Cell = vue.defineComponent({
  name: "".concat(prefix, "-cell"),
  directives: {
    Hover: shared_hover["default"]
  },
  props: cell_props["default"],
  setup: function setup(props2) {
    var readerTNodeJSX = hooks_tnode.useTNodeJSX();
    var readerTNodeContent = hooks_tnode.useContent();
    var disabled = form_hooks.useFormDisabled();
    var cellClass = hooks_useClass.usePrefixClass("cell");
    var cellClasses = vue.computed(function () {
      return ["".concat(cellClass.value), "".concat(cellClass.value, "--").concat(props2.align), _defineProperty__default["default"]({}, "".concat(cellClass.value, "--borderless"), !props2.bordered)];
    });
    var hoverDisabled = vue.computed(function () {
      return !props2.hover || disabled.value;
    });
    var handleClick = function handleClick(e) {
      if (!disabled.value) {
        var _props2$onClick;
        (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
          e: e
        });
      }
    };
    var readerImage = function readerImage() {
      if (typeof props2.image === "string") {
        return vue.createVNode("img", {
          "src": props2.image,
          "class": "".concat(cellClass.value, "__left-image")
        }, null);
      }
      var image = readerTNodeJSX("image");
      return image;
    };
    var readerLeft = function readerLeft() {
      var leftIcon = readerTNodeJSX("leftIcon");
      return vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__left")
      }, [leftIcon && vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__left-icon")
      }, [leftIcon]), readerImage()]);
    };
    var readerTitle = function readerTitle() {
      var title = readerTNodeJSX("title");
      if (!title) {
        return null;
      }
      var description = readerTNodeJSX("description");
      return vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__title")
      }, [vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__title-text")
      }, [title, props2.required && vue.createVNode("span", {
        "class": "".concat(cellClass.value, "--required")
      }, ["\xA0*"])]), description && vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__description")
      }, [description])]);
    };
    var readerRight = function readerRight() {
      var rightIcon = props2.arrow ? vue.createVNode(tdesignIconsVueNext.ChevronRightIcon, null, null) : readerTNodeJSX("rightIcon");
      if (!rightIcon) {
        return null;
      }
      return vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__right")
      }, [vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__right-icon")
      }, [rightIcon])]);
    };
    return function () {
      var note = readerTNodeContent("default", "note");
      return vue.withDirectives(vue.createVNode("div", {
        "class": cellClasses.value,
        "onClick": handleClick
      }, [readerLeft(), readerTitle(), note && vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__note")
      }, [note]), readerRight()]), [[vue.resolveDirective("hover"), {
        className: "".concat(cellClass.value, "--hover"),
        disabledHover: hoverDisabled.value
      }]]);
    };
  }
});

exports["default"] = _Cell;
//# sourceMappingURL=cell.js.map
