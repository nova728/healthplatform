import { CheckboxGroupValue } from './type';
export interface Child {
    value: string | number;
}
declare const _default: import("vue").DefineComponent<{
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    max: {
        type: NumberConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<import("./type").CheckboxOption[]>;
    };
    value: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: () => CheckboxGroupValue;
    };
    onChange: import("vue").PropType<(value: CheckboxGroupValue, context: import("./type").CheckboxGroupChangeContext) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "update:value" | "change")[], "update:modelValue" | "update:value" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    max: {
        type: NumberConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<import("./type").CheckboxOption[]>;
    };
    value: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<CheckboxGroupValue>;
        default: () => CheckboxGroupValue;
    };
    onChange: import("vue").PropType<(value: CheckboxGroupValue, context: import("./type").CheckboxGroupChangeContext) => void>;
}>> & {
    onChange?: (...args: any[]) => any;
    "onUpdate:modelValue"?: (...args: any[]) => any;
    "onUpdate:value"?: (...args: any[]) => any;
}, {
    value: CheckboxGroupValue;
    defaultValue: CheckboxGroupValue;
    modelValue: CheckboxGroupValue;
    name: string;
    disabled: boolean;
    max: number;
}, {}>;
export default _default;
