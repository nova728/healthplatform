{"version":3,"file":"util.js","sources":["../../src/collapse/util.ts"],"sourcesContent":["/**\n * @description: 判断集合是否包含指定内容\n * @return 是否包含 | 位置索引\n */\nexport function findIndex(v: unknown, set: unknown): number {\n  // 正则方式，辨别0='0'\n  const reg = new RegExp(`^${!v && v !== 0 ? '' : v}$`);\n\n  // 转数组统一处理\n  const arr = toArray(set);\n  return arr.findIndex((s) => reg.test(s));\n}\n\n/**\n * @description: 判断是否假植 undefined|null|''等\n */\nexport function isFalsy(v: unknown): boolean {\n  return !v && v !== 0;\n}\n\n/**\n * @description: 转化为数组\n */\nexport function toArray(v: unknown): any[] {\n  if (isFalsy(v)) return [];\n  if (typeof v === 'object') return Array.from(v as Iterable<unknown> | ArrayLike<unknown>);\n  return [v];\n}\n"],"names":["findIndex","v","set","reg","RegExp","concat","arr","toArray","s","test","isFalsy","_typeof","Array","from"],"mappings":";;;;;;;;;;;;;;;;AAIgB,SAAAA,SAAAA,CAAUC,GAAYC,GAAsB,EAAA;AAEpD,EAAA,IAAAC,GAAA,GAAM,IAAIC,MAAO,CAAAC,GAAAA,CAAAA,MAAA,CAAI,CAACJ,CAAK,IAAAA,CAAA,KAAM,CAAI,GAAA,EAAA,GAAKA,CAAI,MAAA,CAAA,CAAA;AAG9C,EAAA,IAAAK,GAAA,GAAMC,QAAQL,GAAG,CAAA,CAAA;AACvB,EAAA,OAAOI,IAAIN,SAAU,CAAA,UAACQ;WAAML,GAAI,CAAAM,IAAA,CAAKD,CAAC,CAAC,CAAA;GAAA,CAAA,CAAA;AACzC,CAAA;AAKO,SAASE,QAAQT,CAAqB,EAAA;AACpC,EAAA,OAAA,CAACA,KAAKA,CAAM,KAAA,CAAA,CAAA;AACrB,CAAA;AAKO,SAASM,QAAQN,CAAmB,EAAA;AACzC,EAAA,IAAIS,QAAQT,CAAC,CAAA,EAAG,OAAO,EAAC,CAAA;AACxB,EAAA,IAAIU,2BAAA,CAAOV,CAAM,CAAA,KAAA,QAAA,EAAiB,OAAAW,KAAA,CAAMC,KAAKZ,CAA2C,CAAA,CAAA;EACxF,OAAO,CAACA,CAAC,CAAA,CAAA;AACX;;;;;;"}