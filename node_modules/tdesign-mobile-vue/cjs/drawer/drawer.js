/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var popup_index = require('../popup/index.js');
var config = require('../config.js');
var drawer_props = require('./props.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useClass = require('../hooks/useClass.js');
require('../popup/popup.js');
require('@babel/runtime/helpers/defineProperty');
require('@babel/runtime/helpers/slicedToArray');
require('tdesign-icons-vue-next');
require('../popup/props.js');
require('../overlay/index.js');
require('../overlay/overlay.js');
require('../shared/dom.js');
require('lodash/isFunction');
require('lodash/isString');
require('../overlay/props.js');
require('../shared/component.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../hooks/useLockScroll.js');
require('../_util/useTouch.js');
require('../_util/getScrollParent.js');
require('../_util/supportsPassive.js');
require('../shared/util.js');
require('lodash/isNumber');
require('../shared/render-tnode.js');
require('../shared/useDefault/index.js');
require('../shared/render.js');

var prefix = config["default"].prefix;
var _Drawer = vue.defineComponent({
  name: "".concat(prefix, "-drawer"),
  components: {
    TPopup: popup_index.Popup
  },
  props: drawer_props["default"],
  emits: ["update:visible", "itemClick", "overlayClick"],
  setup: function setup(props2, context) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var drawerClass = hooks_useClass.usePrefixClass("drawer");
    var _toRefs = vue.toRefs(props2),
      visible = _toRefs.visible,
      showOverlay = _toRefs.showOverlay;
    var open = vue.ref(visible.value || false);
    vue.watch(open, function () {
      context.emit("update:visible", open.value);
    });
    vue.watch(visible, function () {
      open.value = visible.value;
    });
    var onItemClick = function onItemClick(index, item, context2) {
      var _props2$onItemClick;
      (_props2$onItemClick = props2.onItemClick) === null || _props2$onItemClick === void 0 || _props2$onItemClick.call(props2, index, item, context2);
    };
    var onVisibleChange = function onVisibleChange(visible2) {
      if (showOverlay.value) {
        var _props2$onOverlayClic;
        (_props2$onOverlayClic = props2.onOverlayClick) === null || _props2$onOverlayClic === void 0 || _props2$onOverlayClic.call(props2, {
          visible: visible2
        });
      }
    };
    var onClose = function onClose() {
      var _props2$onClose;
      (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, "overlay");
    };
    return function () {
      var attach = props2.attach,
        zIndex = props2.zIndex,
        closeOnOverlayClick = props2.closeOnOverlayClick,
        destroyOnClose = props2.destroyOnClose,
        items = props2.items,
        placement = props2.placement,
        showOverlay2 = props2.showOverlay;
      var renderTitleNode = function renderTitleNode() {
        var titleNode = renderTNodeJSX("title");
        if (!titleNode) {
          return null;
        }
        return vue.createVNode("div", {
          "class": "".concat(drawerClass.value, "__title")
        }, [titleNode]);
      };
      var renderFooterNode = function renderFooterNode() {
        var footerNode = renderTNodeJSX("footer");
        if (!footerNode) {
          return null;
        }
        return vue.createVNode("div", {
          "class": "".concat(drawerClass.value, "__footer")
        }, [footerNode]);
      };
      return vue.createVNode(vue.resolveComponent("t-popup"), {
        "modelValue": open.value,
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return open.value = $event;
        },
        "placement": placement,
        "attach": attach,
        "showOverlay": showOverlay2,
        "zIndex": zIndex,
        "closeOnOverlayClick": closeOnOverlayClick,
        "destroyOnClose": destroyOnClose,
        "onVisibleChange": onVisibleChange,
        "onClose": onClose
      }, {
        default: function _default() {
          return [vue.createVNode("div", {
            "class": "".concat(drawerClass.value)
          }, [renderTitleNode(), renderTNodeJSX("default"), vue.createVNode("div", {
            "class": "".concat(drawerClass.value, "__sidebar")
          }, [(items || []).map(function (item, index) {
            return vue.createVNode("div", {
              "key": item.title,
              "class": "".concat(drawerClass.value, "__sidebar-item"),
              "onClick": function onClick(e) {
                return onItemClick(index, item, {
                  e: e
                });
              }
            }, [item.icon && vue.createVNode("span", {
              "class": "".concat(drawerClass.value, "__sidebar-item-icon")
            }, [item.icon(vue.h)]), vue.createVNode("div", {
              "class": "".concat(drawerClass.value, "__sidebar-item-title")
            }, [item.title])]);
          })]), renderFooterNode()])];
        }
      });
    };
  }
});

exports["default"] = _Drawer;
//# sourceMappingURL=drawer.js.map
