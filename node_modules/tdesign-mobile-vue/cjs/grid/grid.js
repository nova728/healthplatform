/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var grid_props = require('./props.js');
var hooks_useClass = require('../hooks/useClass.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix = config["default"].prefix;
var _Grid = vue.defineComponent({
  name: "".concat(prefix, "-grid"),
  props: grid_props["default"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var gridClass = hooks_useClass.usePrefixClass("grid");
    var _toRefs = vue.toRefs(props2),
      column = _toRefs.column,
      gutter = _toRefs.gutter,
      border = _toRefs.border,
      align = _toRefs.align;
    var rootStyle = vue.computed(function () {
      if (column.value === 0) return [];
      var ans = ["padding: ".concat(gutter.value, "px;"), "grid-template-columns: repeat(".concat(column.value, ", 1fr)"), "grid-gap: ".concat(gutter.value, "px")];
      return ans;
    });
    vue.provide("grid", {
      column: column,
      border: border,
      align: align,
      gutter: gutter
    });
    var classes = vue.computed(function () {
      return ["".concat(gridClass.value), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(gridClass.value, "--card"), props2.theme === "card"), "".concat(gridClass.value, "--auto-size"), props2.column === 0), "".concat(gridClass.value, "--bordered"), props2.border && !props2.gutter)];
    });
    return function () {
      var _slots$default;
      return vue.createVNode("div", {
        "class": classes.value,
        "style": rootStyle.value
      }, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)]);
    };
  }
});

exports["default"] = _Grid;
//# sourceMappingURL=grid.js.map
