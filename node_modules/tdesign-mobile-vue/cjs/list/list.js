/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var core = require('@vueuse/core');
var hooks_tnode = require('../hooks/tnode.js');
var loading_index = require('../loading/index.js');
var config = require('../config.js');
var list_props = require('./props.js');
var hooks_useClass = require('../hooks/useClass.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
var shared_useScrollParent_index = require('../shared/useScrollParent/index.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../loading/loading.js');
require('@babel/runtime/helpers/defineProperty');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../loading/icon/spinner.js');
require('../loading/props.js');
require('../shared/dom.js');
require('../loading/plugin.js');
require('lodash/merge');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('../shared/component.js');
require('../shared/util.js');

var prefix = config["default"].prefix;
var _List = vue.defineComponent({
  name: "".concat(prefix, "-list"),
  components: {
    TLoading: loading_index.Loading
  },
  props: list_props["default"],
  emits: ["load-more", "scroll"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var listClass = hooks_useClass.usePrefixClass("list");
    var _useConfig = configProvider_useConfig.useConfig("list"),
      globalConfig = _useConfig.globalConfig;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var LOADING_TEXT_MAP = {
      loading: globalConfig.value.loading,
      "load-more": globalConfig.value.loadingMoreText
    };
    var root = vue.ref();
    var scrollParent = shared_useScrollParent_index.useScrollParent(root);
    var _useWindowSize = core.useWindowSize(),
      height = _useWindowSize.height;
    var onLoadMore = function onLoadMore(e) {
      if (props2.asyncLoading === "load-more") {
        var _props2$onLoadMore;
        (_props2$onLoadMore = props2.onLoadMore) === null || _props2$onLoadMore === void 0 || _props2$onLoadMore.call(props2);
      }
    };
    var handleScroll = function handleScroll(e) {
      var _props2$onScroll;
      var scrollHeight = e.target.scrollHeight || Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
      var scrollTop = e.target.scrollTop || document.documentElement.scrollTop || document.body.scrollTop;
      var offsetHeight = e.target.offsetHeight || height.value;
      (_props2$onScroll = props2.onScroll) === null || _props2$onScroll === void 0 || _props2$onScroll.call(props2, scrollHeight - (scrollTop + offsetHeight), scrollTop);
    };
    core.useEventListener(scrollParent, "scroll", handleScroll);
    return function () {
      var headerContent = renderTNodeJSX("header");
      var footerContent = renderTNodeJSX("footer");
      return vue.createVNode("div", {
        "ref": root,
        "class": listClass.value,
        "onScroll": handleScroll
      }, [headerContent, slots.default && slots.default(), vue.createVNode("div", {
        "class": "".concat(listClass.value, "__loading--wrapper"),
        "onClick": onLoadMore
      }, [typeof props2.asyncLoading === "string" && ["loading", "load-more"].includes(props2.asyncLoading) && vue.createVNode(loading_index.Loading, {
        "indicator": props2.asyncLoading === "loading",
        "text": typeof props2.asyncLoading === "string" ? LOADING_TEXT_MAP[props2.asyncLoading] : "",
        "class": "".concat(listClass.value, "__loading")
      }, null)]), footerContent]);
    };
  }
});

exports["default"] = _List;
//# sourceMappingURL=list.js.map
