import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    attach: {
        type: import("vue").PropType<import("..").AttachNode>;
        default: string;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    fullscreen: BooleanConstructor;
    indicator: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    inheritColor: BooleanConstructor;
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal">;
        default: "vertical" | "horizontal";
        validator(val: "vertical" | "horizontal"): boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    pause: BooleanConstructor;
    reverse: BooleanConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"circular" | "spinner" | "dots">;
        default: "circular" | "spinner" | "dots";
        validator(val: "circular" | "spinner" | "dots"): boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    attach: {
        type: import("vue").PropType<import("..").AttachNode>;
        default: string;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    fullscreen: BooleanConstructor;
    indicator: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    inheritColor: BooleanConstructor;
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal">;
        default: "vertical" | "horizontal";
        validator(val: "vertical" | "horizontal"): boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    pause: BooleanConstructor;
    reverse: BooleanConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"circular" | "spinner" | "dots">;
        default: "circular" | "spinner" | "dots";
        validator(val: "circular" | "spinner" | "dots"): boolean;
    };
}>>, {
    reverse: boolean;
    pause: boolean;
    attach: import("..").AttachNode;
    indicator: boolean | ((h: typeof h) => import("..").SlotReturnValue);
    layout: "vertical" | "horizontal";
    theme: "circular" | "spinner" | "dots";
    delay: number;
    duration: number;
    fullscreen: boolean;
    inheritColor: boolean;
    loading: boolean;
    size: string;
}, {}>;
export default _default;
