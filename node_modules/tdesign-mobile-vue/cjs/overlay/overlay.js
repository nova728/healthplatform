/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var shared_dom = require('../shared/dom.js');
var config = require('../config.js');
var overlay_props = require('./props.js');
var hooks_useClass = require('../hooks/useClass.js');
var hooks_tnode = require('../hooks/tnode.js');
require('lodash/isFunction');
require('lodash/isString');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix = config["default"].prefix;
var _Overlay = vue.defineComponent({
  name: "".concat(prefix, "-overlay"),
  props: overlay_props["default"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var overlayClass = hooks_useClass.usePrefixClass("overlay");
    var overlayClasses = vue.computed(function () {
      return _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(overlayClass.value), true), "".concat(overlayClass.value, "--active"), props.visible);
    });
    var overlayStyles = vue.computed(function () {
      var arr = [];
      if (props.customStyle) {
        arr.push(props.customStyle);
      }
      if (props.zIndex) {
        arr.push("z-index: ".concat(props.zIndex));
      }
      if (props.duration) {
        arr.push("transition-duration: ".concat(props.duration, "ms"));
      }
      if (props.backgroundColor) {
        arr.push("background-color: ".concat(props.backgroundColor));
      }
      return arr.join("; ");
    });
    var handleTouchMove = function handleTouchMove(e) {
      if (props.preventScrollThrough) {
        shared_dom.preventDefault(e, true);
      }
    };
    var handleClick = function handleClick(e) {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {
        e: e
      });
    };
    return function () {
      return vue.createVNode(vue.Transition, {
        "name": overlayClass.value
      }, {
        default: function _default() {
          return [vue.withDirectives(vue.createVNode("div", {
            "class": overlayClasses.value,
            "style": overlayStyles.value,
            "onClick": handleClick,
            "onTouchmove": handleTouchMove
          }, [renderTNodeJSX("default")]), [[vue.vShow, props.visible]])];
        }
      });
    };
  }
});

exports["default"] = _Overlay;
//# sourceMappingURL=overlay.js.map
