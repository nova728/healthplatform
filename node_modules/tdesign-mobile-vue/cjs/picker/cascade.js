/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var picker_props = require('./props.js');
var picker_picker = require('./picker.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isString');
require('lodash/isBoolean');
require('lodash/isFunction');
require('../hooks/tnode.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('./picker-item.js');
require('./picker.class.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('../shared/dom.js');
require('../hooks/useClass.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('./utils.js');
require('../shared/useVModel/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-cascade");
var script = vue.defineComponent({
  name: name,
  components: {
    Picker: picker_picker["default"]
  },
  props: picker_props["default"],
  setup: function setup(props, context) {
    var pickerProps = vue.computed(function () {
      return _objectSpread({}, props);
    });
    var finalDepth = vue.ref(1);
    var finalSubOptionsRecord = vue.ref({});
    var generateCascadePickerColumns = function generateCascadePickerColumns(value, options, depth, subOptionsRecord) {
      var columns = [];
      columns.push(options.map(function (option) {
        return {
          label: option.label,
          value: option.value
        };
      }));
      for (var i = 0; i < depth - 1; i++) {
        var x = value[i];
        var subOptions = subOptionsRecord[x];
        if (!subOptions) {
          columns.push([]);
        } else {
          columns.push(subOptions.map(function (option) {
            return {
              label: option.label,
              value: option.value
            };
          }));
        }
      }
      return columns;
    };
    var initDepthAndRecord = function initDepthAndRecord(options) {
      var depth = 1;
      var subOptionsRecord = {};
      function traverse(option, currentDepth) {
        if (!option.children) {
          return;
        }
        subOptionsRecord[option.value] = option.children;
        var nextDepth = currentDepth + 1;
        if (nextDepth > depth) {
          depth = nextDepth;
        }
        option.children.forEach(function (option2) {
          traverse(option2, nextDepth);
        });
      }
      options.forEach(function (option) {
        traverse(option, 1);
      });
      finalDepth.value = depth;
      finalSubOptionsRecord.value = subOptionsRecord;
    };
    initDepthAndRecord(props.columns);
    return {
      name: name,
      finalDepth: finalDepth,
      finalSubOptionsRecord: finalSubOptionsRecord,
      pickerProps: pickerProps,
      generateCascadePickerColumns: generateCascadePickerColumns
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_picker = vue.resolveComponent("picker");
  return vue.openBlock(), vue.createBlock(_component_picker, vue.mergeProps(_ctx.pickerProps, {
    columns: function columns(selected) {
      return _ctx.generateCascadePickerColumns(selected, _ctx.columns, _ctx.finalDepth, _ctx.finalSubOptionsRecord);
    }
  }), null, 16, ["columns"]);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=cascade.js.map
