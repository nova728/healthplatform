/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var vue = require('vue');
var radio_radioGroupProps = require('./radio-group-props.js');
var radio_radio = require('./radio.js');
var config = require('../config.js');
var hooks_useClass = require('../hooks/useClass.js');
var hooks_tnode = require('../hooks/tnode.js');
var shared_useDefault_index = require('../shared/useDefault/index.js');
require('@babel/runtime/helpers/defineProperty');
require('tdesign-icons-vue-next');
require('./props.js');
require('../form/hooks.js');
require('lodash/isBoolean');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

var prefix = config["default"].prefix;
var _RadioGroup = vue.defineComponent({
  name: "".concat(prefix, "-radio-group"),
  props: radio_radioGroupProps["default"],
  setup: function setup(props2, context) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var radioGroupClass = hooks_useClass.usePrefixClass("radio-group");
    var _useDefault = shared_useDefault_index.useDefault(props2, context.emit, "value", "change"),
      _useDefault2 = _slicedToArray__default["default"](_useDefault, 2),
      groupValue = _useDefault2[0],
      setGroupValue = _useDefault2[1];
    var keys = vue.computed(function () {
      return props2.keys;
    });
    var groupOptions = vue.computed(function () {
      var _props2$options;
      return (_props2$options = props2.options) === null || _props2$options === void 0 ? void 0 : _props2$options.map(function (option) {
        var opt = option;
        if (typeof option === "string" || typeof option === "number") {
          opt = {
            value: option,
            label: option.toString()
          };
        }
        return opt;
      });
    });
    var handleRadioChange = function handleRadioChange(val, context2) {
      if (props2.allowUncheck && val === groupValue.value) {
        setGroupValue("", context2);
      } else {
        setGroupValue(val, context2);
      }
    };
    vue.provide("rootGroupProps", props2);
    vue.provide("rootGroupValue", groupValue);
    vue.provide("rootGroupChange", handleRadioChange);
    return function () {
      return vue.createVNode("div", {
        "class": radioGroupClass.value,
        "role": "radiogroup"
      }, [props2.options && groupOptions.value.map(function (opt, index) {
        var _keys$value$value, _keys$value, _opt$disabled, _keys$value$value2, _keys$value2, _keys$value$label, _keys$value3;
        return vue.createVNode(radio_radio["default"], {
          "name": props2.name,
          "icon": props2.icon,
          "checked": groupValue.value === opt[(_keys$value$value = (_keys$value = keys.value) === null || _keys$value === void 0 ? void 0 : _keys$value.value) !== null && _keys$value$value !== void 0 ? _keys$value$value : "value"],
          "disabled": (_opt$disabled = opt === null || opt === void 0 ? void 0 : opt.disabled) !== null && _opt$disabled !== void 0 ? _opt$disabled : props2.disabled,
          "value": opt[(_keys$value$value2 = (_keys$value2 = keys.value) === null || _keys$value2 === void 0 ? void 0 : _keys$value2.value) !== null && _keys$value$value2 !== void 0 ? _keys$value$value2 : "value"],
          "label": opt[(_keys$value$label = (_keys$value3 = keys.value) === null || _keys$value3 === void 0 ? void 0 : _keys$value3.label) !== null && _keys$value$label !== void 0 ? _keys$value$label : "label"],
          "placement": props2.placement
        }, null);
      }), !props2.options && renderTNodeJSX("default")]);
    };
  }
});

exports["default"] = _RadioGroup;
//# sourceMappingURL=radio-group.js.map
