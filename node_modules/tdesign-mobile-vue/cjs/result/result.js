/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var config = require('../config.js');
var result_props = require('./props.js');
var hooks_tnode = require('../hooks/tnode.js');
var image_index = require('../image/index.js');
var hooks_icon = require('../hooks/icon.js');
var hooks_useClass = require('../hooks/useClass.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../image/image.js');
require('@babel/runtime/helpers/slicedToArray');
require('@babel/runtime/helpers/defineProperty');
require('@vueuse/core');
require('../loading/index.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../loading/icon/spinner.js');
require('../loading/props.js');
require('../shared/dom.js');
require('../loading/plugin.js');
require('lodash/merge');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('../shared/component.js');
require('../image/props.js');

var prefix = config["default"].prefix;
var _Result = vue.defineComponent({
  name: "".concat(prefix, "-result"),
  props: result_props["default"],
  setup: function setup(props) {
    var resultClass = hooks_useClass.usePrefixClass("result");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderIconTNode = hooks_icon.useIcon();
    var resultClasses = vue.computed(function () {
      return ["".concat(resultClass.value), "".concat(resultClass.value, "--theme-").concat(props.theme || "default")];
    });
    var renderIcon = function renderIcon() {
      var defaultIcons = {
        default: tdesignIconsVueNext.InfoCircleIcon,
        success: tdesignIconsVueNext.CheckCircleIcon,
        warning: tdesignIconsVueNext.InfoCircleIcon,
        error: tdesignIconsVueNext.CloseCircleIcon
      };
      var iconContent = renderIconTNode("icon", defaultIcons);
      return iconContent ? vue.createVNode(iconContent, {
        "class": "".concat(resultClass.value, "__icon")
      }, null) : null;
    };
    var renderImage = function renderImage() {
      var image = renderTNodeJSX("image");
      if (image) {
        if (typeof image === "string") {
          return vue.createVNode(image_index.Image, {
            "src": image
          }, null);
        }
        return image;
      }
      return null;
    };
    var renderThumb = function renderThumb() {
      var image = renderImage();
      return vue.createVNode("div", {
        "class": "".concat(resultClass.value, "__thumb")
      }, [image || renderIcon()]);
    };
    var renderTitle = function renderTitle() {
      var title = renderTNodeJSX("title");
      return title ? vue.createVNode("div", {
        "class": ["".concat(resultClass.value, "__title")]
      }, [title]) : null;
    };
    var renderDescription = function renderDescription() {
      var description = renderTNodeJSX("description");
      return description ? vue.createVNode("div", {
        "class": ["".concat(resultClass.value, "__description")]
      }, [description]) : null;
    };
    return function () {
      return vue.createVNode("div", {
        "class": [resultClasses.value]
      }, [renderThumb(), renderTitle(), renderDescription()]);
    };
  }
});

exports["default"] = _Result;
//# sourceMappingURL=result.js.map
