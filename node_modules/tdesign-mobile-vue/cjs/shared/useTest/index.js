/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var shared_util = require('../util.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isNumber');
require('../../config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);

function useTestUtils() {
  var makeScroll = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator__default["default"](/*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee(dom, name, offset) {
      var eventTarget, evt;
      return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            eventTarget = dom === document.documentElement ? window : dom;
            dom[name] = offset;
            evt = new CustomEvent("scroll", {
              detail: {
                target: _defineProperty__default["default"]({}, name, offset)
              }
            });
            eventTarget.dispatchEvent(evt);
            _context.next = 6;
            return shared_util.sleep(0);
          case 6:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function makeScroll(_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }();
  return {
    makeScroll: makeScroll,
    sleep: shared_util.sleep
  };
}
function useVitest(vi) {
  var getBoundingClientRect = function getBoundingClientRect(dom) {
    return vi.spyOn(dom, "getBoundingClientRect");
  };
  return {
    getBoundingClientRect: getBoundingClientRect
  };
}

exports.useTestUtils = useTestUtils;
exports.useVitest = useVitest;
//# sourceMappingURL=index.js.map
