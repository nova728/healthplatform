{"version":3,"file":"util.js","sources":["../../src/shared/util.ts"],"sourcesContent":["import isNumber from 'lodash/isNumber';\nimport config from '../config';\n\nconst { prefix } = config;\n\nexport function toCamel(str: string): string {\n  return str.replace(/^\\S/, (m) => m.toUpperCase());\n}\n\nexport const isBrowser = typeof window !== 'undefined';\n\n/**\n * 计算字符串字符的长度并可以截取字符串。\n * @param str 传入字符串\n * @param maxCharacter 规定最大字符串长度\n * @returns 当没有传入maxCharacter时返回字符串字符长度，当传入maxCharacter时返回截取之后的字符串和长度。\n */\nexport function getCharacterLength(str: string, maxCharacter?: number) {\n  const hasMaxCharacter = typeof maxCharacter === 'number';\n  if (!str || str.length === 0) {\n    if (hasMaxCharacter) {\n      return {\n        length: 0,\n        characters: str,\n      };\n    }\n    return 0;\n  }\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    let currentStringLength = 0;\n    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {\n      currentStringLength = 2;\n    } else {\n      currentStringLength = 1;\n    }\n    if (hasMaxCharacter && len + currentStringLength > maxCharacter) {\n      return {\n        length: len,\n        characters: str.slice(0, i),\n      };\n    }\n    len += currentStringLength;\n  }\n  if (hasMaxCharacter) {\n    return {\n      length: len,\n      characters: str,\n    };\n  }\n  return len;\n}\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms)); // eslint-disable-line\n\nexport const uniqueFactory = (compName: string) => {\n  let number = 0;\n  return () => `${prefix}-${compName}_${number++}`;\n};\n\nexport const convertUnit = (val: string | number | undefined) => {\n  if (val == null) return 0;\n  return isNumber(val) ? `${val}px` : val;\n};\n\nexport const reconvertUnit = (val: string | number | undefined) => {\n  if (val == null) return 0;\n  return isNumber(val) ? Number(val) : Number(val.slice(0, -2));\n};\n\n/**\n * 格式化数字\n * @param value 传入的数字字符串\n * @param allowDecimal 是否允许小数，默认为 true\n * @param allowNegative 是否允许负数，默认为 true\n * @returns 返回格式化后的数字字符串\n */\nexport const formatNumber = (value: string, allowDecimal = true, allowNegative = true) => {\n  if (allowDecimal) {\n    const index = value.indexOf('.');\n    if (index !== -1) {\n      value = `${value.slice(0, index + 1)}${value.slice(index).replace(/\\./g, '')}`;\n    }\n  } else {\n    const [splitValue = ''] = value.split('.');\n    value = splitValue;\n  }\n\n  if (allowNegative) {\n    const index = value.indexOf('-');\n    if (index !== -1) {\n      value = `${value.slice(0, index + 1)}${value.slice(index).replace(/-/g, '')}`;\n    }\n  } else {\n    value = value.replace(/-/g, '');\n  }\n\n  return value.replace(/[^\\d.-]/g, '');\n};\n"],"names":["prefix","config","toCamel","str","replace","m","toUpperCase","isBrowser","window","getCharacterLength","maxCharacter","hasMaxCharacter","length","characters","len","i","currentStringLength","charCodeAt","slice","sleep","ms","Promise","resolve","setTimeout","uniqueFactory","compName","number","concat","convertUnit","val","isNumber","reconvertUnit","Number","formatNumber","value","allowDecimal","arguments","undefined","allowNegative","index","indexOf","_value$split","split","_value$split2","_slicedToArray","_value$split2$","splitValue"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA,IAAQA,SAAWC,iBAAA,CAAXD;AAED,SAASE,QAAQC,GAAqB,EAAA;AAC3C,EAAA,OAAOA,IAAIC,OAAQ,CAAA,KAAA,EAAO,UAACC,CAAM,EAAA;AAAA,IAAA,OAAAA,CAAA,CAAEC,aAAa,CAAA;GAAA,CAAA,CAAA;AAClD,CAAA;IAEaC,SAAA,GAAY,OAAOC,MAAW,KAAA,YAAA;AAQ3B,SAAAC,kBAAAA,CAAmBN,KAAaO,YAAuB,EAAA;AAC/D,EAAA,IAAAC,eAAA,GAAkB,OAAOD,YAAiB,KAAA,QAAA,CAAA;EAChD,IAAI,CAACP,GAAA,IAAOA,GAAI,CAAAS,MAAA,KAAW,CAAG,EAAA;AAC5B,IAAA,IAAID,eAAiB,EAAA;MACZ,OAAA;AACLC,QAAAA,MAAQ,EAAA,CAAA;AACRC,QAAAA,UAAY,EAAAV,GAAAA;OACd,CAAA;AACF,KAAA;AACO,IAAA,OAAA,CAAA,CAAA;AACT,GAAA;EACA,IAAIW,GAAM,GAAA,CAAA,CAAA;AACV,EAAA,KAAA,IAASC,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAAZ,GAAA,CAAIS,QAAQG,CAAK,EAAA,EAAA;IACnC,IAAIC,mBAAsB,GAAA,CAAA,CAAA;AACtB,IAAA,IAAAb,GAAA,CAAIc,WAAWF,CAAC,CAAA,GAAI,OAAOZ,GAAI,CAAAc,UAAA,CAAWF,CAAC,CAAA,KAAM,EAAI,EAAA;AACjCC,MAAAA,mBAAA,GAAA,CAAA,CAAA;AACxB,KAAO,MAAA;AACiBA,MAAAA,mBAAA,GAAA,CAAA,CAAA;AACxB,KAAA;AACI,IAAA,IAAAL,eAAA,IAAmBG,GAAM,GAAAE,mBAAA,GAAsBN,YAAc,EAAA;MACxD,OAAA;AACLE,QAAAA,MAAQ,EAAAE,GAAA;AACRD,QAAAA,UAAY,EAAAV,GAAA,CAAIe,KAAM,CAAA,CAAA,EAAGH,CAAC,CAAA;OAC5B,CAAA;AACF,KAAA;AACOD,IAAAA,GAAA,IAAAE,mBAAA,CAAA;AACT,GAAA;AACA,EAAA,IAAIL,eAAiB,EAAA;IACZ,OAAA;AACLC,MAAAA,MAAQ,EAAAE,GAAA;AACRD,MAAAA,UAAY,EAAAV,GAAAA;KACd,CAAA;AACF,GAAA;AACO,EAAA,OAAAW,GAAA,CAAA;AACT,CAAA;IAEaK,KAAA,GAAQ,SAARA,KAAAA,CAASC,EAAA,EAAA;AAAA,EAAA,OAAe,IAAIC,OAAA,CAAQ,UAACC,OAAY,EAAA;AAAA,IAAA,OAAAC,UAAA,CAAWD,OAAS,EAAAF,EAAE,CAAC,CAAA;GAAA,CAAA,CAAA;AAAA,EAAA;IAExEI,aAAA,GAAgB,SAAhBA,aAAAA,CAAiBC,QAAqB,EAAA;EACjD,IAAIC,MAAS,GAAA,CAAA,CAAA;EACN,OAAA,YAAA;IAAA,OAAAC,EAAAA,CAAAA,MAAA,CAAS3B,MAAA,EAAA2B,GAAAA,CAAAA,CAAAA,MAAA,CAAUF,QAAY,EAAAE,GAAAA,CAAAA,CAAAA,MAAA,CAAAD,MAAA,EAAA,CAAA,CAAA;GAAA,CAAA;AACxC,EAAA;IAEaE,WAAA,GAAc,SAAdA,WAAAA,CAAeC,GAAqC,EAAA;AAC/D,EAAA,IAAIA,GAAO,IAAA,IAAA,EAAa,OAAA,CAAA,CAAA;EACxB,OAAOC,4BAAS,CAAAD,GAAG,CAAI,MAAAF,MAAA,CAAGE,GAAU,EAAA,IAAA,CAAA,GAAAA,GAAA,CAAA;AACtC,EAAA;IAEaE,aAAA,GAAgB,SAAhBA,aAAAA,CAAiBF,GAAqC,EAAA;AACjE,EAAA,IAAIA,GAAO,IAAA,IAAA,EAAa,OAAA,CAAA,CAAA;EACjB,OAAAC,4BAAA,CAASD,GAAG,CAAA,GAAIG,MAAO,CAAAH,GAAG,CAAI,GAAAG,MAAA,CAAOH,GAAI,CAAAX,KAAA,CAAM,CAAG,EAAA,CAAA,CAAE,CAAC,CAAA,CAAA;AAC9D,EAAA;IASae,eAAe,SAAfA,aAAgBC,KAAA,EAA6D;AAAA,EAAA,IAA9CC,YAAe,GAAAC,SAAA,CAAAxB,MAAA,GAAA,CAAA,IAAAwB,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA;AAAA,EAAA,IAAME,oFAAgB,IAAS,CAAA;AACxF,EAAA,IAAIH,YAAc,EAAA;AACV,IAAA,IAAAI,KAAA,GAAQL,KAAM,CAAAM,OAAA,CAAQ,GAAG,CAAA,CAAA;AAC/B,IAAA,IAAID,UAAU,CAAI,CAAA,EAAA;AAChBL,MAAAA,KAAA,GAAAP,EAAAA,CAAAA,MAAA,CAAWO,KAAA,CAAMhB,KAAM,CAAA,CAAA,EAAGqB,KAAQ,GAAA,CAAC,CAAI,CAAA,CAAAZ,MAAA,CAAAO,KAAA,CAAMhB,KAAM,CAAAqB,KAAK,CAAE,CAAAnC,OAAA,CAAQ,OAAO,EAAE,CAAA,CAAA,CAAA;AAC7E,KAAA;AACF,GAAO,MAAA;AACL,IAAA,IAAAqC,YAAA,GAA0BP,KAAA,CAAMQ,MAAM,GAAG,CAAA;MAAAC,aAAA,GAAAC,kCAAA,CAAAH,YAAA,EAAA,CAAA,CAAA;AAAAI,MAAAA,cAAA,GAAAF,aAAA,CAAA,CAAA,CAAA;AAAlCG,MAAAA,UAAa,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAA,EAAE,GAAAA,cAAA,CAAA;AACdX,IAAAA,KAAA,GAAAY,UAAA,CAAA;AACV,GAAA;AAEA,EAAA,IAAIR,aAAe,EAAA;AACX,IAAA,IAAAC,MAAA,GAAQL,KAAM,CAAAM,OAAA,CAAQ,GAAG,CAAA,CAAA;AAC/B,IAAA,IAAID,WAAU,CAAI,CAAA,EAAA;AAChBL,MAAAA,KAAA,GAAAP,EAAAA,CAAAA,MAAA,CAAWO,KAAA,CAAMhB,KAAM,CAAA,CAAA,EAAGqB,MAAQ,GAAA,CAAC,CAAI,CAAA,CAAAZ,MAAA,CAAAO,KAAA,CAAMhB,KAAM,CAAAqB,MAAK,CAAE,CAAAnC,OAAA,CAAQ,MAAM,EAAE,CAAA,CAAA,CAAA;AAC5E,KAAA;AACF,GAAO,MAAA;IACG8B,KAAA,GAAAA,KAAA,CAAM9B,OAAQ,CAAA,IAAA,EAAM,EAAE,CAAA,CAAA;AAChC,GAAA;AAEO,EAAA,OAAA8B,KAAA,CAAM9B,OAAQ,CAAA,UAAA,EAAY,EAAE,CAAA,CAAA;AACrC;;;;;;;;;;;"}