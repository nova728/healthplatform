/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var table_hooks_useClassName = require('./useClassName.js');
require('../../hooks/useClass.js');
require('../../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../../_common/js/global-config/mobile/default-config.js');
require('../../_common/js/global-config/mobile/locale/zh_CN.js');
require('../../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-f98b59f6.js');
require('dayjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function formatCSSUnit(unit) {
  if (!unit) return unit;
  return isNaN(Number(unit)) ? unit : "".concat(unit, "px");
}
function useStyle(props) {
  var _toRefs = vue.toRefs(props),
    bordered = _toRefs.bordered,
    stripe = _toRefs.stripe,
    verticalAlign = _toRefs.verticalAlign,
    height = _toRefs.height,
    maxHeight = _toRefs.maxHeight,
    tableContentWidth = _toRefs.tableContentWidth;
  var _useClassName = table_hooks_useClassName["default"](),
    tableBaseClass = _useClassName.tableBaseClass,
    tableAlignClasses = _useClassName.tableAlignClasses;
  var tableClasses = vue.computed(function () {
    return [tableBaseClass.table, [tableAlignClasses[(verticalAlign === null || verticalAlign === void 0 ? void 0 : verticalAlign.value) || "middle"]], _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, tableBaseClass.bordered, bordered === null || bordered === void 0 ? void 0 : bordered.value), tableBaseClass.striped, stripe === null || stripe === void 0 ? void 0 : stripe.value), tableBaseClass.loading, props.loading)];
  });
  var tableContentStyles = vue.computed(function () {
    return {
      height: formatCSSUnit(height === null || height === void 0 ? void 0 : height.value),
      maxHeight: formatCSSUnit(maxHeight === null || maxHeight === void 0 ? void 0 : maxHeight.value)
    };
  });
  var tableElementStyles = vue.computed(function () {
    return {
      width: formatCSSUnit(tableContentWidth === null || tableContentWidth === void 0 ? void 0 : tableContentWidth.value)
    };
  });
  return {
    tableClasses: tableClasses,
    tableElementStyles: tableElementStyles,
    tableContentStyles: tableContentStyles
  };
}

exports["default"] = useStyle;
exports.formatCSSUnit = formatCSSUnit;
//# sourceMappingURL=useStyle.js.map
