/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var config = require('../config.js');
var tag_checkTagProps = require('./check-tag-props.js');
var hooks_useClass = require('../hooks/useClass.js');
var hooks_tnode = require('../hooks/tnode.js');
var shared_useVModel_index = require('../shared/useVModel/index.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

var prefix = config["default"].prefix;
var _CheckTag = vue.defineComponent({
  name: "".concat(prefix, "-check-tag"),
  props: tag_checkTagProps["default"],
  setup: function setup(props) {
    var tagClass = hooks_useClass.usePrefixClass("tag");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderContent = hooks_tnode.useContent();
    var _toRefs = vue.toRefs(props),
      checked = _toRefs.checked,
      modelValue = _toRefs.modelValue;
    var _useVModel = shared_useVModel_index.useVModel(checked, modelValue, props.defaultChecked, props.onChange, "checked"),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      innerChecked = _useVModel2[0],
      setInnerChecked = _useVModel2[1];
    var contentIsArray = vue.computed(function () {
      if (Array.isArray(props.content) && props.content.length === 2) {
        return true;
      }
      return false;
    });
    var tagClasses = vue.computed(function () {
      return ["".concat(tagClass.value), "".concat(tagClass.value, "--checkable"), "".concat(tagClass.value, "--").concat(props.shape), "".concat(tagClass.value, "--").concat(innerChecked.value ? "primary" : "default"), "".concat(tagClass.value, "--").concat(props.size), "".concat(tagClass.value, "--").concat(props.variant), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(tagClass.value, "--closable"), props.closable), "".concat(tagClass.value, "--disabled"), props.disabled), "".concat(tagClass.value, "--checked"), !props.disabled && innerChecked.value)];
    });
    var handleClick = function handleClick(e) {
      if (!props.disabled) {
        var _props$onClick;
        (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {
          e: e
        });
        setInnerChecked(!innerChecked.value);
      }
    };
    var handleClose = function handleClose(e) {
      e.stopPropagation();
      if (!props.disabled) {
        var _props$onClose;
        (_props$onClose = props.onClose) === null || _props$onClose === void 0 || _props$onClose.call(props, {
          e: e
        });
      }
    };
    return function () {
      var icon = renderTNodeJSX("icon");
      var readerText = function readerText() {
        if (contentIsArray.value) {
          return innerChecked.value ? props.content[0] : props.content[1];
        }
        var content = renderContent("default", "content");
        return content;
      };
      return vue.createVNode("span", {
        "class": tagClasses.value,
        "aria-disabled": props.disabled,
        "role": "button",
        "onClick": handleClick
      }, [icon && vue.createVNode("span", {
        "class": "".concat(tagClass.value, "__icon")
      }, [icon]), vue.createVNode("span", {
        "class": "".concat(tagClass.value, "__text")
      }, [readerText()]), props.closable && vue.createVNode("span", {
        "class": "".concat(tagClass.value, "__icon-close"),
        "onClick": handleClose
      }, [vue.createVNode(tdesignIconsVueNext.CloseIcon, null, null)])]);
    };
  }
});

exports["default"] = _CheckTag;
//# sourceMappingURL=check-tag.js.map
