/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var hooks_tnode = require('../hooks/tnode.js');
var config = require('../config.js');
var tag_props = require('./props.js');
var hooks_useClass = require('../hooks/useClass.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix = config["default"].prefix;
var _Tag = vue.defineComponent({
  name: "".concat(prefix, "-tag"),
  components: {
    CloseIcon: tdesignIconsVueNext.CloseIcon
  },
  props: tag_props["default"],
  emits: ["close", "click"],
  setup: function setup(props) {
    var tagClass = hooks_useClass.usePrefixClass("tag");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderContent = hooks_tnode.useContent();
    var tagStyle = vue.computed(function () {
      return props.maxWidth ? {
        maxWidth: typeof props.maxWidth === "number" ? "".concat(props.maxWidth, "px") : props.maxWidth
      } : {};
    });
    var tagClasses = vue.computed(function () {
      return ["".concat(tagClass.value), "".concat(tagClass.value, "--").concat(props.theme), "".concat(tagClass.value, "--").concat(props.shape), "".concat(tagClass.value, "--").concat(props.variant), "".concat(tagClass.value, "--").concat(props.size), _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(tagClass.value, "--closable"), props.closable), "".concat(tagClass.value, "--disabled"), props.disabled)];
    });
    var handleClose = function handleClose(e) {
      e.stopPropagation();
      if (!props.disabled) {
        var _props$onClose;
        (_props$onClose = props.onClose) === null || _props$onClose === void 0 || _props$onClose.call(props, {
          e: e
        });
      }
    };
    var handleClick = function handleClick(e) {
      if (!props.disabled) {
        var _props$onClick;
        (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {
          e: e
        });
      }
    };
    return function () {
      var tagContent = renderContent("default", "content");
      var icon = renderTNodeJSX("icon");
      return vue.createVNode("span", {
        "class": tagClasses.value,
        "style": tagStyle.value,
        "aria-disabled": props.disabled,
        "role": "button",
        "onClick": handleClick
      }, [icon && vue.createVNode("span", {
        "class": "".concat(tagClass.value, "__icon")
      }, [icon]), vue.createVNode("span", {
        "class": "".concat(tagClass.value, "__text")
      }, [tagContent]), props.closable && vue.createVNode("span", {
        "class": "".concat(tagClass.value, "__icon-close"),
        "onClick": handleClose
      }, [vue.createVNode(vue.resolveComponent("close-icon"), null, null)])]);
    };
  }
});

exports["default"] = _Tag;
//# sourceMappingURL=tag.js.map
