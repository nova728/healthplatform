/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var hooks_tnode = require('../hooks/tnode.js');
var overlay_index = require('../overlay/index.js');
var toast_props = require('./props.js');
var config = require('../config.js');
var hooks_useLockScroll = require('../hooks/useLockScroll.js');
var hooks_useClass = require('../hooks/useClass.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../overlay/overlay.js');
require('../shared/dom.js');
require('../overlay/props.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-2d756502.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-f98b59f6.js');
require('dayjs');
require('../shared/component.js');
require('../_util/useTouch.js');
require('../_util/getScrollParent.js');
require('../_util/supportsPassive.js');
require('../shared/util.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isNumber');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix = config["default"].prefix;
var vueToast = vue.defineComponent({
  name: "".concat(prefix, "-toast"),
  props: toast_props["default"],
  setup: function setup(props) {
    var toastTypeIcon = {
      loading: tdesignIconsVueNext.LoadingIcon,
      success: tdesignIconsVueNext.CheckCircleIcon,
      error: tdesignIconsVueNext.CloseCircleIcon
    };
    var toastClass = hooks_useClass.usePrefixClass("toast");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderContent = hooks_tnode.useContent();
    var toastRef = vue.ref();
    var customOverlayProps = vue.computed(function () {
      var toastOverlayProps = {
        preventScrollThrough: props.preventScrollThrough,
        visible: props.showOverlay
      };
      return _objectSpread(_objectSpread({}, props.overlayProps), toastOverlayProps);
    });
    var classes = vue.computed(function () {
      return ["".concat(toastClass.value), "".concat(toastClass.value, "__content"), "".concat(toastClass.value, "__icon"), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(toastClass.value, "--").concat(props.direction), props.direction), "".concat(toastClass.value, "__content--").concat(props.direction), props.direction), "".concat(toastClass.value, "--loading"), props.theme === "loading")];
    });
    var topOptions = {
      top: "25%",
      bottom: "75%",
      middle: "50%"
    };
    var computedStyle = vue.computed(function () {
      return {
        top: topOptions[props.placement]
      };
    });
    var iconClasses = vue.computed(function () {
      return [_defineProperty__default["default"]({}, "".concat(toastClass.value, "__icon--").concat(props.direction), props.direction)];
    });
    var iconContent = vue.computed(function () {
      var iconNode = renderTNodeJSX("icon");
      if (iconNode === void 0 && props.theme) {
        iconNode = vue.h(toastTypeIcon[props.theme]);
      }
      return iconNode;
    });
    var renderIconContent = vue.computed(function () {
      if (iconContent.value) {
        return vue.createVNode("div", {
          "class": iconClasses.value
        }, [iconContent.value]);
      }
      return "";
    });
    var textClasses = vue.computed(function () {
      return [_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(toastClass.value, "__text"), !iconContent.value), "".concat(toastClass.value, "__text--").concat(props.direction), props.direction)];
    });
    var messageContent = vue.computed(function () {
      return renderContent("default", "message");
    });
    var renderMessageContent = vue.computed(function () {
      if (messageContent.value) {
        return vue.createVNode("div", {
          "class": textClasses.value
        }, [messageContent.value]);
      }
      return "";
    });
    hooks_useLockScroll.useLockScroll(toastRef, function () {
      return props.preventScrollThrough;
    }, toastClass.value);
    return function () {
      return vue.createVNode("div", null, [vue.createVNode(overlay_index.Overlay, customOverlayProps.value, null), vue.createVNode("div", {
        "class": classes.value,
        "style": computedStyle.value
      }, [renderIconContent.value, renderMessageContent.value])]);
    };
  }
});

exports["default"] = vueToast;
//# sourceMappingURL=toast.js.map
