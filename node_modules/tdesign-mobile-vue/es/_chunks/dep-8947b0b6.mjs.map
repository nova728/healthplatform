{"version":3,"file":"dep-8947b0b6.mjs","sources":["../../node_modules/lodash/_baseDifference.js","../../node_modules/lodash/difference.js","../../node_modules/mitt/dist/mitt.mjs"],"sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n"],"names":["SetCache","require$$0","arrayIncludes","require$$1","arrayIncludesWith","require$$2","arrayMap","require$$3","baseUnary","require$$4","cacheHas","require$$5","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","isCommon","length","result","valuesLength","outer","value","computed","valuesIndex","push","_baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","difference_1","n","all","Map","on","t","e","i","get","set","off","splice","indexOf","emit","slice","map"],"mappings":"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"}