import { ActionSheetItem } from './type';
declare const _default: import("vue").DefineComponent<{
    align: {
        type: import("vue").PropType<"left" | "center">;
        default: "left" | "center";
        validator(val: "left" | "center"): boolean;
    };
    cancelText: {
        type: StringConstructor;
        default: string;
    };
    count: {
        type: NumberConstructor;
        default: number;
    };
    description: {
        type: StringConstructor;
        default: string;
    };
    items: {
        type: import("vue").PropType<(string | ActionSheetItem)[]>;
        default: any[];
        required: boolean;
    };
    showCancel: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<"list" | "grid">;
        default: "list" | "grid";
        validator(val: "list" | "grid"): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onCancel: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: import("vue").PropType<(trigger: import("./type").ActionSheetTriggerSource) => void>;
    onSelected: import("vue").PropType<(selected: string | ActionSheetItem, index: number) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "close" | "cancel" | "update:visible" | "selected")[], "update:modelValue" | "close" | "cancel" | "update:visible" | "selected", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    align: {
        type: import("vue").PropType<"left" | "center">;
        default: "left" | "center";
        validator(val: "left" | "center"): boolean;
    };
    cancelText: {
        type: StringConstructor;
        default: string;
    };
    count: {
        type: NumberConstructor;
        default: number;
    };
    description: {
        type: StringConstructor;
        default: string;
    };
    items: {
        type: import("vue").PropType<(string | ActionSheetItem)[]>;
        default: any[];
        required: boolean;
    };
    showCancel: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<"list" | "grid">;
        default: "list" | "grid";
        validator(val: "list" | "grid"): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onCancel: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: import("vue").PropType<(trigger: import("./type").ActionSheetTriggerSource) => void>;
    onSelected: import("vue").PropType<(selected: string | ActionSheetItem, index: number) => void>;
}>> & {
    onCancel?: (...args: any[]) => any;
    "onUpdate:modelValue"?: (...args: any[]) => any;
    onClose?: (...args: any[]) => any;
    "onUpdate:visible"?: (...args: any[]) => any;
    onSelected?: (...args: any[]) => any;
}, {
    description: string;
    modelValue: boolean;
    visible: boolean;
    theme: "list" | "grid";
    defaultVisible: boolean;
    align: "left" | "center";
    items: (string | ActionSheetItem)[];
    count: number;
    cancelText: string;
    showCancel: boolean;
}, {}>;
export default _default;
