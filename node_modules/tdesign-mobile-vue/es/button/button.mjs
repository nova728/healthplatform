/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-dc33ef46.mjs';
import { defineComponent, computed, createVNode, mergeProps, withDirectives, resolveDirective } from 'vue';
import { Loading } from '../loading/index.mjs';
import '../shared/index.mjs';
import ButtonProps from './props.mjs';
import config from '../config.mjs';
import { useFormDisabled } from '../form/hooks.mjs';
import { usePrefixClass } from '../hooks/useClass.mjs';
import { useTNodeJSX, useContent } from '../hooks/tnode.mjs';
import Hover from '../shared/hover.mjs';
import '../_chunks/dep-b617aa7d.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-6dd2b317.mjs';
import '../_chunks/dep-4b5beaed.mjs';
import '../_chunks/dep-67f4637f.mjs';
import '../_chunks/dep-4c2819a4.mjs';
import '../_chunks/dep-ab2bdb8f.mjs';
import '../_chunks/dep-57a75b98.mjs';
import '../_chunks/dep-c6268b4a.mjs';
import '../_chunks/dep-ff449344.mjs';
import '../_chunks/dep-a9ebd588.mjs';
import '../_chunks/dep-06d482c6.mjs';
import '../_chunks/dep-689db43b.mjs';
import '../_chunks/dep-791a4d06.mjs';
import '../_chunks/dep-5030b0d2.mjs';
import '../loading/icon/spinner.mjs';
import '../loading/props.mjs';
import '../shared/dom.mjs';
import '../_chunks/dep-14bda5a6.mjs';
import '../_chunks/dep-c06e51c6.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../loading/plugin.mjs';
import '../_chunks/dep-0c24a69a.mjs';
import '../_chunks/dep-dffd3346.mjs';
import '../_chunks/dep-4a0b07f2.mjs';
import '../_chunks/dep-4f0b3d47.mjs';
import '../_chunks/dep-4d5ede6c.mjs';
import '../_chunks/dep-9f2b5648.mjs';
import '../_chunks/dep-dff870f8.mjs';
import '../_chunks/dep-8eaf2b7e.mjs';
import '../_chunks/dep-44fb3d82.mjs';
import '../_chunks/dep-ce88baea.mjs';
import '../_chunks/dep-32f76754.mjs';
import '../_chunks/dep-5fe3ebe0.mjs';
import '../_chunks/dep-0d47707f.mjs';
import '../_chunks/dep-0bb5e0ba.mjs';
import '../_chunks/dep-4a37904d.mjs';
import '../_common/js/global-config/mobile/default-config.mjs';
import '../_common/js/global-config/mobile/locale/zh_CN.mjs';
import '../_chunks/dep-fbaa4502.mjs';
import '../_chunks/dep-c48250ca.mjs';
import '../_chunks/dep-8398b33d.mjs';
import '../_chunks/dep-ca4b618a.mjs';
import '../_chunks/dep-c0c7e354.mjs';
import '../_chunks/dep-12b97090.mjs';
import '../_chunks/dep-9f686842.mjs';
import '../_chunks/dep-feb307dc.mjs';
import '../_chunks/dep-f70b3591.mjs';
import '../_chunks/dep-82b3737e.mjs';
import '../hooks/render-tnode.mjs';
import '../_chunks/dep-35186489.mjs';
import '../_chunks/dep-afd6e78d.mjs';
import '../_chunks/dep-ceb2af97.mjs';
import '../_chunks/dep-8b0eae2f.mjs';
import '../config-provider/type.mjs';
import '../shared/component.mjs';
import '../shared/functions.mjs';
import '../shared/util.mjs';
import '../shared/constants.mjs';
import '../shared/render.mjs';
import '../shared/render-tnode.mjs';
import '../shared/useToggle/index.mjs';
import '../shared/useCountDown/index.mjs';
import '../_chunks/dep-1f2e940b.mjs';
import '@vueuse/core';
import '../shared/useCountDown/utils.mjs';
import '../shared/useDefault/index.mjs';
import '../shared/useChildSlots/index.mjs';
import '../shared/useVModel/index.mjs';
import '../shared/useTouch/index.mjs';
import '../shared/useScrollParent/index.mjs';
import '../shared/useExpose/index.mjs';
import '../shared/useTest/index.mjs';
import '../shared/useClickAway/index.mjs';
import '../shared/useGesture/index.mjs';
import '@use-gesture/vanilla';
import '../_chunks/dep-60e514fa.mjs';

var prefix = config.prefix;
var _Button = defineComponent({
  name: "".concat(prefix, "-button"),
  directives: {
    Hover: Hover
  },
  props: ButtonProps,
  setup: function setup(props) {
    var buttonClass = usePrefixClass("button");
    var renderTNodeJSX = useTNodeJSX();
    var renderTNodeContent = useContent();
    var isDisabled = useFormDisabled();
    var hoverDisabled = computed(function () {
      return isDisabled.value || props.loading;
    });
    var buttonClasses = computed(function () {
      return ["".concat(buttonClass.value), "".concat(buttonClass.value, "--size-").concat(props.size), "".concat(buttonClass.value, "--").concat(props.variant), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(buttonClass.value, "--").concat(props.theme), props.theme), "".concat(buttonClass.value, "--").concat(props.shape), props.shape), "".concat(buttonClass.value, "--ghost"), props.ghost), "".concat(buttonClass.value, "--block"), props.block), "".concat(buttonClass.value, "--disabled"), isDisabled.value), "".concat(buttonClass.value, "--loading"), props.loading)];
    });
    var handleClick = function handleClick(e) {
      if (!props.loading && !isDisabled.value) {
        var _props$onClick;
        (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, e);
      } else {
        e.stopPropagation();
      }
    };
    return function () {
      var suffix = renderTNodeJSX("suffix");
      var readerIcon = function readerIcon() {
        if (props.loading) {
          return createVNode(Loading, mergeProps({
            "inherit-color": true
          }, props.loadingProps), null);
        }
        return renderTNodeJSX("icon");
      };
      var readerContent = function readerContent() {
        var content = renderTNodeContent("default", "content");
        return createVNode("span", {
          "class": "".concat(buttonClass.value, "__content")
        }, [content]);
      };
      return withDirectives(createVNode("button", {
        "class": buttonClasses.value,
        "role": "button",
        "type": props.type,
        "disabled": isDisabled.value,
        "aria-disabled": isDisabled.value,
        "onClick": handleClick
      }, [readerIcon(), readerContent(), suffix]), [[resolveDirective("hover"), {
        className: "".concat(buttonClass.value, "--hover"),
        disabledHover: hoverDisabled.value
      }]]);
    };
  }
});

export { _Button as default };
//# sourceMappingURL=button.mjs.map
