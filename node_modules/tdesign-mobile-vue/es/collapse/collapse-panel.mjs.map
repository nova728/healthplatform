{"version":3,"file":"collapse-panel.mjs","sources":["../../src/collapse/collapse-panel.tsx"],"sourcesContent":["import { ref, computed, nextTick, watch, onMounted, inject, defineComponent, getCurrentInstance } from 'vue';\nimport { ChevronDownIcon, ChevronUpIcon } from 'tdesign-icons-vue-next';\nimport TCell from '../cell';\nimport props from './collapse-panel-props';\nimport config from '../config';\nimport { findIndex } from './util';\nimport { useTNodeJSX, useContent } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { CollapseProvide } from './collapse';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-collapse-panel`,\n  components: { TCell },\n  props,\n  setup(props, { slots }) {\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n\n    const collapsePanelClass = usePrefixClass('collapse-panel');\n\n    const parent = inject<CollapseProvide>('collapse');\n    const renderParentTNode: Function = inject('renderParentTNode');\n\n    const disabled = computed(() => parent?.disabled.value || props.disabled);\n    const rootClass = computed(() => ({\n      [`${collapsePanelClass.value}`]: true,\n      [`${collapsePanelClass.value}--${props.placement}`]: true,\n      [`${collapsePanelClass.value}--active`]: isActive.value,\n      [`${collapsePanelClass.value}--disabled`]: disabled.value,\n    }));\n    const isActive = computed(() => findIndex(props.value, parent?.activeValue.value) > -1);\n    const updatePanelValue = (args?: any) => {\n      if (props.value != null) {\n        parent?.onPanelChange(props.value, args);\n      }\n    };\n\n    const handleClick = (e: MouseEvent) => {\n      e?.stopPropagation();\n      if (disabled.value) {\n        return;\n      }\n      updatePanelValue({ e });\n    };\n\n    // 设置折叠/展开高度过渡\n    const bodyRef = ref();\n    const wrapRef = ref();\n    const headRef = ref();\n    const wrapperHeight = ref('');\n    let isToggle = true;\n    const updatePanelState = () => {\n      nextTick(() => {\n        if (!wrapRef.value) {\n          return;\n        }\n        const { height: headHeight } = headRef.value.getBoundingClientRect();\n        if (!isActive.value) {\n          isToggle = false;\n          wrapperHeight.value = `${headHeight}px`;\n          return;\n        }\n        if (isToggle) {\n          isToggle = false;\n          wrapperHeight.value = 'auto';\n          return;\n        }\n        setContentWrapperHeight();\n      });\n    };\n\n    watch(\n      isActive,\n      () => {\n        if (wrapperHeight.value === 'auto') {\n          setContentWrapperHeight();\n        }\n        nextTick(() => updatePanelState());\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    onMounted(() => {\n      if (parent?.defaultExpandAll) {\n        updatePanelValue();\n      }\n    });\n\n    const renderDefaultIcon = () => {\n      if (props.placement === 'bottom') {\n        return isActive.value ? <ChevronUpIcon /> : <ChevronDownIcon />;\n      }\n      return isActive.value ? <ChevronDownIcon /> : <ChevronUpIcon />;\n    };\n    const panelExpandIcon = computed(() => slots.expandIcon || props.expandIcon);\n    const renderRightIcon = () => {\n      const tNodeRender = panelExpandIcon.value === undefined ? renderParentTNode : renderTNodeJSX;\n      return (\n        <div class={`${collapsePanelClass.value}__header-icon`}>{tNodeRender('expandIcon', renderDefaultIcon())}</div>\n      );\n    };\n\n    const renderPanelContent = () => {\n      const panelContent = renderContent('default', 'content');\n      if (props.destroyOnCollapse && !isActive.value) {\n        return null;\n      }\n\n      return (\n        <div ref={bodyRef} class={`${collapsePanelClass.value}__content`}>\n          {panelContent}\n        </div>\n      );\n    };\n\n    const setContentWrapperHeight = () => {\n      const { height: headHeight } = headRef.value.getBoundingClientRect();\n      const { height: bodyHeight } = bodyRef.value.getBoundingClientRect();\n      const height = headHeight + bodyHeight;\n      wrapperHeight.value = `${height}px`;\n    };\n\n    const onTransitionEnd = () => {\n      if (isActive.value) {\n        wrapperHeight.value = 'auto';\n      }\n    };\n\n    return () => {\n      const headerContent = renderTNodeJSX('header');\n      const noteContent = renderTNodeJSX('headerRightContent');\n      const leftIcon = renderTNodeJSX('headerLeftIcon');\n\n      return (\n        <div\n          ref={wrapRef}\n          class={rootClass.value}\n          style={{ height: wrapperHeight.value }}\n          onTransitionend={onTransitionEnd}\n        >\n          <div ref={headRef} class={`${collapsePanelClass.value}__title`} onClick={handleClick}>\n            <TCell\n              class={[\n                `${collapsePanelClass.value}__header`,\n                `${collapsePanelClass.value}__header--${props.placement}`,\n                { [`${collapsePanelClass.value}__header--expanded`]: isActive.value },\n              ]}\n              v-slots={{\n                leftIcon: () => leftIcon,\n                title: () => headerContent,\n                note: () => noteContent,\n                rightIcon: () => renderRightIcon(),\n              }}\n            ></TCell>\n          </div>\n          {renderPanelContent()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["prefix","config","defineComponent","name","components","TCell","props","setup","slots","_ref","renderTNodeJSX","useTNodeJSX","renderContent","useContent","collapsePanelClass","usePrefixClass","parent","inject","renderParentTNode","disabled","computed","value","rootClass","_defineProperty","concat","placement","isActive","findIndex","activeValue","updatePanelValue","args","onPanelChange","handleClick","e","stopPropagation","bodyRef","ref","wrapRef","headRef","wrapperHeight","isToggle","updatePanelState","nextTick","_headRef$value$getBou","getBoundingClientRect","headHeight","height","setContentWrapperHeight","watch","immediate","onMounted","defaultExpandAll","renderDefaultIcon","_createVNode","ChevronUpIcon","ChevronDownIcon","panelExpandIcon","expandIcon","renderRightIcon","tNodeRender","renderPanelContent","panelContent","destroyOnCollapse","_headRef$value$getBou2","_bodyRef$value$getBou","bodyHeight","onTransitionEnd","headerContent","noteContent","leftIcon","title","note","rightIcon"],"mappings":"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"}