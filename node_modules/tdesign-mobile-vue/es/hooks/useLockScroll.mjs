/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { onMounted, nextTick, onActivated, onDeactivated, onBeforeUnmount, watch } from 'vue';
import { useTouch } from '../_util/useTouch.mjs';
import getScrollParent from '../_util/getScrollParent.mjs';
import { supportsPassive } from '../_util/supportsPassive.mjs';
import '../shared/index.mjs';
import '../shared/functions.mjs';
import '../shared/util.mjs';
import '../_chunks/dep-4c2819a4.mjs';
import '../_chunks/dep-4b5beaed.mjs';
import '../_chunks/dep-5030b0d2.mjs';
import '../_chunks/dep-57a75b98.mjs';
import '../_chunks/dep-c6268b4a.mjs';
import '../_chunks/dep-b617aa7d.mjs';
import '../_chunks/dep-06d482c6.mjs';
import '../config.mjs';
import '../shared/component.mjs';
import '../shared/constants.mjs';
import '../shared/render.mjs';
import '../_chunks/dep-ca4b618a.mjs';
import '../_chunks/dep-c0c7e354.mjs';
import '../_chunks/dep-12b97090.mjs';
import '../_chunks/dep-ff449344.mjs';
import '../_chunks/dep-a9ebd588.mjs';
import '../_chunks/dep-9f686842.mjs';
import '../_chunks/dep-feb307dc.mjs';
import '../_chunks/dep-f70b3591.mjs';
import '../shared/dom.mjs';
import '../_chunks/dep-14bda5a6.mjs';
import '../_chunks/dep-c06e51c6.mjs';
import '../_chunks/dep-ab2bdb8f.mjs';
import '../shared/render-tnode.mjs';
import '../shared/useToggle/index.mjs';
import '../shared/useCountDown/index.mjs';
import '../_chunks/dep-1f2e940b.mjs';
import '@vueuse/core';
import '../shared/useCountDown/utils.mjs';
import '../shared/useDefault/index.mjs';
import '../shared/useChildSlots/index.mjs';
import '../_chunks/dep-6dd2b317.mjs';
import '../shared/useVModel/index.mjs';
import '../_chunks/dep-82b3737e.mjs';
import '../shared/useTouch/index.mjs';
import '../shared/useScrollParent/index.mjs';
import '../shared/useExpose/index.mjs';
import '../shared/useTest/index.mjs';
import '../_chunks/dep-dc33ef46.mjs';
import '../shared/useClickAway/index.mjs';
import '../shared/useGesture/index.mjs';
import '@use-gesture/vanilla';
import '../shared/hover.mjs';

var totalLockCount = 0;
var mounted = null;
function useLockScroll(rootRef, shouldLock, componentName) {
  var touch = useTouch();
  var BODY_LOCK_CLASS = "".concat(componentName, "--lock");
  var onTouchMove = function onTouchMove(event) {
    touch.move(event);
    var direction = touch.deltaY.value > 0 ? "10" : "01";
    var el = getScrollParent(event.target, rootRef.value);
    if (!el) return;
    var scrollHeight = el.scrollHeight,
      offsetHeight = el.offsetHeight,
      scrollTop = el.scrollTop;
    var status = "11";
    if (scrollTop === 0) {
      status = offsetHeight >= scrollHeight ? "00" : "01";
    } else if (scrollTop + offsetHeight >= scrollHeight) {
      status = "10";
    }
    if (status !== "11" && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {
      if (event.cancelable) {
        event.preventDefault();
      }
    }
  };
  var lock = function lock() {
    document.addEventListener("touchstart", touch.start);
    document.addEventListener("touchmove", onTouchMove, supportsPassive.value ? {
      passive: false
    } : false);
    if (!totalLockCount) {
      document.body.classList.add(BODY_LOCK_CLASS);
    }
    totalLockCount += 1;
  };
  var unlock = function unlock() {
    if (totalLockCount) {
      document.removeEventListener("touchstart", touch.start);
      document.removeEventListener("touchmove", onTouchMove);
      totalLockCount -= 1;
      if (!totalLockCount) {
        document.body.classList.remove(BODY_LOCK_CLASS);
      }
    }
  };
  var init = function init() {
    return shouldLock() && lock();
  };
  var destroy = function destroy() {
    return shouldLock() && unlock();
  };
  onMounted(function () {
    init();
    nextTick(function () {
      mounted = true;
    });
  });
  onActivated(function () {
    if (mounted) {
      init();
    }
  });
  onDeactivated(destroy);
  onBeforeUnmount(destroy);
  watch(shouldLock, function (value) {
    value ? lock() : unlock();
  });
}

export { useLockScroll };
//# sourceMappingURL=useLockScroll.mjs.map
