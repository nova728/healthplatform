{"version":3,"file":"image.mjs","sources":["../../src/image/image.tsx"],"sourcesContent":["import { ref, computed, defineComponent, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\n\nimport Loading from '../loading';\nimport config from '../config';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\n\nimport props from './props';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-image`,\n  components: { CloseIcon, Loading },\n  props,\n  setup(props, context) {\n    const imageClass = usePrefixClass('image');\n    const renderTNodeJSX = useTNodeJSX();\n\n    // 默认loading和error状态展示，slot支持Node和Function\n    const closeIcon = <CloseIcon size=\"22px\" />;\n    const LoadingIcon = <Loading theme=\"dots\" inheritColor={true} />;\n\n    // 记录图片的loading、error状态\n    const isLoading = ref(true);\n    const isError = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => ({\n      objectFit: props.fit,\n      objectPosition: props.position,\n    }));\n    const imageClasses = computed(() => ({\n      [`${imageClass.value}`]: true,\n      [`${imageClass.value}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      props.onLoad?.({ e });\n      isLoading.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      props.onError?.({ e });\n      isLoading.value = false;\n      isError.value = true;\n    };\n\n    const maskContent = computed(() => {\n      const statusContent = () => {\n        if (context.slots?.loading && isLoading.value) {\n          return renderTNodeJSX('loading');\n        }\n        if (!context.slots?.loading && isLoading.value) {\n          return LoadingIcon;\n        }\n        if (context.slots?.error && isError.value) {\n          return renderTNodeJSX('error');\n        }\n        if (!context.slots?.error && isError.value) {\n          return closeIcon;\n        }\n        return false;\n      };\n      const node = () => {\n        if (isLoading.value || isError.value) {\n          if (props.lazy && realSrc.value === '') {\n            return;\n          }\n          return <div class={`${imageClass.value}__mask`}>{statusContent()}</div>;\n        }\n      };\n      return node();\n    });\n\n    return () => {\n      return (\n        <div class={imageClasses.value}>\n          {maskContent.value}\n          <picture>\n            {props.srcset &&\n              Object.entries(props.srcset).map((item, index) => <source key={index} type={item[0]} srcset={item[1]} />)}\n            <img\n              ref={imageDOM}\n              class={`${imageClass.value}__img`}\n              style={imageStyles.value}\n              src={realSrc.value}\n              alt={props.alt}\n              onLoad={handleImgLoadCompleted}\n              onError={handleImgLoadError}\n            />\n          </picture>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["prefix","config","defineComponent","name","components","CloseIcon","Loading","props","setup","context","imageClass","usePrefixClass","renderTNodeJSX","useTNodeJSX","closeIcon","_createVNode","LoadingIcon","isLoading","ref","isError","imageStyles","computed","objectFit","fit","objectPosition","position","imageClasses","_defineProperty","concat","value","shape","imageDOM","realSrc","watchEffect","lazy","src","_useIntersectionObser","useIntersectionObserver","_ref2","observerElement","_ref3","_slicedToArray","isIntersecting","stop","handleImgLoadCompleted","e","_props2$onLoad","onLoad","handleImgLoadError","_props2$onError","onError","maskContent","statusContent","_context$slots","_context$slots2","_context$slots3","_context$slots4","slots","loading","error","node","srcset","Object","entries","map","item","index","alt"],"mappings":"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"}