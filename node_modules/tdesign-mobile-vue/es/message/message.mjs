/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-dc33ef46.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-4c2819a4.mjs';
import { h, defineComponent, reactive, toRefs, computed, ref, onMounted, nextTick, watch, createVNode, Transition } from 'vue';
import { InfoCircleFilledIcon, CheckCircleFilledIcon, CloseIcon } from 'tdesign-icons-vue-next';
import { i as isObject_1 } from '../_chunks/dep-c06e51c6.mjs';
import { i as isString_1 } from '../_chunks/dep-ab2bdb8f.mjs';
import { Link } from '../link/index.mjs';
import props from './props.mjs';
import config from '../config.mjs';
import '../shared/index.mjs';
import { usePrefixClass } from '../hooks/useClass.mjs';
import { useTNodeJSX, useContent } from '../hooks/tnode.mjs';
import { useVModel } from '../shared/useVModel/index.mjs';
import '../_chunks/dep-b617aa7d.mjs';
import '../_chunks/dep-4b5beaed.mjs';
import '../_chunks/dep-57a75b98.mjs';
import '../_chunks/dep-c6268b4a.mjs';
import '../_chunks/dep-ff449344.mjs';
import '../_chunks/dep-a9ebd588.mjs';
import '../_chunks/dep-06d482c6.mjs';
import '../link/link.mjs';
import '../link/props.mjs';
import '../form/hooks.mjs';
import '../_chunks/dep-60e514fa.mjs';
import '../_chunks/dep-14bda5a6.mjs';
import '../_chunks/dep-ca4b618a.mjs';
import '../_chunks/dep-c0c7e354.mjs';
import '../_chunks/dep-12b97090.mjs';
import '../_chunks/dep-9f686842.mjs';
import '../_chunks/dep-feb307dc.mjs';
import '../_chunks/dep-f70b3591.mjs';
import '../_chunks/dep-82b3737e.mjs';
import '../hooks/render-tnode.mjs';
import '../_chunks/dep-35186489.mjs';
import '../_chunks/dep-afd6e78d.mjs';
import '../_chunks/dep-44fb3d82.mjs';
import '../_chunks/dep-ce88baea.mjs';
import '../_chunks/dep-4d5ede6c.mjs';
import '../_chunks/dep-32f76754.mjs';
import '../_chunks/dep-4f0b3d47.mjs';
import '../_chunks/dep-ceb2af97.mjs';
import '../_chunks/dep-8b0eae2f.mjs';
import '../_chunks/dep-dffd3346.mjs';
import '../_chunks/dep-4a0b07f2.mjs';
import '../_chunks/dep-9f2b5648.mjs';
import '../_chunks/dep-dff870f8.mjs';
import '../_chunks/dep-8eaf2b7e.mjs';
import '../_chunks/dep-5fe3ebe0.mjs';
import '../_chunks/dep-0c24a69a.mjs';
import '../_chunks/dep-0d47707f.mjs';
import '../_chunks/dep-0bb5e0ba.mjs';
import '../_chunks/dep-4a37904d.mjs';
import '../_common/js/global-config/mobile/default-config.mjs';
import '../_common/js/global-config/mobile/locale/zh_CN.mjs';
import '../_chunks/dep-fbaa4502.mjs';
import '../_chunks/dep-c48250ca.mjs';
import '../_chunks/dep-8398b33d.mjs';
import '../config-provider/type.mjs';
import './style/css.mjs';
import '../link/type.mjs';
import '../shared/component.mjs';
import '../shared/functions.mjs';
import '../shared/util.mjs';
import '../_chunks/dep-5030b0d2.mjs';
import '../shared/constants.mjs';
import '../shared/render.mjs';
import '../shared/dom.mjs';
import '../shared/render-tnode.mjs';
import '../shared/useToggle/index.mjs';
import '../shared/useCountDown/index.mjs';
import '../_chunks/dep-1f2e940b.mjs';
import '@vueuse/core';
import '../shared/useCountDown/utils.mjs';
import '../shared/useDefault/index.mjs';
import '../shared/useChildSlots/index.mjs';
import '../_chunks/dep-6dd2b317.mjs';
import '../shared/useTouch/index.mjs';
import '../shared/useScrollParent/index.mjs';
import '../shared/useExpose/index.mjs';
import '../shared/useTest/index.mjs';
import '../shared/useClickAway/index.mjs';
import '../shared/useGesture/index.mjs';
import '@use-gesture/vanilla';
import '../shared/hover.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix = config.prefix;
var iconDefault = {
  info: h(InfoCircleFilledIcon),
  success: h(CheckCircleFilledIcon),
  warning: h(InfoCircleFilledIcon),
  error: h(InfoCircleFilledIcon)
};
var closeBtnDefault = h(CloseIcon);
var Message = defineComponent({
  name: "".concat(prefix, "-message"),
  props: props,
  setup: function setup(props2, context) {
    var messageClass = usePrefixClass("message");
    var renderTNodeJSX = useTNodeJSX();
    var renderContent = useContent();
    var state = reactive({
      duration: 0,
      offset: 0,
      listWidth: 0,
      itemWidth: 0,
      scroll: {
        marquee: false,
        speed: 50,
        loop: -1,
        delay: 300
      }
    });
    var _toRefs = toRefs(props2),
      visible = _toRefs.visible,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(visible, modelValue, props2.defaultVisible),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      currentVisible = _useVModel2[0],
      setVisible = _useVModel2[1];
    var rootClasses = computed(function () {
      return _defineProperty(_defineProperty(_defineProperty({}, "".concat(messageClass.value), true), "".concat(messageClass.value, "--").concat(props2.theme), true), "".concat(messageClass.value, "-align--").concat(props2.align), !!props2.align);
    });
    var textWrapClasses = computed(function () {
      return _defineProperty(_defineProperty({}, "".concat(messageClass.value, "__text-wrap"), true), "".concat(messageClass.value, "__text-nowrap"), props2.marquee);
    });
    var changeNumToStr = function changeNumToStr() {
      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      return arr.map(function (item) {
        return typeof item === "number" ? "".concat(item, "px") : item;
      });
    };
    var getMessageStylesOffset = function getMessageStylesOffset(offset) {
      var arr = changeNumToStr(offset);
      return {
        top: arr[0],
        right: arr[1],
        left: arr[1]
      };
    };
    var rootStyles = computed(function () {
      var offset = props2.offset;
      var offsetStyle = offset ? getMessageStylesOffset(offset) : [];
      return _objectSpread({
        zIndex: props2.zIndex
      }, offsetStyle);
    });
    var linkContent = computed(function () {
      var _context$slots;
      if (typeof props2.link === "function" || (_context$slots = context.slots) !== null && _context$slots !== void 0 && _context$slots.link) {
        return renderTNodeJSX("link");
      }
      if (isObject_1(props2.link) || isString_1(props2.link)) {
        var _link = isObject_1(props2.link) ? _objectSpread({}, props2.link) : {
          content: props2.link
        };
        return h(Link, _objectSpread({
          theme: "primary"
        }, _link));
      }
      return null;
    });
    var animateStyle = computed(function () {
      return {
        transform: state.offset ? "translateX(".concat(state.offset, "px)") : "",
        transitionDuration: "".concat(state.duration, "s"),
        transitionTimingFunction: "linear"
      };
    });
    var textWrapDOM = ref();
    var textDOM = ref();
    var handleScrolling = function handleScrolling() {
      var _ref3, _props2$marquee, _props2$marquee2, _props2$marquee3, _props2$marquee4, _props2$marquee5, _props2$marquee6;
      if (!(props2 !== null && props2 !== void 0 && props2.marquee) || ((_ref3 = isObject_1(props2 === null || props2 === void 0 ? void 0 : props2.marquee) && (props2 === null || props2 === void 0 ? void 0 : props2.marquee)) === null || _ref3 === void 0 ? void 0 : _ref3.loop) === 0) {
        return;
      }
      var _state$scroll = state.scroll,
        loop = _state$scroll.loop,
        speed = _state$scroll.speed,
        delay = _state$scroll.delay;
      state.scroll = {
        marquee: true,
        loop: Math.max(props2.marquee === true || ((_props2$marquee = props2.marquee) === null || _props2$marquee === void 0 ? void 0 : _props2$marquee.loop) == null ? loop : (_props2$marquee2 = props2.marquee) === null || _props2$marquee2 === void 0 ? void 0 : _props2$marquee2.loop, -1),
        speed: Math.max(props2.marquee === true || ((_props2$marquee3 = props2.marquee) === null || _props2$marquee3 === void 0 ? void 0 : _props2$marquee3.speed) == null ? speed : (_props2$marquee4 = props2.marquee) === null || _props2$marquee4 === void 0 ? void 0 : _props2$marquee4.speed, 1),
        delay: Math.max(props2.marquee === true || ((_props2$marquee5 = props2.marquee) === null || _props2$marquee5 === void 0 ? void 0 : _props2$marquee5.delay) == null ? delay : (_props2$marquee6 = props2.marquee) === null || _props2$marquee6 === void 0 ? void 0 : _props2$marquee6.delay, 0)
      };
      state.offset = 0;
      setTimeout(function () {
        var _textWrapDOM$value, _textDOM$value;
        var textWrapDOMWidth = (_textWrapDOM$value = textWrapDOM.value) === null || _textWrapDOM$value === void 0 ? void 0 : _textWrapDOM$value.getBoundingClientRect().width;
        var textDOMWidth = (_textDOM$value = textDOM.value) === null || _textDOM$value === void 0 ? void 0 : _textDOM$value.getBoundingClientRect().width;
        state.offset = -textDOMWidth;
        state.duration = textDOMWidth / state.scroll.speed;
        state.listWidth = textWrapDOMWidth;
        state.itemWidth = textDOMWidth;
      }, state.scroll.delay);
    };
    var handleTransitionend = function handleTransitionend() {
      resetTransition();
      if (state.scroll.loop === -1) {
        return;
      }
      state.scroll.loop = --state.scroll.loop;
      if (state.scroll.loop === 0) {
        state.scroll.marquee = false;
      }
    };
    var resetTransition = function resetTransition() {
      state.duration = 0;
      state.offset = state.listWidth;
      setTimeout(function () {
        state.offset = -state.itemWidth;
        state.duration = (state.itemWidth + state.listWidth) / state.scroll.speed;
      }, 0);
    };
    var onLinkClick = function onLinkClick(e) {
      var _props2$onLinkClick;
      (_props2$onLinkClick = props2.onLinkClick) === null || _props2$onLinkClick === void 0 || _props2$onLinkClick.call(props2, {
        e: e
      });
    };
    var onCloseBtnClick = function onCloseBtnClick(e) {
      var _props2$onCloseBtnCli;
      (_props2$onCloseBtnCli = props2.onCloseBtnClick) === null || _props2$onCloseBtnCli === void 0 || _props2$onCloseBtnCli.call(props2, {
        e: e
      });
      setVisible(false);
    };
    var handleDuration = function handleDuration() {
      if (props2.duration > 0) {
        setTimeout(function () {
          var _props2$onDurationEnd;
          (_props2$onDurationEnd = props2.onDurationEnd) === null || _props2$onDurationEnd === void 0 || _props2$onDurationEnd.call(props2);
          setVisible(false);
        }, props2.duration);
      }
    };
    onMounted(function () {
      nextTick(function () {
        if (currentVisible.value) {
          handleScrolling();
        }
      });
    });
    watch(function () {
      return currentVisible.value;
    }, function (val) {
      if (val === false) return;
      setVisible(true);
      handleDuration();
      nextTick(handleScrolling);
    });
    return function () {
      var prefixIconContent = renderTNodeJSX("icon", {
        defaultNode: iconDefault === null || iconDefault === void 0 ? void 0 : iconDefault[props2.theme || "info"]
      });
      var computedContent = renderContent("default", "content");
      var closeBtnContent = renderTNodeJSX("closeBtn", {
        defaultNode: closeBtnDefault
      });
      return createVNode(Transition, {
        "name": "message"
      }, {
        default: function _default() {
          return [currentVisible.value && createVNode("div", {
            "ref": "root",
            "class": rootClasses.value,
            "style": rootStyles.value
          }, [prefixIconContent && createVNode("div", {
            "class": "".concat(messageClass.value, "__icon--left")
          }, [prefixIconContent]), createVNode("div", {
            "ref": textWrapDOM,
            "class": textWrapClasses.value
          }, [createVNode("div", {
            "ref": textDOM,
            "class": "".concat(messageClass.value, "__text"),
            "style": state.scroll.marquee ? animateStyle.value : "",
            "onTransitionend": handleTransitionend
          }, [computedContent])]), linkContent.value && createVNode("div", {
            "class": "".concat(messageClass.value, "__link"),
            "onClick": onLinkClick
          }, [linkContent.value]), closeBtnContent && createVNode("div", {
            "class": ["".concat(messageClass.value, "__close-wrap"), "".concat(messageClass.value, "__icon--right")],
            "onClick": onCloseBtnClick
          }, [closeBtnContent])])];
        }
      });
    };
  }
});

export { Message as default };
//# sourceMappingURL=message.mjs.map
