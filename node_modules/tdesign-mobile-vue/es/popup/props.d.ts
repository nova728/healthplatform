import { TdPopupProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    attach: {
        type: PropType<import("..").AttachNode>;
        default: string;
    };
    closeBtn: {
        type: PropType<boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    destroyOnClose: BooleanConstructor;
    overlayProps: {
        type: PropType<import("../overlay/type").TdOverlayProps>;
        default: () => {};
    };
    placement: {
        type: PropType<"left" | "center" | "right" | "top" | "bottom">;
        default: "left" | "center" | "right" | "top" | "bottom";
        validator(val: TdPopupProps['placement']): boolean;
    };
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    transitionName: {
        type: StringConstructor;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    zIndex: {
        type: NumberConstructor;
    };
    onClose: PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClosed: PropType<() => void>;
    onOpen: PropType<() => void>;
    onOpened: PropType<() => void>;
    onVisibleChange: PropType<(visible: boolean, trigger: import("./type").PopupSource) => void>;
};
export default _default;
