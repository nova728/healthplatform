import { RadioOption, RadioValue } from '../radio/type';
import { KeysType } from '../common';
declare const _default: import("vue").DefineComponent<{
    allowUncheck: BooleanConstructor;
    borderless: BooleanConstructor;
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    icon: {
        type: import("vue").PropType<"circle" | "line" | "dot" | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)[]>;
        default: string;
    };
    keys: {
        type: import("vue").PropType<KeysType>;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[]>;
    };
    placement: {
        type: import("vue").PropType<"left" | "right">;
        default: "left" | "right";
        validator(val: "left" | "right"): boolean;
    };
    value: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<RadioValue>;
    };
    onChange: import("vue").PropType<(value: RadioValue, context: {
        e: Event;
        name?: string;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    allowUncheck: BooleanConstructor;
    borderless: BooleanConstructor;
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    icon: {
        type: import("vue").PropType<"circle" | "line" | "dot" | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)[]>;
        default: string;
    };
    keys: {
        type: import("vue").PropType<KeysType>;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[]>;
    };
    placement: {
        type: import("vue").PropType<"left" | "right">;
        default: "left" | "right";
        validator(val: "left" | "right"): boolean;
    };
    value: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<RadioValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<RadioValue>;
    };
    onChange: import("vue").PropType<(value: RadioValue, context: {
        e: Event;
        name?: string;
    }) => void>;
}>>, {
    value: RadioValue;
    modelValue: RadioValue;
    name: string;
    disabled: boolean;
    icon: "circle" | "line" | "dot" | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)[];
    placement: "left" | "right";
    allowUncheck: boolean;
    borderless: boolean;
}, {}>;
export default _default;
