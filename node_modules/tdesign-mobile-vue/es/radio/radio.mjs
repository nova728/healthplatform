/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-dc33ef46.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-4c2819a4.mjs';
import { defineComponent, inject, computed, createVNode, mergeProps } from 'vue';
import { CheckCircleFilledIcon, CheckIcon } from 'tdesign-icons-vue-next';
import '../shared/index.mjs';
import config from '../config.mjs';
import props from './props.mjs';
import { useFormDisabled } from '../form/hooks.mjs';
import { usePrefixClass } from '../hooks/useClass.mjs';
import { useContent, useTNodeJSX } from '../hooks/tnode.mjs';
import { useDefault } from '../shared/useDefault/index.mjs';
import '../_chunks/dep-b617aa7d.mjs';
import '../_chunks/dep-4b5beaed.mjs';
import '../shared/functions.mjs';
import '../shared/util.mjs';
import '../_chunks/dep-5030b0d2.mjs';
import '../_chunks/dep-57a75b98.mjs';
import '../_chunks/dep-c6268b4a.mjs';
import '../_chunks/dep-06d482c6.mjs';
import '../shared/component.mjs';
import '../shared/constants.mjs';
import '../shared/render.mjs';
import '../_chunks/dep-ca4b618a.mjs';
import '../_chunks/dep-c0c7e354.mjs';
import '../_chunks/dep-12b97090.mjs';
import '../_chunks/dep-ff449344.mjs';
import '../_chunks/dep-a9ebd588.mjs';
import '../_chunks/dep-9f686842.mjs';
import '../_chunks/dep-feb307dc.mjs';
import '../_chunks/dep-f70b3591.mjs';
import '../shared/dom.mjs';
import '../_chunks/dep-14bda5a6.mjs';
import '../_chunks/dep-c06e51c6.mjs';
import '../_chunks/dep-ab2bdb8f.mjs';
import '../shared/render-tnode.mjs';
import '../shared/useToggle/index.mjs';
import '../shared/useCountDown/index.mjs';
import '../_chunks/dep-1f2e940b.mjs';
import '@vueuse/core';
import '../shared/useCountDown/utils.mjs';
import '../shared/useChildSlots/index.mjs';
import '../_chunks/dep-6dd2b317.mjs';
import '../shared/useVModel/index.mjs';
import '../_chunks/dep-82b3737e.mjs';
import '../shared/useTouch/index.mjs';
import '../shared/useScrollParent/index.mjs';
import '../shared/useExpose/index.mjs';
import '../shared/useTest/index.mjs';
import '../shared/useClickAway/index.mjs';
import '../shared/useGesture/index.mjs';
import '@use-gesture/vanilla';
import '../shared/hover.mjs';
import '../_chunks/dep-60e514fa.mjs';
import '../_chunks/dep-ceb2af97.mjs';
import '../_chunks/dep-8b0eae2f.mjs';
import '../_chunks/dep-dffd3346.mjs';
import '../_chunks/dep-4a0b07f2.mjs';
import '../_chunks/dep-4f0b3d47.mjs';
import '../_chunks/dep-4d5ede6c.mjs';
import '../_chunks/dep-9f2b5648.mjs';
import '../_chunks/dep-dff870f8.mjs';
import '../_chunks/dep-8eaf2b7e.mjs';
import '../_chunks/dep-44fb3d82.mjs';
import '../_chunks/dep-ce88baea.mjs';
import '../_chunks/dep-32f76754.mjs';
import '../_chunks/dep-5fe3ebe0.mjs';
import '../_chunks/dep-afd6e78d.mjs';
import '../_chunks/dep-0c24a69a.mjs';
import '../_chunks/dep-0d47707f.mjs';
import '../_chunks/dep-0bb5e0ba.mjs';
import '../_chunks/dep-4a37904d.mjs';
import '../_common/js/global-config/mobile/default-config.mjs';
import '../_common/js/global-config/mobile/locale/zh_CN.mjs';
import '../_chunks/dep-fbaa4502.mjs';
import '../_chunks/dep-c48250ca.mjs';
import '../_chunks/dep-8398b33d.mjs';
import '../config-provider/type.mjs';
import '../hooks/render-tnode.mjs';
import '../_chunks/dep-35186489.mjs';

var prefix = config.prefix;
var _Radio = defineComponent({
  name: "".concat(prefix, "-radio"),
  props: props,
  emits: ["update:checked", "update:modelValue", "change"],
  setup: function setup(props2, context) {
    var renderTNodeContent = useContent();
    var renderTNodeJSX = useTNodeJSX();
    var radioClass = usePrefixClass("radio");
    var _useDefault = useDefault(props2, context.emit, "checked", "change"),
      _useDefault2 = _slicedToArray(_useDefault, 2),
      innerChecked = _useDefault2[0],
      setInnerChecked = _useDefault2[1];
    var rootGroupProps = inject("rootGroupProps", {});
    var rootGroupValue = inject("rootGroupValue", {});
    var rootGroupChange = inject("rootGroupChange", void 0);
    var groupDisabled = computed(function () {
      return rootGroupProps === null || rootGroupProps === void 0 ? void 0 : rootGroupProps.disabled;
    });
    var isDisabled = useFormDisabled(groupDisabled);
    var radioChecked = computed(function () {
      return innerChecked.value || props2.value && props2.value === (rootGroupValue === null || rootGroupValue === void 0 ? void 0 : rootGroupValue.value);
    });
    var finalBorderless = computed(function () {
      if (props2.borderless == null && "borderless" in rootGroupProps) return rootGroupProps.borderless;
      return props2.borderless;
    });
    var finalPlacement = computed(function () {
      if (props2.placement == null && "placement" in rootGroupProps) return rootGroupProps.placement;
      return props2.placement || "left";
    });
    var finalAllowUncheck = computed(function () {
      return Boolean(props2.allowUncheck || (rootGroupProps === null || rootGroupProps === void 0 ? void 0 : rootGroupProps.allowUncheck));
    });
    var inputProps = computed(function () {
      return {
        name: rootGroupProps.name || props2.name,
        checked: radioChecked.value,
        disabled: isDisabled.value,
        readonly: props2.readonly,
        value: props2.value
      };
    });
    var iconContent = computed(function () {
      var _props2$icon;
      if (((_props2$icon = props2.icon) === null || _props2$icon === void 0 ? void 0 : _props2$icon.length) === 2) {
        var iconIndex = radioChecked.value ? 0 : 1;
        return props2.icon[iconIndex];
      }
      return null;
    });
    var radioClasses = computed(function () {
      return ["".concat(radioClass.value), "".concat(radioClass.value, "--").concat(finalPlacement.value), _defineProperty({}, "".concat(radioClass.value, "--block"), props2.block)];
    });
    var titleClasses = computed(function () {
      return ["".concat(radioClass.value, "__title"), _defineProperty({}, "".concat(radioClass.value, "__title--disabled"), isDisabled.value)];
    });
    var iconClass = computed(function () {
      return ["".concat(radioClass.value, "__icon"), "".concat(radioClass.value, "__icon--").concat(finalPlacement.value), _defineProperty(_defineProperty({}, "".concat(radioClass.value, "__icon--checked"), radioChecked.value), "".concat(radioClass.value, "__icon--disabled"), isDisabled.value)];
    });
    var radioContentChange = function radioContentChange(e) {
      e.stopPropagation();
      if (props2.contentDisabled) {
        return;
      }
      radioOrgChange(e);
    };
    var radioOrgChange = function radioOrgChange(e) {
      if (isDisabled.value || props2.readonly) {
        return;
      }
      if (rootGroupChange) {
        var value = finalAllowUncheck.value && radioChecked.value ? void 0 : props2.value;
        rootGroupChange(value, {
          e: e,
          name: props2.name
        });
      } else {
        var _value = finalAllowUncheck.value ? !radioChecked.value : true;
        setInnerChecked(_value, {
          e: e
        });
      }
    };
    var readerIcon = function readerIcon() {
      if (radioChecked.value) {
        if (props2.icon === "circle") {
          return createVNode(CheckCircleFilledIcon, {
            "class": "".concat(radioClass.value, "__icon-wrap")
          }, null);
        }
        if (props2.icon === "line") {
          return createVNode(CheckIcon, {
            "class": "".concat(radioClass.value, "__icon-wrap")
          }, null);
        }
        if (props2.icon === "dot") {
          return createVNode("div", {
            "class": ["".concat(radioClass.value, "__icon-").concat(props2.icon), _defineProperty({}, "".concat(radioClass.value, "__icon-").concat(props2.icon, "--disabled"), isDisabled.value)]
          }, null);
        }
      } else {
        if (props2.icon === "circle" || props2.icon === "dot") {
          return createVNode("div", {
            "class": ["".concat(radioClass.value, "__icon-circle"), _defineProperty({}, "".concat(radioClass.value, "__icon-circle--disabled"), isDisabled.value)]
          }, null);
        }
        if (props2.icon === "line") {
          return createVNode("div", {
            "class": "placeholder"
          }, null);
        }
      }
    };
    return function () {
      var label = renderTNodeContent("default", "label");
      var content = renderTNodeJSX("content");
      return createVNode("div", {
        "class": radioClasses.value,
        "onClick": radioOrgChange
      }, [createVNode("input", mergeProps({
        "type": "radio",
        "class": "".concat(radioClass.value, "__original")
      }, inputProps.value), null), createVNode("div", {
        "class": iconClass.value
      }, [readerIcon(), iconContent.value]), createVNode("div", {
        "class": "".concat(radioClass.value, "__content"),
        "onClick": radioContentChange
      }, [label && createVNode("span", {
        "class": titleClasses.value,
        "style": "-webkit-line-clamp: ".concat(props2.maxLabelRow)
      }, [label]), content && createVNode("div", {
        "class": ["".concat(radioClass.value, "__description"), _defineProperty({}, "".concat(radioClass.value, "__description"), isDisabled.value)],
        "style": "-webkit-line-clamp: ".concat(props2.maxContentRow)
      }, [content])]), !finalBorderless.value && createVNode("div", {
        "class": "".concat(radioClass.value, "__border ").concat(radioClass.value, "__border--").concat(finalPlacement.value)
      }, null)]);
    };
  }
});

export { _Radio as default };
//# sourceMappingURL=radio.mjs.map
