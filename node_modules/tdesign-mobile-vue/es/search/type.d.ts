import { TNode } from '../common';
export interface TdSearchProps {
    action?: string | TNode;
    autocompleteOptions?: Array<AutocompleteOption>;
    center?: boolean;
    clearable?: boolean;
    disabled?: boolean;
    focus?: boolean;
    leftIcon?: string | TNode;
    placeholder?: string;
    readonly?: boolean;
    shape?: 'square' | 'round';
    value?: string;
    defaultValue?: string;
    modelValue?: string;
    onActionClick?: (context: {
        e: MouseEvent;
    }) => void;
    onBlur?: (context: {
        value: string;
        e: FocusEvent;
    }) => void;
    onChange?: (value: string, context: {
        e?: InputEvent | MouseEvent;
    }) => void;
    onClear?: (context: {
        e: MouseEvent;
    }) => void;
    onFocus?: (context: {
        value: string;
        e: FocusEvent;
    }) => void;
    onSearch?: (context?: {
        value: string;
        trigger: 'submit' | 'option-click' | 'clear';
        e?: InputEvent | MouseEvent;
    }) => void;
    onSubmit?: (context: {
        value: string;
        e: KeyboardEvent;
    }) => void;
}
export declare type AutocompleteOption = string | {
    label: string | TNode;
    group?: boolean;
};
