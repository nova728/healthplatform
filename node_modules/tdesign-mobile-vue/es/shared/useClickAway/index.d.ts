import { MaybeElementRef } from '@vueuse/core';
export interface UseClickAwayOptions {
    eventName?: string;
    capture?: boolean;
    ignore?: Array<MaybeElementRef>;
    detectIframe?: boolean;
}
export declare type UseClickAwayHandler<T extends {
    detectIframe: UseClickAwayOptions['detectIframe'];
} = {
    detectIframe: false;
}> = (evt: T['detectIframe'] extends true ? PointerEvent | FocusEvent : PointerEvent) => void;
export declare function useClickAway<T extends UseClickAwayOptions>(target: MaybeElementRef | Array<MaybeElementRef>, fn: UseClickAwayHandler<{
    detectIframe: T['detectIframe'];
}>, options?: T): () => void;
