import { TdStepperProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    disableInput: BooleanConstructor;
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    inputWidth: {
        type: NumberConstructor;
    };
    integer: {
        type: BooleanConstructor;
        default: boolean;
    };
    max: {
        type: NumberConstructor;
        default: number;
    };
    min: {
        type: NumberConstructor;
        default: number;
    };
    size: {
        type: PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: TdStepperProps['size']): boolean;
    };
    step: {
        type: NumberConstructor;
        default: number;
    };
    theme: {
        type: PropType<"normal" | "filled" | "outline">;
        default: "normal" | "filled" | "outline";
        validator(val: TdStepperProps['theme']): boolean;
    };
    value: {
        type: PropType<string | number>;
        default: any;
    };
    modelValue: {
        type: PropType<string | number>;
        default: any;
    };
    defaultValue: {
        type: PropType<string | number>;
        default: number;
    };
    onBlur: PropType<(value: string | number) => void>;
    onChange: PropType<(value: string | number) => void>;
    onFocus: PropType<(value: string | number) => void>;
    onOverlimit: PropType<(type: "minus" | "plus") => void>;
};
export default _default;
