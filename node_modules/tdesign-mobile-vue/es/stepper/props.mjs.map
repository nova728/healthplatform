{"version":3,"file":"props.mjs","sources":["../../src/stepper/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdStepperProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 禁用输入框 */\n  disableInput: Boolean,\n  /** 禁用全部操作 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 输入框宽度 */\n  inputWidth: {\n    type: Number,\n  },\n  /** 是否整型 */\n  integer: {\n    type: Boolean,\n    default: true,\n  },\n  /** 最大值 */\n  max: {\n    type: Number,\n    default: 100,\n  },\n  /** 最小值 */\n  min: {\n    type: Number,\n    default: 0,\n  },\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdStepperProps['size']>,\n    default: 'medium' as TdStepperProps['size'],\n    validator(val: TdStepperProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 步长 */\n  step: {\n    type: Number,\n    default: 1,\n  },\n  /** 组件风格 */\n  theme: {\n    type: String as PropType<TdStepperProps['theme']>,\n    default: 'normal' as TdStepperProps['theme'],\n    validator(val: TdStepperProps['theme']): boolean {\n      if (!val) return true;\n      return ['normal', 'filled', 'outline'].includes(val);\n    },\n  },\n  /** 值 */\n  value: {\n    type: [String, Number] as PropType<TdStepperProps['value']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdStepperProps['value']>,\n    default: undefined,\n  },\n  /** 值，非受控属性 */\n  defaultValue: {\n    type: [String, Number] as PropType<TdStepperProps['defaultValue']>,\n    default: 0,\n  },\n  /** 输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdStepperProps['onBlur']>,\n  /** 数值发生变更时触发 */\n  onChange: Function as PropType<TdStepperProps['onChange']>,\n  /** 输入框聚焦时触发 */\n  onFocus: Function as PropType<TdStepperProps['onFocus']>,\n  /** 数值超出限制时触发 */\n  onOverlimit: Function as PropType<TdStepperProps['onOverlimit']>,\n};\n"],"names":["disableInput","Boolean","disabled","type","default","inputWidth","Number","integer","max","min","size","String","validator","val","includes","step","theme","value","modelValue","defaultValue","onBlur","Function","onChange","onFocus","onOverlimit"],"mappings":";;;;;;AASA,YAAe;AAEbA,EAAAA,YAAc,EAAAC,OAAA;AAEdC,EAAAA,QAAU,EAAA;AACRC,IAAAA,IAAM,EAAAF,OAAA;AACNG,IAAAA,OAAS,EAAA,KAAA,CAAA;GACX;AAEAC,EAAAA,UAAY,EAAA;AACVF,IAAAA,IAAM,EAAAG,MAAAA;GACR;AAEAC,EAAAA,OAAS,EAAA;AACPJ,IAAAA,IAAM,EAAAF,OAAA;AACNG,IAAAA,OAAS,EAAA,IAAA;GACX;AAEAI,EAAAA,GAAK,EAAA;AACHL,IAAAA,IAAM,EAAAG,MAAA;AACNF,IAAAA,OAAS,EAAA,GAAA;GACX;AAEAK,EAAAA,GAAK,EAAA;AACHN,IAAAA,IAAM,EAAAG,MAAA;AACNF,IAAAA,OAAS,EAAA,CAAA;GACX;AAEAM,EAAAA,IAAM,EAAA;AACJP,IAAAA,IAAM,EAAAQ,MAAA;AACNP,IAAAA,OAAS,EAAA,QAAA;AACTQ,IAAAA,WAAAA,SAAAA,UAAUC,GAAsC,EAAA;AAC9C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,OAAS,EAAA,QAAA,EAAU,OAAO,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAClD,KAAA;GACF;AAEAE,EAAAA,IAAM,EAAA;AACJZ,IAAAA,IAAM,EAAAG,MAAA;AACNF,IAAAA,OAAS,EAAA,CAAA;GACX;AAEAY,EAAAA,KAAO,EAAA;AACLb,IAAAA,IAAM,EAAAQ,MAAA;AACNP,IAAAA,OAAS,EAAA,QAAA;AACTQ,IAAAA,WAAAA,SAAAA,UAAUC,GAAuC,EAAA;AAC/C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,QAAU,EAAA,QAAA,EAAU,SAAS,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACrD,KAAA;GACF;AAEAI,EAAAA,KAAO,EAAA;AACLd,IAAAA,IAAA,EAAM,CAACQ,MAAA,EAAQL,MAAM,CAAA;AACrBF,IAAAA,OAAS,EAAA,KAAA,CAAA;GACX;AACAc,EAAAA,UAAY,EAAA;AACVf,IAAAA,IAAA,EAAM,CAACQ,MAAA,EAAQL,MAAM,CAAA;AACrBF,IAAAA,OAAS,EAAA,KAAA,CAAA;GACX;AAEAe,EAAAA,YAAc,EAAA;AACZhB,IAAAA,IAAA,EAAM,CAACQ,MAAA,EAAQL,MAAM,CAAA;AACrBF,IAAAA,OAAS,EAAA,CAAA;GACX;AAEAgB,EAAAA,MAAQ,EAAAC,QAAA;AAERC,EAAAA,QAAU,EAAAD,QAAA;AAEVE,EAAAA,OAAS,EAAAF,QAAA;AAETG,EAAAA,WAAa,EAAAH,QAAAA;AACf,CAAA;;;;"}