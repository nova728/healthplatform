{"version":3,"file":"swiper.mjs","sources":["../../src/swiper/swiper.tsx"],"sourcesContent":["import { onMounted, computed, ref, provide, watch, onUnmounted, toRefs, defineComponent } from 'vue';\nimport isObject from 'lodash/isObject';\nimport isNumber from 'lodash/isNumber';\nimport { useSwipe } from '../swipe-cell/useSwipe';\nimport config from '../config';\nimport props from './props';\nimport { SwiperChangeSource, SwiperNavigation } from './type';\nimport { useVModel } from '../shared';\nimport { preventDefault } from '../shared/dom';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-swiper`,\n  props,\n  emits: ['change', 'update:current', 'update:modelValue', 'transitionenter', 'transitionleave'],\n  setup(props, context) {\n    const swiperClass = usePrefixClass('swiper');\n    const swiperNavClass = usePrefixClass('swiper-nav');\n\n    const readerTNodeJSX = useTNodeJSX();\n    const setOffset = (offset: number, direction = 'X'): void => {\n      translateContainer.value = `translate${direction}(${offset}px)`;\n    };\n\n    const root = ref();\n    const items = ref<any>([]);\n    const { current: value, modelValue } = toRefs(props);\n    const [currentIndex, setCurrent] = useVModel(value, modelValue, props.defaultCurrent);\n    const swiperContainer = ref<HTMLElement | null>(null);\n\n    const animating = ref(false);\n    const disabled = ref(false);\n    const isSwiperDisabled = computed(() => props.disabled === true);\n    const translateContainer = ref('');\n\n    const isVertical = computed(() => props.direction === 'vertical');\n    const containerHeight = ref('auto');\n\n    const navigation = computed((): SwiperNavigation => props.navigation);\n\n    const isBottomPagination = computed(() => {\n      let isShowSwiperNav = false;\n      if (typeof props.navigation === 'object') {\n        isShowSwiperNav =\n          (!navigation.value?.paginationPosition || navigation.value?.paginationPosition === 'bottom') &&\n          (navigation.value?.type === 'dots' || navigation.value?.type === 'dots-bar') &&\n          enableNavigation?.value;\n      }\n      return isShowSwiperNav;\n    });\n\n    const rootClass = computed(() => {\n      return [\n        `${swiperClass.value}`,\n        `${swiperClass.value}--${props.type}`,\n        `${\n          isBottomPagination.value && navigation.value?.placement\n            ? `${swiperClass.value}--${navigation.value?.placement}`\n            : ''\n        }`,\n      ];\n    });\n\n    const enableNavigation = computed(() => {\n      if (typeof props.navigation === 'object') {\n        return navigation.value?.minShowNum ? items.value.length >= navigation.value?.minShowNum : true;\n      }\n      return false;\n    });\n\n    let autoplayTimer: any = null;\n\n    const onItemClick = () => {\n      props.onClick?.(currentIndex.value ?? 0);\n    };\n\n    const move = (step: number, source: SwiperChangeSource, isReset = false) => {\n      animating.value = true;\n      processIndex(isReset ? step : (currentIndex.value as number) + step, source);\n\n      const moveDirection = !isVertical.value ? 'X' : 'Y';\n      const distance = root.value?.[isVertical.value ? 'offsetHeight' : 'offsetWidth'] ?? 0;\n\n      translateContainer.value = `translate${moveDirection}(${isReset ? 0 : -1 * distance * step}px)`;\n    };\n\n    const handleAnimationEnd = () => {\n      disabled.value = false;\n      animating.value = false;\n      translateContainer.value = 'translateX(0)';\n\n      updateItemPosition();\n    };\n\n    const stopAutoplay = () => {\n      if (!autoplayTimer) return;\n      clearInterval(autoplayTimer as number);\n      autoplayTimer = null;\n    };\n\n    const startAutoplay = () => {\n      if (!props?.autoplay || autoplayTimer !== null) return false; // stop repeat autoplay\n      autoplayTimer = setInterval(() => {\n        goNext('autoplay');\n      }, props?.interval);\n    };\n\n    const goPrev = (source: SwiperChangeSource) => {\n      disabled.value = true;\n      move(-1, source);\n    };\n    const goNext = (source: SwiperChangeSource) => {\n      disabled.value = true;\n      move(1, source);\n    };\n\n    const processIndex = (index: number, source: SwiperChangeSource) => {\n      const max = items.value.length;\n      let val = index;\n\n      if (index < 0) {\n        val = props.loop ? max - 1 : 0;\n      }\n      if (index >= max) {\n        val = props.loop ? 0 : max - 1;\n      }\n      setCurrent(val);\n      context.emit('update:current', val);\n      context.emit('change', val, { source });\n    };\n\n    const { lengthX, lengthY } = useSwipe(swiperContainer, {\n      onSwipeStart() {\n        if (disabled.value || isSwiperDisabled.value || !items.value.length) return;\n        stopAutoplay();\n      },\n      onSwipe(e: TouchEvent) {\n        if (disabled.value || isSwiperDisabled.value || !items.value.length) return;\n        onTouchMove(e);\n      },\n      onSwipeEnd() {\n        if (disabled.value || isSwiperDisabled.value || !items.value.length) return;\n        onTouchEnd();\n      },\n    });\n\n    const onTouchMove = (event: TouchEvent) => {\n      preventDefault(event, false);\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n\n      animating.value = false;\n\n      if (!isVertical.value) {\n        setOffset(-distanceX);\n      } else {\n        setOffset(-distanceY, 'Y');\n      }\n    };\n\n    const onTouchEnd = () => {\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n\n      if ((!isVertical.value && distanceX < -100) || (isVertical.value && distanceY < -100)) {\n        move(-1, 'touch');\n      } else if ((!isVertical.value && distanceX > 100) || (isVertical.value && distanceY > 100)) {\n        move(1, 'touch');\n      } else {\n        move(currentIndex.value as number, 'touch', true);\n      }\n      startAutoplay();\n    };\n\n    const onTransitionstart = (event: TransitionEvent) => {\n      context.emit('transitionenter', event);\n    };\n\n    const onTransitionend = (event: TransitionEvent) => {\n      context.emit('transitionleave', event);\n    };\n\n    const addChild = (item: any) => {\n      items.value.push(item);\n    };\n\n    const removeChild = (uid: number) => {\n      const index = items.value.findIndex((item: any) => item.uid === uid);\n      items.value.splice(index, 1);\n\n      if (currentIndex.value + 1 > items.value.length) {\n        goNext('autoplay');\n      }\n    };\n\n    const updateItemPosition = () => {\n      items.value.forEach((item: any, index: number) => {\n        item.calcTranslateStyle(index, currentIndex.value);\n      });\n    };\n\n    const setContainerHeight = (height: number | string) =>\n      (containerHeight.value = isNumber(height) ? `${height}px` : height);\n\n    const updateContainerHeight = () => {\n      const target = items.value[currentIndex.value ?? 0];\n      const rect = target?.proxy?.$el.getBoundingClientRect();\n\n      if (props.height) {\n        setContainerHeight(props.height);\n      } else if (rect) {\n        setContainerHeight(rect.height);\n      }\n    };\n\n    watch(currentIndex, updateContainerHeight);\n    watch(\n      () => props.current,\n      () => {\n        // v-model动态更新时不触发move逻辑\n        if (props.current === currentIndex.value) return;\n        stopAutoplay();\n        move(props.current - currentIndex.value, 'autoplay');\n        startAutoplay();\n      },\n    );\n\n    provide('parent', {\n      loop: props.loop,\n      root,\n      items,\n      isVertical,\n      addChild,\n      removeChild,\n      setContainerHeight,\n    });\n\n    onMounted(() => {\n      startAutoplay();\n      updateItemPosition();\n      updateContainerHeight();\n    });\n\n    onUnmounted(() => {\n      stopAutoplay();\n    });\n    return () => {\n      const swiperNav = () => {\n        if (navigation.value && enableNavigation.value) {\n          const controlsNav = () => {\n            if (!isVertical.value && !!navigation.value?.showControls) {\n              return (\n                <span class={`${swiperNavClass.value}__btn`}>\n                  <span class={`${swiperNavClass.value}__btn--prev`} onClick={() => goPrev('nav')} />\n                  <span class={`${swiperNavClass.value}__btn--next`} onClick={() => goNext('nav')} />\n                </span>\n              );\n            }\n          };\n          const typeNav = () => {\n            if ('type' in navigation.value) {\n              // dots\n              const dots = () => {\n                if (['dots', 'dots-bar'].includes(navigation.value?.type || '')) {\n                  return (\n                    <>\n                      {items.value.map((_: any, index: number) => (\n                        <span\n                          key={`page${index}`}\n                          class={[\n                            `${swiperNavClass.value}__${navigation.value?.type}-item`,\n                            index === currentIndex.value\n                              ? `${swiperNavClass.value}__${navigation.value?.type}-item--active`\n                              : '',\n                            `${swiperNavClass.value}__${navigation.value?.type}-item--${props.direction}`,\n                          ]}\n                        />\n                      ))}\n                    </>\n                  );\n                }\n              };\n              // fraction\n              const fraction = () => {\n                if (navigation.value?.type === 'fraction') {\n                  return <span>{`${(currentIndex.value ?? 0) + 1}/${items.value.length}`}</span>;\n                }\n              };\n              return (\n                <span\n                  class={[\n                    `${swiperNavClass.value}--${props.direction}`,\n                    `${swiperNavClass.value}__${navigation.value?.type || ''}`,\n                    `${swiperNavClass.value}--${navigation.value?.paginationPosition || 'bottom'}`,\n                    `${\n                      isBottomPagination.value && navigation.value?.placement\n                        ? `${swiperNavClass.value}--${navigation.value?.placement}`\n                        : ''\n                    }`,\n                  ]}\n                >\n                  {dots()}\n                  {fraction()}\n                </span>\n              );\n            }\n          };\n\n          return (\n            <>\n              {controlsNav()}\n              {typeNav()}\n            </>\n          );\n        }\n        return isObject(props.navigation) ? '' : readerTNodeJSX('navigation');\n      };\n      return (\n        <div ref={root} class={rootClass.value}>\n          <div\n            ref={swiperContainer}\n            class={`${swiperClass.value}__container`}\n            style={{\n              flexDirection: !isVertical.value ? 'row' : 'column',\n              transition: animating.value ? `transform ${props.duration}ms` : 'none',\n              transform: translateContainer.value,\n              height: containerHeight.value,\n            }}\n            onTransitionstart={onTransitionstart}\n            onTransitionend={(event: TransitionEvent) => {\n              if (event.target === event.currentTarget) {\n                onTransitionend(event);\n                handleAnimationEnd();\n              }\n            }}\n            onClick={onItemClick}\n          >\n            {readerTNodeJSX('default')}\n          </div>\n          {swiperNav()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["prefix","config","defineComponent","name","props","emits","setup","context","swiperClass","usePrefixClass","swiperNavClass","readerTNodeJSX","useTNodeJSX","setOffset","offset","direction","arguments","length","undefined","translateContainer","value","concat","root","ref","items","_toRefs","toRefs","current","modelValue","_useVModel","useVModel","defaultCurrent","_useVModel2","_slicedToArray","currentIndex","setCurrent","swiperContainer","animating","disabled","isSwiperDisabled","computed","isVertical","containerHeight","navigation","isBottomPagination","isShowSwiperNav","_typeof","_navigation$value","_navigation$value2","_navigation$value3","_navigation$value4","paginationPosition","type","enableNavigation","rootClass","_navigation$value5","_navigation$value6","placement","_navigation$value7","_navigation$value8","minShowNum","autoplayTimer","onItemClick","_props2$onClick","_currentIndex$value","onClick","move","step","source","_root$value","_root$value2","isReset","processIndex","moveDirection","distance","handleAnimationEnd","updateItemPosition","stopAutoplay","clearInterval","startAutoplay","autoplay","setInterval","goNext","interval","goPrev","index","max","val","loop","emit","_useSwipe","useSwipe","onSwipeStart","onSwipe","e","onTouchMove","onSwipeEnd","onTouchEnd","lengthX","lengthY","event","preventDefault","distanceX","distanceY","onTransitionstart","onTransitionend","addChild","item","push","removeChild","uid","findIndex","splice","forEach","calcTranslateStyle","setContainerHeight","height","isNumber","updateContainerHeight","_currentIndex$value2","_target$proxy","target","rect","proxy","$el","getBoundingClientRect","watch","provide","onMounted","onUnmounted","swiperNav","controlsNav","_navigation$value9","showControls","_createVNode","typeNav","_navigation$value15","_navigation$value16","_navigation$value17","_navigation$value18","dots","_navigation$value10","includes","_Fragment","map","_","_navigation$value11","_navigation$value12","_navigation$value13","fraction","_navigation$value14","_currentIndex$value3","isObject","flexDirection","transition","duration","transform","currentTarget"],"mappings":"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"}