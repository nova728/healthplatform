{"version":3,"file":"useStyle.mjs","sources":["../../../src/table/hooks/useStyle.ts"],"sourcesContent":["import { computed, toRefs } from 'vue';\nimport { TdBaseTableProps } from '../type';\nimport useClassName from './useClassName';\n\nexport function formatCSSUnit(unit: string | number | undefined) {\n  if (!unit) return unit;\n  return isNaN(Number(unit)) ? unit : `${unit}px`;\n}\n\nexport default function useStyle(props: TdBaseTableProps) {\n  const { bordered, stripe, verticalAlign, height, maxHeight, tableContentWidth } = toRefs(props);\n\n  const { tableBaseClass, tableAlignClasses } = useClassName();\n\n  const tableClasses = computed(() => [\n    tableBaseClass.table,\n    [tableAlignClasses[verticalAlign?.value || 'middle']],\n    {\n      [tableBaseClass.bordered]: bordered?.value,\n      [tableBaseClass.striped]: stripe?.value,\n      [tableBaseClass.loading]: props.loading,\n    },\n  ]);\n\n  const tableContentStyles = computed(() => ({\n    height: formatCSSUnit(height?.value),\n    maxHeight: formatCSSUnit(maxHeight?.value),\n  }));\n\n  const tableElementStyles = computed(() => ({\n    width: formatCSSUnit(tableContentWidth?.value),\n  }));\n\n  return {\n    tableClasses,\n    tableElementStyles,\n    tableContentStyles,\n  };\n}\n"],"names":["formatCSSUnit","unit","isNaN","Number","useStyle","props","_toRefs","toRefs","bordered","stripe","verticalAlign","height","maxHeight","tableContentWidth","_useClassName","useClassName","tableBaseClass","tableAlignClasses","tableClasses","computed","table","value","_defineProperty","striped","loading","tableContentStyles","tableElementStyles","width"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,SAASA,cAAcC,IAAmC,EAAA;AAC/D,EAAA,IAAI,CAACA,IAAA,EAAa,OAAAA,IAAA,CAAA;AAClB,EAAA,OAAOC,MAAMC,MAAO,CAAAF,IAAI,CAAC,CAAA,GAAIA,iBAAUA,IAAA,EAAA,IAAA,CAAA,CAAA;AACzC,CAAA;AAEA,SAAwBG,SAASC,KAAyB,EAAA;AAClD,EAAA,IAAAC,OAAA,GAA4EC,MAAA,CAAOF,KAAK,CAAA;IAAtFG,mBAAAA;IAAUC,MAAQ,GAAAH,OAAA,CAARG,MAAQ;IAAAC,aAAA,GAAAJ,OAAA,CAAAI,aAAA;IAAeC,iBAAAA;IAAQC,SAAW,GAAAN,OAAA,CAAXM,SAAW;IAAAC,iBAAA,GAAAP,OAAA,CAAAO,iBAAA,CAAA;AAE5D,EAAA,IAAAC,aAAA,GAA8CC,YAAa,EAAA;IAAnDC,cAAA,GAAAF,aAAA,CAAAE,cAAA;IAAgBC,iBAAkB,GAAAH,aAAA,CAAlBG,iBAAkB,CAAA;EAEpC,IAAAC,YAAA,GAAeC,SAAS,YAAA;IAAA,OAAM,CAClCH,cAAe,CAAAI,KAAA,EACf,CAACH,iBAAA,CAAkB,CAAAP,aAAe,KAAA,IAAA,IAAfA,aAAe,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAfA,aAAe,CAAAW,KAAA,KAAS,QAAS,CAAA,CAAA,EAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAA,EAAA,EAEjDN,cAAe,CAAAR,QAAA,EAAWA,QAAU,KAAVA,IAAAA,IAAAA,QAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,QAAU,CAAAa,KAAA,CACpCL,EAAAA,cAAe,CAAAO,OAAA,EAAUd,MAAQ,KAARA,IAAAA,IAAAA,MAAQ,KAARA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAQ,CAAAY,KAAA,CACjCL,EAAAA,cAAe,CAAAQ,OAAA,EAAUnB,KAAM,CAAAmB,OAAA,CAEnC,CAAA,CAAA;GAAA,CAAA,CAAA;EAEK,IAAAC,kBAAA,GAAqBN,SAAS,YAAA;IAAA,OAAO;MACzCR,MAAA,EAAQX,aAAc,CAAAW,MAAA,KAAA,IAAA,IAAAA,MAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAA,CAAQU,KAAK,CAAA;MACnCT,SAAA,EAAWZ,aAAc,CAAAY,SAAA,aAAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAWS,KAAK,CAAA;KACzC,CAAA;AAAA,GAAA,CAAA,CAAA;EAEI,IAAAK,kBAAA,GAAqBP,SAAS,YAAA;IAAA,OAAO;MACzCQ,KAAA,EAAO3B,aAAc,CAAAa,iBAAA,aAAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,iBAAA,CAAmBQ,KAAK,CAAA;KAC7C,CAAA;AAAA,GAAA,CAAA,CAAA;EAEK,OAAA;AACLH,IAAAA,YAAA,EAAAA,YAAA;AACAQ,IAAAA,kBAAA,EAAAA,kBAAA;AACAD,IAAAA,kBAAA,EAAAA,kBAAAA;GACF,CAAA;AACF;;;;"}