import { TdTabsProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    animation: {
        type: PropType<import("./type").TabAnimation>;
    };
    bottomLineMode: {
        type: PropType<"fixed" | "auto" | "full">;
        default: "fixed" | "auto" | "full";
        validator(val: TdTabsProps['bottomLineMode']): boolean;
    };
    list: {
        type: PropType<import("./type").TdTabPanelProps[]>;
    };
    showBottomLine: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<"medium" | "large">;
        default: "medium" | "large";
        validator(val: TdTabsProps['size']): boolean;
    };
    spaceEvenly: {
        type: BooleanConstructor;
        default: boolean;
    };
    sticky: BooleanConstructor;
    stickyProps: {
        type: PropType<import("..").TdStickyProps>;
    };
    swipeable: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<"line" | "tag" | "card">;
        default: "line" | "tag" | "card";
        validator(val: TdTabsProps['theme']): boolean;
    };
    value: {
        type: PropType<import("./type").TabValue>;
        default: any;
    };
    modelValue: {
        type: PropType<import("./type").TabValue>;
        default: any;
    };
    defaultValue: {
        type: PropType<import("./type").TabValue>;
    };
    onChange: PropType<(value: import("./type").TabValue, label: string) => void>;
    onClick: PropType<(value: import("./type").TabValue, label: string) => void>;
    onScroll: PropType<(scrollTop: number, isFixed: boolean) => void>;
};
export default _default;
