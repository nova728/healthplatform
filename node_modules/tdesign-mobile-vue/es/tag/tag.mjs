/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-dc33ef46.mjs';
import { defineComponent, computed, createVNode, resolveComponent } from 'vue';
import { CloseIcon } from 'tdesign-icons-vue-next';
import { useTNodeJSX, useContent } from '../hooks/tnode.mjs';
import config from '../config.mjs';
import TagProps from './props.mjs';
import { usePrefixClass } from '../hooks/useClass.mjs';
import '../_chunks/dep-b617aa7d.mjs';
import '../_chunks/dep-14bda5a6.mjs';
import '../_chunks/dep-57a75b98.mjs';
import '../_chunks/dep-c6268b4a.mjs';
import '../_chunks/dep-c06e51c6.mjs';
import '../_chunks/dep-ca4b618a.mjs';
import '../_chunks/dep-c0c7e354.mjs';
import '../_chunks/dep-12b97090.mjs';
import '../_chunks/dep-ff449344.mjs';
import '../_chunks/dep-a9ebd588.mjs';
import '../_chunks/dep-9f686842.mjs';
import '../_chunks/dep-06d482c6.mjs';
import '../_chunks/dep-feb307dc.mjs';
import '../_chunks/dep-f70b3591.mjs';
import '../_chunks/dep-82b3737e.mjs';
import '../hooks/render-tnode.mjs';
import '../_chunks/dep-35186489.mjs';
import '../_chunks/dep-afd6e78d.mjs';
import '../_chunks/dep-44fb3d82.mjs';
import '../_chunks/dep-ce88baea.mjs';
import '../_chunks/dep-4d5ede6c.mjs';
import '../_chunks/dep-32f76754.mjs';
import '../_chunks/dep-4f0b3d47.mjs';
import '../_chunks/dep-ab2bdb8f.mjs';
import '../_chunks/dep-ceb2af97.mjs';
import '../_chunks/dep-8b0eae2f.mjs';
import '../_chunks/dep-dffd3346.mjs';
import '../_chunks/dep-4a0b07f2.mjs';
import '../_chunks/dep-9f2b5648.mjs';
import '../_chunks/dep-dff870f8.mjs';
import '../_chunks/dep-8eaf2b7e.mjs';
import '../_chunks/dep-5fe3ebe0.mjs';
import '../_chunks/dep-0c24a69a.mjs';
import '../_chunks/dep-0d47707f.mjs';
import '../_chunks/dep-0bb5e0ba.mjs';
import '../_chunks/dep-4a37904d.mjs';
import '../_common/js/global-config/mobile/default-config.mjs';
import '../_common/js/global-config/mobile/locale/zh_CN.mjs';
import '../_chunks/dep-fbaa4502.mjs';
import '../_chunks/dep-c48250ca.mjs';
import '../_chunks/dep-8398b33d.mjs';
import '../config-provider/type.mjs';

var prefix = config.prefix;
var _Tag = defineComponent({
  name: "".concat(prefix, "-tag"),
  components: {
    CloseIcon: CloseIcon
  },
  props: TagProps,
  emits: ["close", "click"],
  setup: function setup(props) {
    var tagClass = usePrefixClass("tag");
    var renderTNodeJSX = useTNodeJSX();
    var renderContent = useContent();
    var tagStyle = computed(function () {
      return props.maxWidth ? {
        maxWidth: typeof props.maxWidth === "number" ? "".concat(props.maxWidth, "px") : props.maxWidth
      } : {};
    });
    var tagClasses = computed(function () {
      return ["".concat(tagClass.value), "".concat(tagClass.value, "--").concat(props.theme), "".concat(tagClass.value, "--").concat(props.shape), "".concat(tagClass.value, "--").concat(props.variant), "".concat(tagClass.value, "--").concat(props.size), _defineProperty(_defineProperty({}, "".concat(tagClass.value, "--closable"), props.closable), "".concat(tagClass.value, "--disabled"), props.disabled)];
    });
    var handleClose = function handleClose(e) {
      e.stopPropagation();
      if (!props.disabled) {
        var _props$onClose;
        (_props$onClose = props.onClose) === null || _props$onClose === void 0 || _props$onClose.call(props, {
          e: e
        });
      }
    };
    var handleClick = function handleClick(e) {
      if (!props.disabled) {
        var _props$onClick;
        (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {
          e: e
        });
      }
    };
    return function () {
      var tagContent = renderContent("default", "content");
      var icon = renderTNodeJSX("icon");
      return createVNode("span", {
        "class": tagClasses.value,
        "style": tagStyle.value,
        "aria-disabled": props.disabled,
        "role": "button",
        "onClick": handleClick
      }, [icon && createVNode("span", {
        "class": "".concat(tagClass.value, "__icon")
      }, [icon]), createVNode("span", {
        "class": "".concat(tagClass.value, "__text")
      }, [tagContent]), props.closable && createVNode("span", {
        "class": "".concat(tagClass.value, "__icon-close"),
        "onClick": handleClose
      }, [createVNode(resolveComponent("close-icon"), null, null)])]);
    };
  }
});

export { _Tag as default };
//# sourceMappingURL=tag.mjs.map
