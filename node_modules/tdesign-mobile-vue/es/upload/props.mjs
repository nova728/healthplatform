/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

var UploadProps = {
  accept: {
    type: String,
    default: ""
  },
  action: {
    type: String,
    default: ""
  },
  addContent: {
    type: [String, Function]
  },
  allowUploadDuplicateFile: Boolean,
  autoUpload: {
    type: Boolean,
    default: true
  },
  beforeAllFilesUpload: {
    type: Function
  },
  beforeUpload: {
    type: Function
  },
  data: {
    type: Object
  },
  disabled: Boolean,
  fileListDisplay: {
    type: Function
  },
  files: {
    type: Array,
    default: void 0
  },
  defaultFiles: {
    type: Array,
    default: function _default() {
      return [];
    }
  },
  format: {
    type: Function
  },
  formatRequest: {
    type: Function
  },
  formatResponse: {
    type: Function
  },
  headers: {
    type: Object
  },
  imageProps: {
    type: Object
  },
  isBatchUpload: Boolean,
  max: {
    type: Number,
    default: 0
  },
  method: {
    type: String,
    default: "POST",
    validator: function validator(val) {
      if (!val) return true;
      return ["POST", "GET", "PUT", "OPTIONS", "PATCH", "post", "get", "put", "options", "patch"].includes(val);
    }
  },
  mockProgressDuration: {
    type: Number
  },
  multiple: Boolean,
  name: {
    type: String,
    default: "file"
  },
  requestMethod: {
    type: Function
  },
  sizeLimit: {
    type: [Number, Object]
  },
  useMockProgress: {
    type: Boolean,
    default: true
  },
  uploadAllFilesInOneRequest: Boolean,
  value: {
    type: Array,
    default: void 0
  },
  modelValue: {
    type: Array,
    default: void 0
  },
  defaultValue: {
    type: Array,
    default: function _default() {
      return [];
    }
  },
  withCredentials: Boolean,
  onCancelUpload: Function,
  onChange: Function,
  onFail: Function,
  onOneFileFail: Function,
  onOneFileSuccess: Function,
  onPreview: Function,
  onProgress: Function,
  onRemove: Function,
  onSelectChange: Function,
  onSuccess: Function,
  onValidate: Function,
  onWaitingUploadFilesChange: Function,
  onClickUpload: Function
};

export { UploadProps as default };
//# sourceMappingURL=props.mjs.map
