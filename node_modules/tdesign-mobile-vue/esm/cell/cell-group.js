/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode } from 'vue';
import props from './cell-group-props.js';
import config from '../config.js';
import { usePrefixClass } from '../hooks/useClass.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import '../config-provider/useConfig.js';
import 'lodash/isFunction';
import 'lodash/cloneDeep';
import 'lodash/isString';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-b9ce5211.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-ff878671.js';
import 'dayjs';
import '../_chunks/dep-021696fd.js';
import '../config-provider/type.js';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';

var prefix = config.prefix;
var _CellGroup = defineComponent({
  name: "".concat(prefix, "-cell-group"),
  props: props,
  setup: function setup(props2) {
    var renderTNodeJSX = useTNodeJSX();
    var cellGroupClass = usePrefixClass("cell-group");
    var contentClasses = computed(function () {
      return [cellGroupClass.value, "".concat(cellGroupClass.value, "--").concat(props2.theme), _defineProperty({}, "".concat(cellGroupClass.value, "--bordered"), props2.bordered)];
    });
    return function () {
      var title = renderTNodeJSX("title");
      return createVNode("div", null, [title ? createVNode("div", {
        "class": "".concat(cellGroupClass.value, "__title")
      }, [title]) : null, createVNode("div", {
        "class": contentClasses.value
      }, [renderTNodeJSX("default")])]);
    };
  }
});

export { _CellGroup as default };
//# sourceMappingURL=cell-group.js.map
