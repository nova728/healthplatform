/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { defineComponent, createVNode, Fragment } from 'vue';
import config from '../config.js';
import { provideConfig } from './useConfig.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import 'lodash/isFunction';
import 'lodash/cloneDeep';
import 'lodash/isString';
import './context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-b9ce5211.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-ff878671.js';
import 'dayjs';
import '../_chunks/dep-021696fd.js';
import './type.js';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';

var prefix = config.prefix;
var name = "".concat(prefix, "-config-provider");
var configProviderProps = {
  globalConfig: Object
};
var _ConfigProvider = defineComponent({
  name: name,
  props: configProviderProps,
  setup: function setup(props) {
    provideConfig(props);
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      return createVNode(Fragment, null, [renderTNodeJSX("default")]);
    };
  }
});

export { configProviderProps, _ConfigProvider as default };
//# sourceMappingURL=config-provider.js.map
