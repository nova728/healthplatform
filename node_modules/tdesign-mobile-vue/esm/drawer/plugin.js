/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { ref, createApp, h, nextTick } from 'vue';
import _Drawer from './drawer.js';
import '../shared/index.js';
import { isBrowser } from '../shared/util.js';
import '../popup/index.js';
import '../popup/popup.js';
import '@babel/runtime/helpers/slicedToArray';
import 'tdesign-icons-vue-next';
import '../popup/props.js';
import '../overlay/index.js';
import '../overlay/overlay.js';
import '../shared/dom.js';
import 'lodash/isFunction';
import 'lodash/isString';
import '../config.js';
import '../overlay/props.js';
import '../hooks/useClass.js';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-b9ce5211.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-ff878671.js';
import 'dayjs';
import '../_chunks/dep-021696fd.js';
import '../config-provider/type.js';
import '../hooks/tnode.js';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';
import '../overlay/style';
import '../shared/component.js';
import '../shared/functions.js';
import 'lodash/isNumber';
import '../shared/constants.js';
import '../shared/render.js';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';
import '../shared/hover.js';
import '../hooks/useLockScroll.js';
import '../_util/useTouch.js';
import '../_util/getScrollParent.js';
import '../_util/supportsPassive.js';
import '../popup/style';
import '../popup/type.js';
import './props.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Drawer = function Drawer(options) {
  if (!isBrowser) return;
  var root = document.createElement("div");
  document.body.appendChild(root);
  var visible = ref(false);
  var props = ref({});
  var destroyOnClose = ref(false);
  createApp(function () {
    return h(_Drawer, _objectSpread(_objectSpread({}, options), {}, {
      visible: visible.value,
      destroyOnClose: destroyOnClose.value
    }, props.value));
  }).mount(root);
  var handler = {
    destroy: function destroy() {
      destroyOnClose.value = true;
      nextTick(function () {
        visible.value = false;
        document.body.removeChild(root);
      });
    },
    hide: function hide() {
      visible.value = false;
    },
    show: function show() {
      visible.value = true;
    },
    update: function update(options2) {
      props.value = options2;
    }
  };
  return handler;
};
Drawer.install = function (app) {
  app.config.globalProperties.$drawer = Drawer;
};
var DrawerPlugin = Drawer;

export { DrawerPlugin as default };
//# sourceMappingURL=plugin.js.map
