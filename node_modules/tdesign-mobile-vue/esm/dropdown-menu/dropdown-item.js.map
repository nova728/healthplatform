{"version":3,"file":"dropdown-item.js","sources":["../../src/dropdown-menu/dropdown-item.tsx"],"sourcesContent":["import { ref, watch, toRefs, inject, computed, reactive, onBeforeMount, defineComponent, nextTick } from 'vue';\nimport TRadio, { RadioGroup as TRadioGroup } from '../radio';\nimport config from '../config';\nimport TButton from '../button';\nimport TPopup from '../popup';\nimport TCheckbox, { CheckboxGroup as TCheckboxGroup } from '../checkbox';\nimport { useVModel, uniqueFactory, getWindowSize } from '../shared';\nimport DropdownItemProps from './dropdown-item-props';\nimport { DropdownMenuState, DropdownMenuControl } from './context';\nimport { TdDropdownMenuProps, DropdownValue } from './type';\nimport { KeysType } from '../common';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass, useConfig } from '../hooks/useClass';\n\nconst { prefix } = config;\n\nconst getUniqueID = uniqueFactory('dropdown-popup');\n\nexport default defineComponent({\n  name: `${prefix}-dropdown-item`,\n  components: { TRadio, TButton, TPopup, TCheckbox, TRadioGroup, TCheckboxGroup },\n  props: DropdownItemProps,\n  emits: ['change', 'open', 'opened', 'close', 'closed', 'update:value', 'update:modelValue'],\n  setup(props) {\n    const dropdownItemClass = usePrefixClass('dropdown-item');\n\n    const { globalConfig } = useConfig('dropdownMenu');\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const popupContent = ref(null);\n\n    // 受控 value 属性\n    const { value, modelValue } = toRefs(props);\n    const [passInValue, setValue] = useVModel(value, modelValue, props.defaultValue);\n    // 从父组件取属性、状态和控制函数\n    const menuProps = inject('dropdownMenuProps') as TdDropdownMenuProps;\n    const menuState = inject('dropdownMenuState') as DropdownMenuState;\n    const { expandMenu, collapseMenu, emitEvents } = inject('dropdownMenuControl') as DropdownMenuControl;\n\n    // 组件样式\n    const classes = computed(() => [`${dropdownItemClass.value}`]);\n\n    const itemId = ref(0);\n    onBeforeMount(() => {\n      itemId.value = menuState.childCount;\n      menuState.childCount += 1;\n    });\n\n    const state = reactive({\n      showOverlay: computed(() => menuProps.showOverlay),\n      duration: computed(() => menuProps.duration),\n      isShowItems: false,\n      wrapperVisible: false,\n      expandStyle: {} as Object,\n      multiple: computed(() => props.multiple),\n      options: computed(() => {\n        if (props.keys) {\n          return props.options?.map((item) => ({\n            value: item[(props.keys as KeysType)?.value ?? 'value'],\n            label: item[(props.keys as KeysType)?.label ?? 'label'],\n            disabled: item.disabled,\n          }));\n        }\n        return props.options;\n      }),\n    });\n\n    const isCheckedRadio = (value: DropdownValue) => value === radioSelect.value;\n    const styleDropRadio = (value: DropdownValue) => [\n      `${dropdownItemClass.value}__radio-item`,\n      {\n        [`${prefix}-is-tick`]: !props.multiple,\n        [`${prefix}-is-checked`]: isCheckedRadio(value),\n      },\n    ];\n    const popupStyle = computed(() => {\n      return {\n        zIndex: menuProps.zIndex && menuProps.zIndex + 1,\n        position: 'absolute',\n        overflow: 'hidden',\n      };\n    });\n\n    const popupId = getUniqueID();\n    // 设置展开/收起状态\n    const setExpand = (val: boolean) => {\n      // 菜单定位\n      const { bottom, top } = menuState.barRect;\n      const winHeight = getWindowSize().height;\n\n      menuProps.direction === 'up'\n        ? (state.expandStyle = {\n            zIndex: menuProps.zIndex,\n            bottom: `${winHeight - top}px`,\n          })\n        : (state.expandStyle = {\n            zIndex: menuProps.zIndex,\n            top: `${bottom}px`,\n          });\n      const { duration } = menuProps;\n      props[`on${val ? 'Open' : 'Close'}`]?.();\n      // 动画状态控制\n      if (val) {\n        state.wrapperVisible = true;\n      }\n      nextTick(() => {\n        state.isShowItems = val;\n      });\n      if (!val) {\n        setTimeout(() => {\n          state.wrapperVisible = false;\n        }, Number(duration));\n      }\n      setTimeout(() => {\n        props[`on${val ? 'Opened' : 'Closed'}`]?.();\n      }, Number(duration));\n    };\n\n    // 根据父组件状态，判断当前是否展开\n    watch(\n      () => menuState.activeId === itemId.value,\n      (val: boolean) => setExpand(val),\n    );\n\n    const radioSelect = ref();\n    const checkSelect = ref();\n    // 根据传入值更新当前选中\n    const updateSelectValue = (val: DropdownValue | DropdownValue[] | null) => {\n      if (!props.multiple) {\n        const list = state.options;\n        const firstChild = list?.[0];\n        const newValue = val ?? firstChild?.value ?? null;\n        radioSelect.value = newValue as DropdownValue;\n      } else if (props.multiple) {\n        checkSelect.value = (val ?? []) as DropdownValue[];\n      }\n    };\n    // 初始值更新一次选中项\n    updateSelectValue(passInValue.value || null);\n    // 跟踪 modelValue 更新选项\n    watch(\n      () => passInValue.value,\n      (val) => {\n        if (!val) return;\n        updateSelectValue(val);\n      },\n    );\n    // 底部按键是否可用\n    const isBtnDisabled = computed(() => {\n      return Array.isArray(checkSelect.value) && checkSelect.value.length <= 0;\n    });\n    // 重置\n    const resetSelect = () => {\n      checkSelect.value = [];\n      let values = checkSelect.value;\n      values = JSON.parse(JSON.stringify(values));\n      props.onReset?.(values);\n    };\n    // 确认\n    const confirmSelect = () => {\n      let values = checkSelect.value;\n      values = JSON.parse(JSON.stringify(values));\n      props.onConfirm?.(values);\n      setValue(values);\n      collapseMenu();\n      emitEvents('menuClosed', 'confirm');\n    };\n    // 多选值监控\n    watch(checkSelect, (val) => {\n      if (!props.multiple) return;\n      if (!state.isShowItems) return;\n      if (val) {\n        const value = JSON.stringify(passInValue.value || []);\n        const values = JSON.stringify(val);\n        if (value === values) return;\n        props.onChange?.(JSON.parse(values));\n      }\n    });\n    // 单选值监控\n    watch(radioSelect, (val) => {\n      if (menuState.activeId !== null) {\n        const target = state.options?.find((item: any) => item.value === val);\n        menuState.itemsLabel[menuState.activeId] = target?.label;\n      }\n      if (props.multiple) return;\n      if (!state.isShowItems) return;\n      const value: any = passInValue.value || [];\n      if (value[0] === val) return;\n      props.onChange?.(val);\n      setValue(val);\n      collapseMenu();\n      emitEvents('menuClosed', 'content');\n    });\n\n    const onVisibleChange = (visible: boolean) => {\n      if (menuProps.closeOnClickOverlay && !visible) {\n        collapseMenu();\n        emitEvents('menuClosed', 'overlay');\n      }\n    };\n    const { showOverlay, duration, isShowItems, wrapperVisible, expandStyle, multiple, options } = toRefs(state);\n\n    return () => {\n      const handleRadioChange = (value: any) => {\n        radioSelect.value = value;\n      };\n      const handleCheckboxChange = (value: any) => {\n        checkSelect.value = value;\n      };\n      const defaultSlot = () => {\n        if (!multiple.value) {\n          // 单选列表\n          return (\n            <t-radio-group\n              value={radioSelect.value}\n              onChange={handleRadioChange}\n              placement=\"right\"\n              class={`${dropdownItemClass.value}__radio-group`}\n            >\n              {(options.value || []).map((option) => (\n                <t-radio\n                  key={option.value}\n                  value={option.value}\n                  label={option.label}\n                  disabled={option.disabled}\n                  class={styleDropRadio(option.value)}\n                  checked={isCheckedRadio(option.value)}\n                  icon=\"line\"\n                />\n              ))}\n            </t-radio-group>\n          );\n        }\n        // 多选列表\n        return (\n          <t-checkbox-group\n            value={checkSelect.value}\n            onChange={handleCheckboxChange}\n            class={`${dropdownItemClass.value}__checkbox-group`}\n            style={`grid-template-columns: repeat(${props.optionsColumns}, 1fr)`}\n          >\n            {(options.value || []).map((option) => (\n              <t-checkbox\n                key={option.value}\n                class={`${dropdownItemClass.value}__checkbox-item t-checkbox--tag`}\n                icon={false}\n                borderless\n                value={option.value}\n                label={option.label}\n                disabled={option.disabled}\n              />\n            ))}\n          </t-checkbox-group>\n        );\n      };\n\n      const footerSlot = () => {\n        if (multiple.value) {\n          return (\n            <div class={`${dropdownItemClass.value}__footer`}>\n              <t-button\n                theme=\"light\"\n                class={`${dropdownItemClass.value}__footer-btn ${dropdownItemClass.value}__reset-btn`}\n                disabled={isBtnDisabled.value}\n                onClick={resetSelect}\n              >\n                {globalConfig.value.reset}\n              </t-button>\n              <t-button\n                theme=\"primary\"\n                class={`${dropdownItemClass.value}__footer-btn ${dropdownItemClass.value}__confirm-btn`}\n                disabled={isBtnDisabled.value}\n                onClick={confirmSelect}\n              >\n                {globalConfig.value.confirm}\n              </t-button>\n            </div>\n          );\n        }\n      };\n\n      const content = renderContent('default', 'content');\n\n      const footer = renderTNodeJSX('footer');\n\n      return (\n        wrapperVisible.value && (\n          <div id={popupId} class={classes.value} style={{ ...expandStyle.value }}>\n            <t-popup\n              visible={isShowItems.value}\n              placement={menuProps.direction === 'up' ? 'bottom' : 'top'}\n              duration={duration.value}\n              showOverlay={showOverlay.value}\n              style={popupStyle.value}\n              overlayProps={{ style: 'position: absolute' }}\n              attach={`#${popupId}`}\n              onVisibleChange={onVisibleChange}\n            >\n              <div ref={popupContent} class={`${dropdownItemClass.value}__content`}>\n                <div class={`${dropdownItemClass.value}__body`}>{content || defaultSlot()}</div>\n                {footer || footerSlot()}\n              </div>\n            </t-popup>\n          </div>\n        )\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefix","config","getUniqueID","uniqueFactory","defineComponent","name","components","TRadio","TButton","TPopup","TCheckbox","TRadioGroup","TCheckboxGroup","props","DropdownItemProps","emits","setup","dropdownItemClass","usePrefixClass","_useConfig","useConfig","globalConfig","renderContent","useContent","renderTNodeJSX","useTNodeJSX","popupContent","ref","_toRefs","toRefs","value","modelValue","_useVModel","useVModel","defaultValue","_useVModel2","_slicedToArray","passInValue","setValue","menuProps","inject","menuState","_inject","expandMenu","collapseMenu","emitEvents","classes","computed","concat","itemId","onBeforeMount","childCount","state","reactive","showOverlay","duration","isShowItems","wrapperVisible","expandStyle","multiple","options","keys","_props$options","map","item","_props$keys$value","_props$keys","_props$keys$label","_props$keys2","label","disabled","isCheckedRadio","radioSelect","styleDropRadio","_defineProperty","popupStyle","zIndex","position","overflow","popupId","setExpand","val","_props","_menuState$barRect","barRect","bottom","top","winHeight","getWindowSize","height","direction","nextTick","setTimeout","Number","_props2","watch","activeId","checkSelect","updateSelectValue","_ref2","list","firstChild","newValue","isBtnDisabled","Array","isArray","length","resetSelect","_props$onReset","values","JSON","parse","stringify","onReset","confirmSelect","_props$onConfirm","onConfirm","_props$onChange","onChange","_props$onChange2","_state$options","target","find","itemsLabel","onVisibleChange","visible","closeOnClickOverlay","_toRefs2","handleRadioChange","handleCheckboxChange","defaultSlot","_slot2","_slot","_createVNode","_resolveComponent","option","default","_default","optionsColumns","footerSlot","reset","confirm","content","footer","_objectSpread","style"],"mappings":"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"}