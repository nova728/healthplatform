{"version":3,"file":"form.js","sources":["../../src/form/form.tsx"],"sourcesContent":["import { defineComponent, provide, reactive, ref, toRefs } from 'vue';\nimport isEmpty from 'lodash/isEmpty';\nimport isArray from 'lodash/isArray';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\nimport {\n  Data,\n  FormResetParams,\n  FormValidateMessage,\n  FormValidateParams,\n  FormValidateResult,\n  TdFormProps,\n  ValidateResultList,\n} from './type';\nimport props from './props';\nimport { FormInjectionKey, FormItemContext } from './const';\nimport { FormDisabledProvider } from './hooks';\nimport config from '../config';\nimport { renderContent } from '../shared';\nimport { preventDefault } from '../shared/dom';\nimport { FormItemValidateResult } from './form-item';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\n\nconst { prefix } = config;\n\ntype FormResetEvent = Event;\n// export type FormSubmitEvent = SubmitEvent; (for higher typescript version)\ntype FormSubmitEvent = Event;\ntype Result = FormValidateResult<TdFormProps['data']>;\n\nexport const requestSubmit = (target: HTMLFormElement) => {\n  if (!(target instanceof HTMLFormElement)) {\n    throw new Error('target must be HTMLFormElement');\n  }\n  const submitter = document.createElement('input');\n  submitter.type = 'submit';\n  submitter.hidden = true;\n  target.appendChild(submitter);\n  submitter.click();\n  target.removeChild(submitter);\n};\n\nexport default defineComponent({\n  name: `${prefix}-form`,\n  props,\n  setup(props, { expose }) {\n    const renderTNodeJSX = useTNodeJSX();\n    const {\n      disabled,\n      showErrorMessage,\n      labelWidth,\n      labelAlign,\n      contentAlign,\n      data,\n      colon,\n      requiredMark,\n      rules,\n      errorMessage,\n      resetType,\n    } = toRefs(props);\n\n    const formRef = ref<HTMLFormElement>();\n    const children = ref<FormItemContext[]>([]);\n\n    provide<FormDisabledProvider>('formDisabled', {\n      disabled,\n    });\n\n    provide(\n      FormInjectionKey,\n      reactive({\n        showErrorMessage,\n        labelWidth,\n        labelAlign,\n        contentAlign,\n        data,\n        colon,\n        requiredMark,\n        rules,\n        errorMessage,\n        resetType,\n        children,\n        renderContent,\n      }),\n    );\n\n    const formClass = usePrefixClass('form');\n\n    const needValidate = (name: string | number, fields: string[] | undefined) => {\n      if (!fields || !isArray(fields)) return true;\n      return fields.indexOf(`${name}`) !== -1;\n    };\n    const formatValidateResult = <T extends Data>(validateResultList: FormItemValidateResult<T>[]) => {\n      const result = validateResultList.reduce((r, err) => Object.assign(r || {}, err), {});\n      Object.keys(result).forEach((key) => {\n        if (result[key] === true) {\n          delete result[key];\n        }\n      });\n      return isEmpty(result) ? true : result;\n    };\n    const validate = async (param?: FormValidateParams): Promise<Result> => {\n      const { fields, trigger = 'all', showErrorMessage } = param || {};\n      const list = children.value\n        .filter((child) => isFunction(child.validate) && needValidate(String(child.name), fields))\n        .map((child) => child.validate(trigger, showErrorMessage));\n      const arr = await Promise.all(list);\n      const result = formatValidateResult(arr);\n      props.onValidate?.({\n        validateResult: result,\n      });\n      return result;\n    };\n\n    const getFirstError = (result: Result) => {\n      if (isBoolean(result)) return '';\n\n      const [firstKey] = Object.keys(result);\n      if (props.scrollToFirstError) {\n        const tmpClassName = `${formClass.value}-item__${firstKey}`;\n        scrollTo(tmpClassName);\n      }\n      const resArr = result[firstKey] as ValidateResultList;\n      if (!isArray(resArr)) return '';\n\n      return result?.[Object.keys(result)?.[0]]?.[0]?.message || '';\n    };\n    // 校验不通过时，滚动到第一个错误表单\n    const scrollTo = (selector: string) => {\n      const [dom] = formRef.value.getElementsByClassName(selector);\n      const behavior = props.scrollToFirstError;\n      if (behavior) {\n        dom && dom.scrollIntoView({ behavior });\n      }\n    };\n    const submitParams = ref<Pick<FormValidateParams, 'showErrorMessage'>>();\n    const onSubmit = (e?: FormSubmitEvent) => {\n      if (props.preventSubmitDefault && e) {\n        preventDefault(e, true);\n      }\n      validate(submitParams.value).then((r) => {\n        const firstError = getFirstError(r);\n        // @ts-ignore\n        props.onSubmit?.({\n          validateResult: r,\n          firstError,\n        });\n      });\n      submitParams.value = undefined;\n    };\n\n    const submit = async (params?: Pick<FormValidateParams, 'showErrorMessage'>) => {\n      submitParams.value = params;\n      requestSubmit(formRef.value);\n    };\n\n    const resetParams = ref<FormResetParams<Data>>();\n    const onReset = (e?: FormResetEvent) => {\n      if (props.preventSubmitDefault && e) {\n        preventDefault(e, true);\n      }\n      children.value\n        .filter(\n          (child) =>\n            isFunction(child.resetField) && needValidate(String(child.name), resetParams.value?.fields as string[]),\n        )\n        .forEach((child) => child.resetField(resetParams.value?.type));\n      resetParams.value = undefined;\n      props.onReset?.({ e });\n    };\n\n    const reset = <FormData extends Data>(params?: FormResetParams<FormData>) => {\n      (resetParams.value as any) = params;\n      formRef.value.reset();\n    };\n\n    const clearValidate = (fields?: Array<string>) => {\n      children.value.forEach((child) => {\n        if (isFunction(child.resetHandler) && needValidate(String(child.name), fields)) {\n          child.resetHandler();\n        }\n      });\n    };\n    const setValidateMessage = (validateMessage: FormValidateMessage<FormData>) => {\n      const keys = Object.keys(validateMessage);\n      if (!keys.length) return;\n      const list = children.value\n        .filter((child) => isFunction(child.setValidateMessage) && keys.includes(`${child.name}`))\n        .map((child) => child.setValidateMessage(validateMessage[`${child.name}`]));\n      Promise.all(list);\n    };\n\n    expose({ validate, submit, reset, clearValidate, setValidateMessage });\n\n    return () => {\n      return (\n        <form ref={formRef} class={formClass.value} onSubmit={(e) => onSubmit(e)} onReset={(e) => onReset(e)}>\n          {renderTNodeJSX('default')}\n        </form>\n      );\n    };\n  },\n});\n"],"names":["prefix","config","requestSubmit","target","HTMLFormElement","Error","submitter","document","createElement","type","hidden","appendChild","click","removeChild","defineComponent","name","props","setup","expose","_ref","renderTNodeJSX","useTNodeJSX","_toRefs","toRefs","disabled","showErrorMessage","labelWidth","labelAlign","contentAlign","data","colon","requiredMark","rules","errorMessage","resetType","formRef","ref","children","provide","FormInjectionKey","reactive","renderContent","formClass","usePrefixClass","needValidate","fields","isArray","indexOf","concat","formatValidateResult","validateResultList","result","reduce","r","err","Object","assign","keys","forEach","key","isEmpty","validate","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","param","_props2$onValidate","_ref3","_ref3$trigger","trigger","showErrorMessage2","list","arr","wrap","_callee$","_context","prev","next","value","filter","child","isFunction","String","map","Promise","all","sent","onValidate","validateResult","abrupt","stop","_x","apply","arguments","getFirstError","_result$Object$keys$","_Object$keys3","isBoolean","_Object$keys","_Object$keys2","_slicedToArray","firstKey","scrollToFirstError","tmpClassName","scrollTo","resArr","message","selector","_formRef$value$getEle","getElementsByClassName","_formRef$value$getEle2","dom","behavior","scrollIntoView","submitParams","onSubmit","e","preventSubmitDefault","preventDefault","then","_props2$onSubmit","firstError","submit","_ref4","_callee2","params","_callee2$","_context2","_x2","resetParams","onReset","_props2$onReset","_resetParams$value","resetField","_resetParams$value2","reset","clearValidate","resetHandler","setValidateMessage","validateMessage","length","includes","_createVNode"],"mappings":"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"}