declare const _default: import("vue").DefineComponent<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    error: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    fit: {
        type: import("vue").PropType<"fill" | "none" | "contain" | "cover" | "scale-down">;
        default: "fill" | "none" | "contain" | "cover" | "scale-down";
        validator(val: "fill" | "none" | "contain" | "cover" | "scale-down"): boolean;
    };
    lazy: BooleanConstructor;
    loading: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    position: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: import("vue").PropType<"circle" | "round" | "square">;
        default: "circle" | "round" | "square";
        validator(val: "circle" | "round" | "square"): boolean;
    };
    src: {
        type: StringConstructor;
        default: string;
    };
    srcset: {
        type: import("vue").PropType<import("./type").ImageSrcset>;
    };
    onError: import("vue").PropType<(context: {
        e: Event;
    }) => void>;
    onLoad: import("vue").PropType<(context: {
        e: Event;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    error: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    fit: {
        type: import("vue").PropType<"fill" | "none" | "contain" | "cover" | "scale-down">;
        default: "fill" | "none" | "contain" | "cover" | "scale-down";
        validator(val: "fill" | "none" | "contain" | "cover" | "scale-down"): boolean;
    };
    lazy: BooleanConstructor;
    loading: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    position: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: import("vue").PropType<"circle" | "round" | "square">;
        default: "circle" | "round" | "square";
        validator(val: "circle" | "round" | "square"): boolean;
    };
    src: {
        type: StringConstructor;
        default: string;
    };
    srcset: {
        type: import("vue").PropType<import("./type").ImageSrcset>;
    };
    onError: import("vue").PropType<(context: {
        e: Event;
    }) => void>;
    onLoad: import("vue").PropType<(context: {
        e: Event;
    }) => void>;
}>>, {
    lazy: boolean;
    position: string;
    shape: "circle" | "round" | "square";
    src: string;
    fit: "fill" | "none" | "contain" | "cover" | "scale-down";
    alt: string;
}, {}>;
export default _default;
