declare const _default: import("vue").DefineComponent<{
    value: {
        type: import("vue").PropType<string | number>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<string | number>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<string | number>;
    };
    onChange: import("vue").PropType<(value: string | number) => void>;
    onClick: import("vue").PropType<(value: string | number, label: string) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "update:value" | "change")[], "update:modelValue" | "update:value" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<string | number>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<string | number>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<string | number>;
    };
    onChange: import("vue").PropType<(value: string | number) => void>;
    onClick: import("vue").PropType<(value: string | number, label: string) => void>;
}>> & {
    onChange?: (...args: any[]) => any;
    "onUpdate:modelValue"?: (...args: any[]) => any;
    "onUpdate:value"?: (...args: any[]) => any;
}, {
    value: string | number;
    modelValue: string | number;
}, {}>;
export default _default;
