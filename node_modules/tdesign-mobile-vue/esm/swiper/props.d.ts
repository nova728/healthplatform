import { TdSwiperProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    animation: {
        type: PropType<"slide">;
        default: "slide";
        validator(val: TdSwiperProps['animation']): boolean;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    current: {
        type: NumberConstructor;
        default: any;
    };
    modelValue: {
        type: NumberConstructor;
        default: any;
    };
    defaultCurrent: {
        type: NumberConstructor;
        default: number;
    };
    direction: {
        type: PropType<"vertical" | "horizontal">;
        default: "vertical" | "horizontal";
        validator(val: TdSwiperProps['direction']): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    height: {
        type: PropType<string | number>;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    navigation: {
        type: PropType<((h: typeof import("vue").h) => import("..").SlotReturnValue) | import("./type").SwiperNavigation>;
    };
    nextMargin: {
        type: PropType<string | number>;
        default: number;
    };
    previousMargin: {
        type: PropType<string | number>;
        default: number;
    };
    type: {
        type: PropType<"default" | "card">;
        default: "default" | "card";
        validator(val: TdSwiperProps['type']): boolean;
    };
    disabled: {
        type: PropType<Boolean>;
        default: boolean;
    };
    onChange: PropType<(current: number, context: {
        source: import("./type").SwiperChangeSource;
    }) => void>;
    onClick: PropType<(index: number) => void>;
};
export default _default;
