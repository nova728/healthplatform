/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import { defineComponent, ref, onMounted, computed, provide, toRefs, createVNode } from 'vue';
import TabBarProps from './props.js';
import config from '../config.js';
import '../shared/index.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import { useDefault } from '../shared/useDefault/index.js';
import { useChildSlots } from '../shared/useChildSlots/index.js';
import '../shared/functions.js';
import '../shared/util.js';
import 'lodash/isNumber';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/render.js';
import '@babel/runtime/helpers/typeof';
import 'lodash/camelCase';
import '../shared/dom.js';
import 'lodash/isFunction';
import 'lodash/isString';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useVModel/index.js';
import 'lodash/kebabCase';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import 'lodash/isArray';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';
import '../shared/hover.js';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-b9ce5211.js';
import '../_chunks/dep-ff878671.js';
import 'dayjs';
import '../_chunks/dep-021696fd.js';
import '../config-provider/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix = config.prefix;
var _TabBar = defineComponent({
  name: "".concat(prefix, "-tab-bar"),
  props: TabBarProps,
  emits: ["update:value", "update:modelValue", "change"],
  setup: function setup(props, context) {
    var tabBarClass = usePrefixClass("tab-bar");
    var renderTNodeJSX = useTNodeJSX();
    var _useDefault = useDefault(props, context.emit, "value", "change"),
      _useDefault2 = _slicedToArray(_useDefault, 1),
      activeValue = _useDefault2[0];
    var defaultIndex = ref(-1);
    var itemCount = ref(0);
    onMounted(function () {
      var nodes = context.slots.default && context.slots.default();
      if (nodes !== void 0) {
        var childSlots = useChildSlots("".concat(prefix, "-tab-bar-item"));
        itemCount.value = childSlots.length;
      }
    });
    var updateChild = function updateChild(currentValue) {
      activeValue.value = currentValue;
    };
    var rootClass = computed(function () {
      return ["".concat(tabBarClass.value), _defineProperty(_defineProperty(_defineProperty({}, "".concat(tabBarClass.value, "--bordered"), props.bordered), "".concat(tabBarClass.value, "--fixed"), props.fixed), "".concat(tabBarClass.value, "--safe"), props.safeAreaInsetBottom), "".concat(tabBarClass.value, "--").concat(props.shape)];
    });
    provide("tab-bar", _objectSpread(_objectSpread({}, toRefs(props)), {}, {
      defaultIndex: defaultIndex,
      activeValue: activeValue,
      itemCount: itemCount,
      updateChild: updateChild
    }));
    return function () {
      return createVNode("div", {
        "class": rootClass.value,
        "role": "tablist"
      }, [renderTNodeJSX("default")]);
    };
  }
});

export { _TabBar as default };
//# sourceMappingURL=tab-bar.js.map
