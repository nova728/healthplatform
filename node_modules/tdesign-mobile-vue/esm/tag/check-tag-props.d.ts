import { TdCheckTagProps } from '../tag/type';
import { PropType } from 'vue';
declare const _default: {
    checked: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultChecked: BooleanConstructor;
    closable: BooleanConstructor;
    content: {
        type: PropType<string | number | string[] | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    shape: {
        type: PropType<"mark" | "round" | "square">;
        default: "mark" | "round" | "square";
        validator(val: TdCheckTagProps['shape']): boolean;
    };
    size: {
        type: PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: TdCheckTagProps['size']): boolean;
    };
    variant: {
        type: PropType<"dark" | "light" | "outline" | "light-outline">;
        default: "dark" | "light" | "outline" | "light-outline";
        validator(val: TdCheckTagProps['variant']): boolean;
    };
    onChange: PropType<(checked: boolean) => void>;
    onClick: PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: PropType<(context: {
        e: MouseEvent;
    }) => void>;
};
export default _default;
