{"version":3,"file":"upload.js","sources":["../../src/upload/upload.tsx"],"sourcesContent":["import { defineComponent, ref, computed, toRefs } from 'vue';\nimport { AddIcon, LoadingIcon, CloseIcon, CloseCircleIcon } from 'tdesign-icons-vue-next';\nimport TImage from '../image';\nimport TImageViewer from '../image-viewer';\nimport { UploadFile } from './type';\nimport UploadProps from './props';\nimport config from '../config';\nimport useUpload from './hooks/useUpload';\nimport { useTNodeJSX, useContent } from '../hooks/tnode';\nimport { usePrefixClass, useConfig } from '../hooks/useClass';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-upload`,\n  components: {\n    AddIcon,\n    LoadingIcon,\n    CloseCircleIcon,\n    CloseIcon,\n    TImage,\n    TImageViewer,\n  },\n  props: UploadProps,\n  emits: [\n    'update:files',\n    'update:modelValue',\n    'change',\n    'fail',\n    'preview',\n    'progress',\n    'remove',\n    'success',\n    'select-change',\n    'validate',\n    'click-upload',\n  ],\n  setup(props) {\n    const uploadClass = usePrefixClass('upload');\n    const { globalConfig } = useConfig('upload');\n\n    const {\n      toUploadFiles,\n      uploadValue,\n      displayFiles,\n      sizeOverLimitMessage,\n      uploading,\n      inputRef,\n      disabled,\n      xhrReq,\n      uploadFilePercent,\n      uploadFiles,\n      onFileChange,\n      onNormalFileChange,\n      onInnerRemove,\n      cancelUpload,\n    } = useUpload(props);\n\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n\n    const showViewer = ref(false);\n    const initialIndex = ref(0);\n\n    const handlePreview = (e: MouseEvent, file: UploadFile, index: number) => {\n      initialIndex.value = index;\n      showViewer.value = true;\n      props.onPreview?.({\n        e,\n        file,\n        index,\n      });\n    };\n\n    const triggerUpload = (e: MouseEvent) => {\n      const input = inputRef.value as HTMLInputElement;\n      if (disabled?.value) return;\n      input.click();\n      props.onClickUpload?.({\n        e,\n      });\n    };\n\n    const previewImgs = computed(() => {\n      return displayFiles.value.map((item) => item.url as string);\n    });\n\n    const handleImageClose = ({ visible }: { visible: boolean }) => {\n      showViewer.value = visible;\n    };\n\n    const renderStatus = (file: UploadFile) => {\n      if (file.status === 'fail' || file.status === 'progress') {\n        return (\n          <div class={`${uploadClass.value}__progress-mask`}>\n            {file.status === 'progress' ? (\n              <>\n                <loading-icon class={`${uploadClass.value}__progress-loading`} size=\"24\" />\n                <div class={`${uploadClass.value}__progress-text`}>\n                  {file.percent ? `${file.percent}%` : globalConfig.value.progress.uploadingText}\n                </div>\n              </>\n            ) : (\n              <close-circle-icon size=\"24\" />\n            )}\n            {file.status === 'fail' && (\n              <div class={`${uploadClass.value}__progress-text`}>{globalConfig.value.progress.failText}</div>\n            )}\n          </div>\n        );\n      }\n    };\n\n    const content = () => {\n      const defaultContent = renderContent('default', 'content');\n      const addContent = renderTNodeJSX('addContent');\n      if (props.max === 0 || (props.max > 0 && displayFiles.value?.length < props.max)) {\n        if (defaultContent) {\n          return <div onClick={triggerUpload}>{defaultContent}</div>;\n        }\n        return (\n          <div class={`${uploadClass.value}__item ${uploadClass.value}__item--add`} onClick={triggerUpload}>\n            <div class={`${uploadClass.value}__add-icon`}>{addContent || <add-icon size=\"28\" />}</div>\n          </div>\n        );\n      }\n    };\n\n    return {\n      ...toRefs(props),\n      uploadClass,\n      globalConfig,\n      initialIndex,\n      showViewer,\n      previewImgs,\n      toUploadFiles,\n      uploadValue,\n      displayFiles,\n      sizeOverLimitMessage,\n      uploading,\n      inputRef,\n      disabled,\n      xhrReq,\n      handlePreview,\n      triggerUpload,\n      uploadFilePercent,\n      uploadFiles,\n      onFileChange,\n      onNormalFileChange,\n      onInnerRemove,\n      cancelUpload,\n      handleImageClose,\n      renderStatus,\n      content,\n    };\n  },\n\n  render() {\n    return (\n      <div class={`${this.uploadClass}`}>\n        {this.displayFiles.map((file, index) => (\n          <div key={index} class={`${this.uploadClass}__item`}>\n            {file.url && (\n              <t-image\n                class={`${this.uploadClass}__image`}\n                shape=\"round\"\n                {...(this.$props.imageProps as object)}\n                src={file.url}\n                onClick={(e: MouseEvent) => this.handlePreview(e, file, index)}\n              />\n            )}\n            {this.renderStatus(file)}\n            <close-icon\n              class={`${this.uploadClass}__delete-btn`}\n              onClick={({ e }: any) => this.onInnerRemove({ e, file, index })}\n            />\n          </div>\n        ))}\n        {this.content()}\n        <input\n          ref=\"inputRef\"\n          value={this.$props.files}\n          type=\"file\"\n          multiple={this.$props.multiple}\n          hidden\n          accept={this.$props.accept}\n          onChange={this.onNormalFileChange}\n        />\n        <t-image-viewer\n          visible={this.showViewer}\n          images={this.previewImgs}\n          index={this.initialIndex}\n          onClose={this.handleImageClose}\n        />\n      </div>\n    );\n  },\n});\n"],"names":["prefix","config","defineComponent","name","components","AddIcon","LoadingIcon","CloseCircleIcon","CloseIcon","TImage","TImageViewer","props","UploadProps","emits","setup","uploadClass","usePrefixClass","_useConfig","useConfig","globalConfig","_useUpload","useUpload","toUploadFiles","uploadValue","displayFiles","sizeOverLimitMessage","uploading","inputRef","disabled","xhrReq","uploadFilePercent","uploadFiles","onFileChange","onNormalFileChange","onInnerRemove","cancelUpload","renderTNodeJSX","useTNodeJSX","renderContent","useContent","showViewer","ref","initialIndex","handlePreview","e","file","index","_props$onPreview","value","onPreview","call","triggerUpload","_props$onClickUpload","input","click","onClickUpload","previewImgs","computed","map","item","url","handleImageClose","_ref","visible","renderStatus","status","_createVNode","concat","_Fragment","_resolveComponent","percent","progress","uploadingText","failText","content","_displayFiles$value","defaultContent","addContent","max","length","_objectSpread","toRefs","render","_this","_mergeProps","$props","imageProps","onClick","_ref2","files","multiple","accept"],"mappings":"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"}