import { TdCalendarProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    confirmBtn: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue) | import("..").TdButtonProps>;
        default: string;
    };
    firstDayOfWeek: {
        type: NumberConstructor;
        default: number;
    };
    format: {
        type: PropType<import("./type").CalendarFormatType>;
    };
    maxDate: {
        type: PropType<number | Date>;
    };
    minDate: {
        type: PropType<number | Date>;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    type: {
        type: PropType<"range" | "multiple" | "single">;
        default: "range" | "multiple" | "single";
        validator(val: TdCalendarProps['type']): boolean;
    };
    usePopup: {
        type: BooleanConstructor;
        default: boolean;
    };
    value: {
        type: PropType<number | Date | import("./type").TCalendarValue[]>;
        default: any;
    };
    modelValue: {
        type: PropType<number | Date | import("./type").TCalendarValue[]>;
        default: any;
    };
    defaultValue: {
        type: PropType<number | Date | import("./type").TCalendarValue[]>;
    };
    visible: BooleanConstructor;
    onChange: PropType<(value: Date) => void>;
    onClose: PropType<(trigger: import("./type").CalendarTrigger) => void>;
    onConfirm: PropType<(value: Date) => void>;
    onSelect: PropType<(value: Date) => void>;
};
export default _default;
