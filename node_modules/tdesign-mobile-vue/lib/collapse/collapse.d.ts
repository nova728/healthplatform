import { Ref, ComputedRef } from 'vue';
import { CollapseValue, TdCollapseProps } from './type';
export interface CollapseProvide {
    activeValue: Ref<CollapseValue | undefined>;
    disabled: ComputedRef<boolean>;
    expandIcon: ComputedRef<TdCollapseProps['expandIcon']>;
    onPanelChange: (name: string | number, args: any) => void;
    defaultExpandAll: boolean;
}
declare const _default: import("vue").DefineComponent<{
    defaultExpandAll: BooleanConstructor;
    disabled: BooleanConstructor;
    expandIcon: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    expandMutex: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"default" | "card">;
        default: "default" | "card";
        validator(val: "default" | "card"): boolean;
    };
    value: {
        type: import("vue").PropType<CollapseValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<CollapseValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<CollapseValue>;
        default: () => CollapseValue;
    };
    onChange: import("vue").PropType<(value: CollapseValue, context: {
        e: MouseEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    defaultExpandAll: BooleanConstructor;
    disabled: BooleanConstructor;
    expandIcon: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    expandMutex: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"default" | "card">;
        default: "default" | "card";
        validator(val: "default" | "card"): boolean;
    };
    value: {
        type: import("vue").PropType<CollapseValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<CollapseValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<CollapseValue>;
        default: () => CollapseValue;
    };
    onChange: import("vue").PropType<(value: CollapseValue, context: {
        e: MouseEvent;
    }) => void>;
}>>, {
    value: CollapseValue;
    defaultValue: CollapseValue;
    modelValue: CollapseValue;
    theme: "default" | "card";
    disabled: boolean;
    expandIcon: boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    defaultExpandAll: boolean;
    expandMutex: boolean;
}, {}>;
export default _default;
