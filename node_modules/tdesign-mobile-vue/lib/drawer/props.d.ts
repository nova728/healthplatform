import { TdDrawerProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    attach: {
        type: PropType<import("..").AttachNode>;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: any;
    };
    destroyOnClose: BooleanConstructor;
    footer: {
        type: PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    items: {
        type: PropType<import("./type").DrawerItem[]>;
    };
    placement: {
        type: PropType<"left" | "right">;
        default: "left" | "right";
        validator(val: TdDrawerProps['placement']): boolean;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    visible: BooleanConstructor;
    zIndex: {
        type: NumberConstructor;
    };
    onClose: PropType<(trigger: "overlay") => void>;
    onItemClick: PropType<(index: number, item: import("./type").DrawerItem, context: {
        e: MouseEvent;
    }) => void>;
    onOverlayClick: PropType<(context: {
        e: MouseEvent;
    }) => void>;
};
export default _default;
