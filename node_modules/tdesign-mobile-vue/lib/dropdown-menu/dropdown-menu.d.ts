declare const _default: import("vue").DefineComponent<{
    closeOnClickOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    direction: {
        type: import("vue").PropType<"down" | "up">;
        default: "down" | "up";
        validator(val: "down" | "up"): boolean;
    };
    duration: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    onMenuOpened: FunctionConstructor;
    onMenuClosed: FunctionConstructor;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("menuOpened" | "menuClosed")[], "menuOpened" | "menuClosed", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    closeOnClickOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    direction: {
        type: import("vue").PropType<"down" | "up">;
        default: "down" | "up";
        validator(val: "down" | "up"): boolean;
    };
    duration: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    onMenuOpened: FunctionConstructor;
    onMenuClosed: FunctionConstructor;
}>> & {
    onMenuOpened?: (...args: any[]) => any;
    onMenuClosed?: (...args: any[]) => any;
}, {
    direction: "down" | "up";
    duration: string | number;
    zIndex: number;
    showOverlay: boolean;
    closeOnClickOverlay: boolean;
}, {}>;
export default _default;
