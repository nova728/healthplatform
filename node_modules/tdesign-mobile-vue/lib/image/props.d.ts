import { TdImageProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    alt: {
        type: StringConstructor;
        default: string;
    };
    error: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    fit: {
        type: PropType<"fill" | "none" | "contain" | "cover" | "scale-down">;
        default: "fill" | "none" | "contain" | "cover" | "scale-down";
        validator(val: TdImageProps['fit']): boolean;
    };
    lazy: BooleanConstructor;
    loading: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    position: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: PropType<"circle" | "round" | "square">;
        default: "circle" | "round" | "square";
        validator(val: TdImageProps['shape']): boolean;
    };
    src: {
        type: StringConstructor;
        default: string;
    };
    srcset: {
        type: PropType<import("./type").ImageSrcset>;
    };
    onError: PropType<(context: {
        e: Event;
    }) => void>;
    onLoad: PropType<(context: {
        e: Event;
    }) => void>;
};
export default _default;
