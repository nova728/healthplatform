/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { defineComponent, getCurrentInstance, inject, createVNode } from 'vue';
import config from '../config.js';
import indexesAnchorProps from './indexes-anchor-props.js';
import { usePrefixClass } from '../hooks/useClass.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import '../config-provider/useConfig.js';
import 'lodash/isFunction';
import 'lodash/cloneDeep';
import 'lodash/isString';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-cfc27041.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-f4bc4e07.js';
import 'dayjs';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';

var prefix = config.prefix;
var _IndexesAnchor = defineComponent({
  name: "".concat(prefix, "-indexes-anchor"),
  props: indexesAnchorProps,
  setup: function setup(props) {
    var readerTNodeJSX = useTNodeJSX();
    var indexesAnchorClass = usePrefixClass("indexes-anchor");
    var instance = getCurrentInstance();
    var indexesProvide = inject("indexesProvide", void 0);
    var proxy = instance.proxy;
    indexesProvide.relation(proxy);
    return function () {
      return createVNode("div", {
        "class": indexesAnchorClass.value,
        "data-index": props.index
      }, [createVNode("div", {
        "class": "".concat(indexesAnchorClass.value, "__wrapper")
      }, [createVNode("div", {
        "class": "".concat(indexesAnchorClass.value, "__slot")
      }, [readerTNodeJSX("default")]), createVNode("div", {
        "class": "".concat(indexesAnchorClass.value, "__header")
      }, [props.index])])]);
    };
  }
});

export { _IndexesAnchor as default };
//# sourceMappingURL=indexes-anchor.js.map
