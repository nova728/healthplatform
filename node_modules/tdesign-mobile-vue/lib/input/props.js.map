{"version":3,"file":"props.js","sources":["../../src/input/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdInputProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 文本内容位置，居左/居中/居右 */\n  align: {\n    type: String as PropType<TdInputProps['align']>,\n    default: 'left' as TdInputProps['align'],\n    validator(val: TdInputProps['align']): boolean {\n      if (!val) return true;\n      return ['left', 'center', 'right'].includes(val);\n    },\n  },\n  /** 超出 `maxlength` 或 `maxcharacter` 之后是否允许继续输入 */\n  allowInputOverMax: Boolean,\n  /** 是否开启自动填充功能，HTML5 原生属性，[点击查看详情](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) */\n  autocomplete: {\n    type: String,\n    default: undefined,\n  },\n  /** 自动聚焦 */\n  autofocus: Boolean,\n  /** 是否开启无边框模式 */\n  borderless: Boolean,\n  /** 清空图标触发方式，仅在输入框有值时有效 */\n  clearTrigger: {\n    type: String as PropType<TdInputProps['clearTrigger']>,\n    default: 'always' as TdInputProps['clearTrigger'],\n    validator(val: TdInputProps['clearTrigger']): boolean {\n      if (!val) return true;\n      return ['always', 'focus'].includes(val);\n    },\n  },\n  /** 是否可清空 */\n  clearable: Boolean,\n  /** 是否禁用输入框 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 【开发中】指定输入框展示值的格式 */\n  format: {\n    type: Function as PropType<TdInputProps['format']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdInputProps['label']>,\n  },\n  /** 标题输入框布局方式 */\n  layout: {\n    type: String as PropType<TdInputProps['layout']>,\n    default: 'horizontal' as TdInputProps['layout'],\n    validator(val: TdInputProps['layout']): boolean {\n      if (!val) return true;\n      return ['vertical', 'horizontal'].includes(val);\n    },\n  },\n  /** 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用 */\n  maxcharacter: {\n    type: Number,\n  },\n  /** 用户最多可以输入的文本长度，一个中文等于一个计数长度。默认为空，不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用 */\n  maxlength: {\n    type: [String, Number] as PropType<TdInputProps['maxlength']>,\n  },\n  /** 名称 */\n  name: {\n    type: String,\n    default: '',\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdInputProps['prefixIcon']>,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否开启拼写检查，HTML5 原生属性，[点击查看详情](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/spellcheck) */\n  spellCheck: Boolean,\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdInputProps['status']>,\n    default: 'default' as TdInputProps['status'],\n    validator(val: TdInputProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 后置图标前的后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdInputProps['suffix']>,\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdInputProps['suffixIcon']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdInputProps['tips']>,\n  },\n  /** 输入框类型 */\n  type: {\n    type: String as PropType<TdInputProps['type']>,\n    default: 'text' as TdInputProps['type'],\n    validator(val: TdInputProps['type']): boolean {\n      if (!val) return true;\n      return ['text', 'number', 'url', 'tel', 'password', 'search', 'submit', 'hidden'].includes(val);\n    },\n  },\n  /** 输入框的值 */\n  value: {\n    type: [String, Number] as PropType<TdInputProps['value']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdInputProps['value']>,\n    default: undefined,\n  },\n  /** 输入框的值，非受控属性 */\n  defaultValue: {\n    type: [String, Number] as PropType<TdInputProps['defaultValue']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdInputProps['onBlur']>,\n  /** 输入框值发生变化时触发。`trigger=initial` 表示传入的数据不符合预期，组件自动处理后触发 change 告知父组件。如：初始值长度超过 `maxlength` 限制 */\n  onChange: Function as PropType<TdInputProps['onChange']>,\n  /** 清空按钮点击时触发 */\n  onClear: Function as PropType<TdInputProps['onClear']>,\n  /** 获得焦点时触发 */\n  onFocus: Function as PropType<TdInputProps['onFocus']>,\n  /** 【暂不支持】字数超出限制时触发 */\n  onValidate: Function as PropType<TdInputProps['onValidate']>,\n};\n"],"names":["align","type","String","default","validator","val","includes","allowInputOverMax","Boolean","autocomplete","autofocus","borderless","clearTrigger","clearable","disabled","format","Function","label","layout","maxcharacter","Number","maxlength","name","placeholder","prefixIcon","readonly","spellCheck","status","suffix","suffixIcon","tips","value","modelValue","defaultValue","onBlur","onChange","onClear","onFocus","onValidate"],"mappings":"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"}