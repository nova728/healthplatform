/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { defineComponent, inject, computed, createVNode } from 'vue';
import props from './col-props.js';
import config from '../config.js';
import { rowInjectionKey } from './constants.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import { convertUnit } from '../shared/util.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-cfc27041.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-f4bc4e07.js';
import 'dayjs';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isNumber';

var prefix = config.prefix;
var _Col = defineComponent({
  name: "".concat(prefix, "-col"),
  props: props,
  setup: function setup(props2) {
    var renderTNodeJSX = useTNodeJSX();
    var colClass = usePrefixClass("col");
    var _inject = inject(rowInjectionKey),
      gutter = _inject.gutter;
    var style = computed(function () {
      var styles = {};
      if (!gutter) {
        return styles;
      }
      var gutterVal = convertUnit(Number(gutter) / 2);
      styles.paddingRight = gutterVal;
      styles.paddingLeft = gutterVal;
      return styles;
    });
    var rootClass = computed(function () {
      var rootClass2 = colClass.value;
      if (props2.offset) {
        rootClass2 += " ".concat(colClass.value, "--offset-").concat(props2.offset);
      }
      if (props2.span) {
        rootClass2 += " ".concat(colClass.value, "--").concat(props2.span);
      }
      return rootClass2;
    });
    return function () {
      return createVNode("div", {
        "class": rootClass.value,
        "style": style.value
      }, [renderTNodeJSX("default")]);
    };
  }
});

export { _Col as default };
//# sourceMappingURL=col.js.map
