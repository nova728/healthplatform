import { NoticeBarTrigger, NoticeBarMarquee } from './type';
declare const _default: import("vue").DefineComponent<{
    content: {
        type: import("vue").PropType<string | string[] | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    direction: {
        type: import("vue").PropType<"vertical" | "horizontal">;
        default: "vertical" | "horizontal";
        validator(val: "vertical" | "horizontal"): boolean;
    };
    marquee: {
        type: import("vue").PropType<boolean | NoticeBarMarquee>;
        default: boolean;
    };
    operation: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    prefixIcon: {
        type: import("vue").PropType<Boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    suffixIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    theme: {
        type: import("vue").PropType<"error" | "warning" | "success" | "info">;
        default: "error" | "warning" | "success" | "info";
        validator(val: "error" | "warning" | "success" | "info"): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onClick: import("vue").PropType<(trigger: NoticeBarTrigger) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    content: {
        type: import("vue").PropType<string | string[] | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    direction: {
        type: import("vue").PropType<"vertical" | "horizontal">;
        default: "vertical" | "horizontal";
        validator(val: "vertical" | "horizontal"): boolean;
    };
    marquee: {
        type: import("vue").PropType<boolean | NoticeBarMarquee>;
        default: boolean;
    };
    operation: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    prefixIcon: {
        type: import("vue").PropType<Boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    suffixIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    theme: {
        type: import("vue").PropType<"error" | "warning" | "success" | "info">;
        default: "error" | "warning" | "success" | "info";
        validator(val: "error" | "warning" | "success" | "info"): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onClick: import("vue").PropType<(trigger: NoticeBarTrigger) => void>;
}>>, {
    marquee: boolean;
    modelValue: boolean;
    direction: "vertical" | "horizontal";
    visible: boolean;
    theme: "error" | "warning" | "success" | "info";
    defaultVisible: boolean;
    prefixIcon: Boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
}, {}>;
export default _default;
