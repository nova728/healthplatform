{"version":3,"file":"popup.js","sources":["../../src/popup/popup.vue","../../src/popup/popup.vue?vue&type=template&id=0fa484e2&lang.js"],"sourcesContent":["<template>\n  <teleport v-if=\"!destroyOnClose || wrapperVisible\" :to=\"to\" :disabled=\"!to\">\n    <t-overlay v-bind=\"overlayProps\" :visible=\"innerVisible && showOverlay\" @click=\"handleOverlayClick\" />\n    <transition :name=\"contentTransitionName\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n      <div\n        v-show=\"innerVisible\"\n        ref=\"popupRef\"\n        :class=\"[popupClass, $attrs.class, contentClasses]\"\n        :style=\"rootStyles\"\n        v-bind=\"$attrs\"\n      >\n        <div v-if=\"closeBtnNode\" :class=\"`${popupClass}__close`\" @click=\"handleCloseClick\">\n          <t-node :content=\"closeBtnNode\" />\n        </div>\n        <slot />\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { computed, watch, defineComponent, h, getCurrentInstance, ref, nextTick, onUnmounted } from 'vue';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\n\nimport popupProps from './props';\nimport TOverlay from '../overlay';\nimport config from '../config';\nimport { TdPopupProps } from './type';\nimport { useDefault, TNode, renderTNode, isBrowser } from '../shared';\nimport { getAttach } from '../shared/dom';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useLockScroll } from '../hooks/useLockScroll';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-popup`,\n  components: { TNode, TOverlay },\n  inheritAttrs: false,\n  props: popupProps,\n  emits: ['open', 'close', 'opened', 'closed', 'visible-change', 'update:visible', 'update:modelValue'],\n  setup(props, context) {\n    const popupClass = usePrefixClass('popup');\n\n    const popupRef = ref<HTMLElement>();\n\n    const currentInstance = getCurrentInstance();\n    const [currentVisible, setVisible] = useDefault<TdPopupProps['visible'], TdPopupProps>(\n      props,\n      context.emit,\n      'visible',\n      'visible-change',\n    );\n    const wrapperVisible = ref(currentVisible.value);\n    const innerVisible = ref(currentVisible.value);\n\n    // 因为开启 destroyOnClose，会影响 transition 的动画，因此需要前后设置 visible\n    watch(currentVisible, (v) => {\n      if (v) {\n        wrapperVisible.value = v;\n        if (props.destroyOnClose) {\n          nextTick(() => {\n            innerVisible.value = v;\n          });\n        } else {\n          innerVisible.value = v;\n        }\n      } else {\n        innerVisible.value = v;\n      }\n    });\n\n    const rootStyles = computed(() => {\n      const styles: Record<string, any> = {};\n\n      if (props.zIndex) {\n        styles.zIndex = `${props.zIndex}`;\n      }\n      return { ...(context.attrs.style as Object), ...styles };\n    });\n\n    const contentClasses = computed(() => ({\n      [`${popupClass.value}--${props.placement}`]: true,\n    }));\n\n    const contentTransitionName = computed(() => {\n      const { transitionName, placement } = props;\n\n      if (transitionName) return transitionName;\n      if (placement === 'center') return 'fade-zoom';\n      return `slide-${placement}`;\n    });\n\n    const closeBtnNode = computed(() =>\n      renderTNode(currentInstance, 'closeBtn', {\n        defaultNode: h(CloseIcon, { size: '24px' }),\n      }),\n    );\n\n    const handleCloseClick = (e: MouseEvent) => {\n      props.onClose?.({ e });\n      setVisible(false, { trigger: 'close-btn' });\n    };\n\n    const handleOverlayClick = (args: { e: MouseEvent }) => {\n      const { e } = args;\n      if (!props.closeOnOverlayClick) {\n        return;\n      }\n      props.onClose?.({ e });\n      setVisible(false, { trigger: 'overlay' });\n    };\n\n    const afterLeave = () => {\n      wrapperVisible.value = false;\n      props.onClosed?.();\n    };\n    const afterEnter = () => props.onOpened?.();\n    const to = computed(() => {\n      if (!isBrowser || !props.attach) return undefined;\n      return getAttach(props.attach ?? 'body');\n    });\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val) {\n          props.onOpen?.();\n          setVisible(true);\n        }\n      },\n    );\n\n    useLockScroll(popupRef, () => wrapperVisible.value && props.preventScrollThrough, popupClass.value);\n\n    return {\n      to,\n      popupClass,\n      wrapperVisible,\n      innerVisible,\n      currentVisible,\n      rootStyles,\n      contentClasses,\n      contentTransitionName,\n      closeBtnNode,\n      afterEnter,\n      afterLeave,\n      handleOverlayClick,\n      handleCloseClick,\n    };\n  },\n});\n</script>\n","<template>\n  <teleport v-if=\"!destroyOnClose || wrapperVisible\" :to=\"to\" :disabled=\"!to\">\n    <t-overlay v-bind=\"overlayProps\" :visible=\"innerVisible && showOverlay\" @click=\"handleOverlayClick\" />\n    <transition :name=\"contentTransitionName\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n      <div\n        v-show=\"innerVisible\"\n        ref=\"popupRef\"\n        :class=\"[popupClass, $attrs.class, contentClasses]\"\n        :style=\"rootStyles\"\n        v-bind=\"$attrs\"\n      >\n        <div v-if=\"closeBtnNode\" :class=\"`${popupClass}__close`\" @click=\"handleCloseClick\">\n          <t-node :content=\"closeBtnNode\" />\n        </div>\n        <slot />\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { computed, watch, defineComponent, h, getCurrentInstance, ref, nextTick, onUnmounted } from 'vue';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\n\nimport popupProps from './props';\nimport TOverlay from '../overlay';\nimport config from '../config';\nimport { TdPopupProps } from './type';\nimport { useDefault, TNode, renderTNode, isBrowser } from '../shared';\nimport { getAttach } from '../shared/dom';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useLockScroll } from '../hooks/useLockScroll';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-popup`,\n  components: { TNode, TOverlay },\n  inheritAttrs: false,\n  props: popupProps,\n  emits: ['open', 'close', 'opened', 'closed', 'visible-change', 'update:visible', 'update:modelValue'],\n  setup(props, context) {\n    const popupClass = usePrefixClass('popup');\n\n    const popupRef = ref<HTMLElement>();\n\n    const currentInstance = getCurrentInstance();\n    const [currentVisible, setVisible] = useDefault<TdPopupProps['visible'], TdPopupProps>(\n      props,\n      context.emit,\n      'visible',\n      'visible-change',\n    );\n    const wrapperVisible = ref(currentVisible.value);\n    const innerVisible = ref(currentVisible.value);\n\n    // 因为开启 destroyOnClose，会影响 transition 的动画，因此需要前后设置 visible\n    watch(currentVisible, (v) => {\n      if (v) {\n        wrapperVisible.value = v;\n        if (props.destroyOnClose) {\n          nextTick(() => {\n            innerVisible.value = v;\n          });\n        } else {\n          innerVisible.value = v;\n        }\n      } else {\n        innerVisible.value = v;\n      }\n    });\n\n    const rootStyles = computed(() => {\n      const styles: Record<string, any> = {};\n\n      if (props.zIndex) {\n        styles.zIndex = `${props.zIndex}`;\n      }\n      return { ...(context.attrs.style as Object), ...styles };\n    });\n\n    const contentClasses = computed(() => ({\n      [`${popupClass.value}--${props.placement}`]: true,\n    }));\n\n    const contentTransitionName = computed(() => {\n      const { transitionName, placement } = props;\n\n      if (transitionName) return transitionName;\n      if (placement === 'center') return 'fade-zoom';\n      return `slide-${placement}`;\n    });\n\n    const closeBtnNode = computed(() =>\n      renderTNode(currentInstance, 'closeBtn', {\n        defaultNode: h(CloseIcon, { size: '24px' }),\n      }),\n    );\n\n    const handleCloseClick = (e: MouseEvent) => {\n      props.onClose?.({ e });\n      setVisible(false, { trigger: 'close-btn' });\n    };\n\n    const handleOverlayClick = (args: { e: MouseEvent }) => {\n      const { e } = args;\n      if (!props.closeOnOverlayClick) {\n        return;\n      }\n      props.onClose?.({ e });\n      setVisible(false, { trigger: 'overlay' });\n    };\n\n    const afterLeave = () => {\n      wrapperVisible.value = false;\n      props.onClosed?.();\n    };\n    const afterEnter = () => props.onOpened?.();\n    const to = computed(() => {\n      if (!isBrowser || !props.attach) return undefined;\n      return getAttach(props.attach ?? 'body');\n    });\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val) {\n          props.onOpen?.();\n          setVisible(true);\n        }\n      },\n    );\n\n    useLockScroll(popupRef, () => wrapperVisible.value && props.preventScrollThrough, popupClass.value);\n\n    return {\n      to,\n      popupClass,\n      wrapperVisible,\n      innerVisible,\n      currentVisible,\n      rootStyles,\n      contentClasses,\n      contentTransitionName,\n      closeBtnNode,\n      afterEnter,\n      afterLeave,\n      handleOverlayClick,\n      handleCloseClick,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","defineComponent","name","components","TNode","TOverlay","inheritAttrs","props","popupProps","emits","setup","context","popupClass","usePrefixClass","popupRef","ref","currentInstance","getCurrentInstance","_useDefault","useDefault","emit","_useDefault2","_slicedToArray","currentVisible","setVisible","wrapperVisible","value","innerVisible","watch","v","destroyOnClose","nextTick","rootStyles","computed","styles","zIndex","concat","_objectSpread","attrs","style","contentClasses","_defineProperty","placement","contentTransitionName","transitionName","closeBtnNode","renderTNode","defaultNode","h","CloseIcon","size","handleCloseClick","e","_props$onClose","onClose","call","trigger","handleOverlayClick","args","_props$onClose2","closeOnOverlayClick","afterLeave","_props$onClosed","onClosed","afterEnter","_props$onOpened","onOpened","to","_props$attach","isBrowser","attach","getAttach","val","_props$onOpen","onOpen","useLockScroll","preventScrollThrough","_ctx","_createBlock","_Teleport","disabled","_createVNode","_component_t_overlay","_mergeProps","overlayProps","visible","showOverlay","onClick","_Transition","onAfterEnter","onAfterLeave","_withDirectives","_createElementVNode","class","$attrs","_createElementBlock","apply","arguments","_component_t_node","content","_renderSlot","$slots"],"mappings":"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"}