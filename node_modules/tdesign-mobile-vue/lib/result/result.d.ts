declare const _default: import("vue").DefineComponent<{
    description: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"default" | "error" | "warning" | "success">;
        default: "default" | "error" | "warning" | "success";
        validator(val: "default" | "error" | "warning" | "success"): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    description: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"default" | "error" | "warning" | "success">;
        default: "default" | "error" | "warning" | "success";
        validator(val: "default" | "error" | "warning" | "success"): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: string;
    };
}>>, {
    title: string | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    theme: "default" | "error" | "warning" | "success";
}, {}>;
export default _default;
