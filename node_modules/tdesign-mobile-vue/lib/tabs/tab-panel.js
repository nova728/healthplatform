/**
 * tdesign v1.5.0
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { defineComponent, inject, computed, ref, watch, withDirectives, createVNode, vShow } from 'vue';
import config from '../config.js';
import props from './tab-panel-props.js';
import { useContent } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-cfc27041.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-f4bc4e07.js';
import 'dayjs';

var prefix = config.prefix;
var name = "".concat(prefix, "-tab-panel");
var _TabPanel = defineComponent({
  name: name,
  props: props,
  setup: function setup(props2) {
    var renderTNodeContent = useContent();
    var tabPanelClass = usePrefixClass("tab-panel");
    var tabsClass = usePrefixClass("tabs");
    var currentValue = inject("currentValue");
    var isActive = computed(function () {
      return currentValue.value === props2.value;
    });
    var tabPanelClasses = computed(function () {
      return ["".concat(tabPanelClass.value), "".concat(tabsClass.value, "__panel")];
    });
    var isMount = ref(props2.lazy ? isActive.value : true);
    watch(isActive, function () {
      if (isActive.value) {
        if (!isMount.value) {
          isMount.value = true;
        }
      } else if (props2.destroyOnHide) {
        isMount.value = false;
      }
    }, {
      immediate: true
    });
    return function () {
      if (!isMount.value) return null;
      return withDirectives(createVNode("div", {
        "class": tabPanelClasses.value
      }, [renderTNodeContent("default", "panel")]), [[vShow, isActive.value]]);
    };
  }
});

export { _TabPanel as default };
//# sourceMappingURL=tab-panel.js.map
