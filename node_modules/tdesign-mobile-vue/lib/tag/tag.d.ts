declare const _default: import("vue").DefineComponent<{
    closable: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
        default: any;
    };
    maxWidth: {
        type: import("vue").PropType<string | number>;
    };
    shape: {
        type: import("vue").PropType<"mark" | "round" | "square">;
        default: "mark" | "round" | "square";
        validator(val: "mark" | "round" | "square"): boolean;
    };
    size: {
        type: import("vue").PropType<"small" | "medium" | "large" | "extra-large">;
        default: "small" | "medium" | "large" | "extra-large";
        validator(val: "small" | "medium" | "large" | "extra-large"): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "primary" | "danger" | "warning" | "success">;
        default: "default" | "primary" | "danger" | "warning" | "success";
        validator(val: "default" | "primary" | "danger" | "warning" | "success"): boolean;
    };
    variant: {
        type: import("vue").PropType<"dark" | "light" | "outline" | "light-outline">;
        default: "dark" | "light" | "outline" | "light-outline";
        validator(val: "dark" | "light" | "outline" | "light-outline"): boolean;
    };
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "close")[], "click" | "close", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    closable: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
        default: any;
    };
    maxWidth: {
        type: import("vue").PropType<string | number>;
    };
    shape: {
        type: import("vue").PropType<"mark" | "round" | "square">;
        default: "mark" | "round" | "square";
        validator(val: "mark" | "round" | "square"): boolean;
    };
    size: {
        type: import("vue").PropType<"small" | "medium" | "large" | "extra-large">;
        default: "small" | "medium" | "large" | "extra-large";
        validator(val: "small" | "medium" | "large" | "extra-large"): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "primary" | "danger" | "warning" | "success">;
        default: "default" | "primary" | "danger" | "warning" | "success";
        validator(val: "default" | "primary" | "danger" | "warning" | "success"): boolean;
    };
    variant: {
        type: import("vue").PropType<"dark" | "light" | "outline" | "light-outline">;
        default: "dark" | "light" | "outline" | "light-outline";
        validator(val: "dark" | "light" | "outline" | "light-outline"): boolean;
    };
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}>> & {
    onClick?: (...args: any[]) => any;
    onClose?: (...args: any[]) => any;
}, {
    theme: "default" | "primary" | "danger" | "warning" | "success";
    size: "small" | "medium" | "large" | "extra-large";
    disabled: boolean;
    icon: (h: typeof import("vue").h) => import("..").SlotReturnValue;
    shape: "mark" | "round" | "square";
    variant: "dark" | "light" | "outline" | "light-outline";
    closable: boolean;
}, {}>;
export default _default;
