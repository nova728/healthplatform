import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    direction: {
        type: import("vue").PropType<"column" | "row">;
        default: "column" | "row";
        validator(val: "column" | "row"): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    message: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    overlayProps: {
        type: import("vue").PropType<import("../overlay/type").TdOverlayProps>;
        default: () => {};
    };
    placement: {
        type: import("vue").PropType<"top" | "middle" | "bottom">;
        default: "top" | "middle" | "bottom";
        validator(val: "top" | "middle" | "bottom"): boolean;
    };
    preventScrollThrough: BooleanConstructor;
    showOverlay: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"error" | "loading" | "success">;
        validator(val: "error" | "loading" | "success"): boolean;
    };
    onClose: import("vue").PropType<() => void>;
    onDestroy: import("vue").PropType<() => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    direction: {
        type: import("vue").PropType<"column" | "row">;
        default: "column" | "row";
        validator(val: "column" | "row"): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    message: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    overlayProps: {
        type: import("vue").PropType<import("../overlay/type").TdOverlayProps>;
        default: () => {};
    };
    placement: {
        type: import("vue").PropType<"top" | "middle" | "bottom">;
        default: "top" | "middle" | "bottom";
        validator(val: "top" | "middle" | "bottom"): boolean;
    };
    preventScrollThrough: BooleanConstructor;
    showOverlay: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"error" | "loading" | "success">;
        validator(val: "error" | "loading" | "success"): boolean;
    };
    onClose: import("vue").PropType<() => void>;
    onDestroy: import("vue").PropType<() => void>;
}>>, {
    direction: "column" | "row";
    duration: number;
    preventScrollThrough: boolean;
    overlayProps: {};
    placement: "top" | "middle" | "bottom";
    showOverlay: boolean;
}, {}>;
export default _default;
